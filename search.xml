<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>QT笔记</title>
      <link href="/2024/08/02/QT%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/02/QT%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="QT笔记"><a href="#QT笔记" class="headerlink" title="QT笔记"></a>QT笔记</h1><h2 id="1、qt开发的快捷键"><a href="#1、qt开发的快捷键" class="headerlink" title="1、qt开发的快捷键"></a>1、qt开发的快捷键</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注释</span></span><br><span class="line">ctrl + / </span><br><span class="line"><span class="comment">//运行</span></span><br><span class="line">ctrl + r</span><br><span class="line"><span class="comment">//编译</span></span><br><span class="line">ctrl + b</span><br><span class="line"><span class="comment">//字体缩放</span></span><br><span class="line">ctrl +鼠标滚轮</span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line">ctrl + f</span><br><span class="line"><span class="comment">//整行移动</span></span><br><span class="line">ctrl + shift +或者↓</span><br><span class="line"><span class="comment">//自动对齐</span></span><br><span class="line">ctrl + i;</span><br><span class="line"><span class="comment">//同名之间的.h和.cpp切换</span></span><br><span class="line">F4</span><br><span class="line"><span class="comment">//帮助文档第一种方式 F1 第二种左侧按钮 第三种 c: \gt\gt5.6.0\5.6\mingw49_32\bin</span></span><br></pre></td></tr></table></figure><h2 id="2、窗口显示-show"><a href="#2、窗口显示-show" class="headerlink" title="2、窗口显示 show"></a>2、窗口显示 show</h2><p>窗口widget显示可以调用 <code>show()</code> 但是这个是以顶层的方式进行弹出显示</p><p>qt的坐标系为</p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240728162443462.png" alt="image-20240728162443462"></p><h2 id="3、创建按钮"><a href="#3、创建按钮" class="headerlink" title="3、创建按钮"></a>3、创建按钮</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.首先要包含头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.创建按钮</span></span><br><span class="line">QPushButton *btn = <span class="keyword">new</span> QPushButton;</span><br><span class="line">btn-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">btn-&gt;<span class="built_in">setText</span>(<span class="string">&quot;按钮&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.创建按钮的第二个方式（但是会出现以控件的大小来创建窗口）</span></span><br><span class="line">QPushButton *btn2 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;按钮2&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定窗口大小</span></span><br><span class="line"><span class="built_in">resize</span>(<span class="number">600</span>,<span class="number">400</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//移动btn2按钮</span></span><br><span class="line">btn2-&gt;<span class="built_in">move</span>(<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置固定窗口大小</span></span><br><span class="line"><span class="built_in">setFixedSize</span>(<span class="number">600</span>,<span class="number">400</span>);</span><br></pre></td></tr></table></figure><h2 id="4-QDebug的使用"><a href="#4-QDebug的使用" class="headerlink" title="4.QDebug的使用"></a>4.QDebug的使用</h2><p>像命令行一样进行输出信息</p><p>首先需要包含头文件</p><p><code>#include&lt;QDebug&gt;</code></p><p>输出</p><p><code>qDebug() &lt;&lt; &quot;Hello World&quot;；</code></p><h2 id="4、绑定事件"><a href="#4、绑定事件" class="headerlink" title="4、绑定事件"></a>4、绑定事件</h2><p>信号可以绑定事件 也可以绑定 信号</p><p>一个信号可以绑定多个槽函数</p><p>多个信号 可以绑定一个槽函数</p><p><code>connect(信号的发送者，发送的信号，信号的接受者，处理的槽函数)</code></p><p><code>connect(sender, SIGNAL(signalName()), receiver, SLOT(slotName()));</code></p><ul><li>sender：发射信号的对象名称</li><li>signalName()：信号名称</li><li>receiver：接收信号的对象名称，一般情况下为槽函数所属对象，写this即可</li><li>slotName()：槽函数名称</li></ul><h3 id="①自定义的信号"><a href="#①自定义的信号" class="headerlink" title="①自定义的信号"></a>①自定义的信号</h3><p>只需要声明 不需要实现</p><p>写在 <code>signals</code> 下</p><h3 id="②自定义的槽函数"><a href="#②自定义的槽函数" class="headerlink" title="②自定义的槽函数"></a>②自定义的槽函数</h3><p>可以写在全局函数 也可以写在对象的public下</p><h3 id="③信号和槽函数的参数"><a href="#③信号和槽函数的参数" class="headerlink" title="③信号和槽函数的参数"></a>③信号和槽函数的参数</h3><p>信号的参数个数 <strong>大于等于</strong> 槽函数的参数个数</p><p>信号和槽函数的参数类型<strong>必须一致</strong></p><p>1.信号和槽函数具有相同数量和类型的参数。这时可以直接连接且无需出现函数参数：</p><p><code>connect(lineEdit, &amp;QLineEdit::textChanged, this, &amp;Widget::do_textChanged);</code><br>在上面示例中，信号textChanged(QString)和槽函数do_textChanged(QString)参数相同。</p><p>2.信号的参数多于槽函数的参数。槽函数将忽略信号的多余参数，这个特性允许你在信号和槽参数不完全匹配的情况下，仍然能够正常工作。正常情况下，不推荐把槽函数设计为overload型。</p><p>3.某些信号的参数有默认值。也就是说同一信号的参数分为有参数和无参数，如QCheckBox的clicked()信号和clicked(bool)信号。这时connect()函数有两种写法：</p><blockquote><p>a.设置不同名字的槽函数：</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//槽函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">do_checked</span><span class="params">(<span class="type">bool</span> checked)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">do_checked_NoParam</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//connect()函数</span></span><br><span class="line"><span class="built_in">connect</span>(checkBox, &amp;QCheckBox::clicked, <span class="keyword">this</span>, &amp;Widget::do_checked);</span><br><span class="line"><span class="built_in">connect</span>(checkBox, &amp;QCheckBox::clicked, <span class="keyword">this</span>, &amp;Widget::do_checked_NoParam);</span><br></pre></td></tr></table></figure><blockquote><p>b.使用模板函数qOverload()来明确参数类型：</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">connect</span>(checkBox, &amp;QCheckBox::clicked, <span class="keyword">this</span>, <span class="built_in">qOverload</span>&lt;<span class="type">bool</span>&gt;(&amp;Widget::do_checked));</span><br><span class="line"><span class="built_in">connect</span>(checkBox, &amp;QCheckBox::clicked, <span class="keyword">this</span>, qOverload&lt;&gt;(&amp;Widget::do_checked));     </span><br></pre></td></tr></table></figure><h3 id="④样例—QT-001"><a href="#④样例—QT-001" class="headerlink" title="④样例—QT_001"></a>④样例—<code>QT_001</code></h3><p>​    <code>connect(btn1, &amp;QPushButton::clicked, this, &amp;myWidget::close);</code></p><p>​    <code>connect(btn2,&amp;QPushButton::clicked,this,&amp;button_clicked);</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">myWidget::<span class="built_in">myWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::myWidget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建老师对象</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;t = <span class="keyword">new</span> <span class="built_in">Teacher</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建按钮</span></span><br><span class="line">    QPushButton *btn1 = <span class="keyword">new</span> QPushButton;</span><br><span class="line">    btn1-&gt;<span class="built_in">setParent</span>(<span class="keyword">this</span>);</span><br><span class="line">    btn1-&gt;<span class="built_in">setText</span>(<span class="string">&quot;按钮1&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建按钮的第二个方式（但是会出现以控件的大小来创建窗口）</span></span><br><span class="line">    QPushButton *btn2 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;按钮2&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指定窗口大小</span></span><br><span class="line">    <span class="built_in">resize</span>(<span class="number">600</span>,<span class="number">400</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//移动btn2按钮</span></span><br><span class="line">    btn2-&gt;<span class="built_in">move</span>(<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置固定窗口大小</span></span><br><span class="line">    <span class="built_in">setFixedSize</span>(<span class="number">600</span>,<span class="number">400</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//按钮1绑定事件</span></span><br><span class="line">    <span class="built_in">connect</span>(btn1, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;myWidget::close);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//按钮2绑定事件 自定义槽函数</span></span><br><span class="line">    <span class="comment">//按钮2点击后 触发treat函数</span></span><br><span class="line">    <span class="comment">// connect(btn2, &amp;QPushButton::clicked, this, [this]()&#123;</span></span><br><span class="line">    <span class="comment">//     t-&gt;treat();</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line">    <span class="comment">//connect(btn2,&amp;QPushButton::clicked,this,&amp;button_clicked);</span></span><br><span class="line">    <span class="built_in">connect</span>(btn2,&amp;QPushButton::clicked,t,&amp;Teacher::test);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义无参数的信号和槽函数</span></span><br><span class="line">    <span class="built_in">void</span>(Teacher::*Signal)() = &amp;Teacher::hungry;</span><br><span class="line">    <span class="built_in">void</span>(Teacher::*Slot)() = &amp;Teacher::treat;</span><br><span class="line">    <span class="built_in">connect</span>(t,Signal,t,Slot);</span><br><span class="line">    <span class="comment">//在调用action后 会发出hungry的信号 从而调用treat函数</span></span><br><span class="line">    <span class="built_in">action</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义带参数的信号和槽函数(存在两个版本 编译器无法找到是哪一个函数）</span></span><br><span class="line">    <span class="comment">//后面的(QString)就代表了是有参数的</span></span><br><span class="line">    <span class="built_in">void</span>(Teacher::*teacherSignal)(QString) = &amp;Teacher::hungry;</span><br><span class="line">    <span class="built_in">void</span>(Teacher::*teacherSlot)(QString) = &amp;Teacher::treat;</span><br><span class="line">    <span class="built_in">connect</span>(t,teacherSignal,t,teacherSlot);</span><br><span class="line">    <span class="built_in">action</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myWidget::action</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//emit t-&gt;hungry();</span></span><br><span class="line">    emit t-&gt;<span class="built_in">hungry</span>(<span class="string">&quot;鱼香肉丝&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">button_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;按钮被点击了&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myWidget::~<span class="built_in">myWidget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5、QString转为char-类型"><a href="#5、QString转为char-类型" class="headerlink" title="5、QString转为char *类型"></a>5、QString转为char *类型</h2><p><code>str.toUtf8().data()</code></p><h2 id="6、Lambda表达式"><a href="#6、Lambda表达式" class="headerlink" title="6、Lambda表达式"></a>6、Lambda表达式</h2><p>C++中lambda表达式的构成</p><p>[函数对象参数] (操作符重载函数参数) mutable -&gt;返回值{函数体}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[capture] (parameters) mutable -&gt;return-type</span><br><span class="line">&#123;</span><br><span class="line"> statement</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>① 函数对象参数；</p><p>[]，标识一个<strong>Lambda的开始</strong>，这部分必须存在，<strong>不能省略</strong>。函数对象参数是传递给编译器自动生成的函数对象类的构造函数的。函数对象参数只能使用那些到定义Lambda为止时Lambda所在作用范围内可见的局部变量（包括Lambda所在类的this）。函数对象参数有以下形式：</p><p>空。没有使用任何函数对象参数。</p><p>​&#x3D;。函数体内可以使用Lambda所在作用范围内所有可见的局部变量（包括Lambda所在类的this），并且是<strong>值传递方式</strong>（相当于编译器自动为我们按值传递了所有局部变量）。</p><p>​ &amp;。函数体内可以使用Lambda所在作用范围内所有可见的局部变量（包括Lambda所在类的this），并且是<strong>引用传递方式</strong>（相当于编译器自动为我们按引用传递了所有局部变量）。</p><p>​this。函数体内可以使用Lambda所在类中的成员变量。</p><p>​a。将a按值进行传递。按值进行传递时，函数体内不能修改传递进来的a的拷贝，因为默认情况下函数是const的。<strong>要修改传递进来的a的拷贝</strong>，可以添加mutable修饰符。</p><p>​&amp;a。将a按引用进行传递。</p><p>​a, &amp;b。将a按值进行传递，b按引用进行传递。</p><p>​ &#x3D;，&amp;a, &amp;b。除a和b按引用进行传递外，其他参数都按值进行传递。</p><p>​ &amp;, a, b。除a和b按值进行传递外，其他参数都按引用进行传递。</p><p>② 操作符重载函数参数；</p><p>​标识重载的()操作符的参数，没有参数时，这部分可以省略。参数可以通过按值（如：(a,b)）和按引用（如：(&amp;a,&amp;b)）两种方式进行传递。</p><p>③ 可修改标示符；</p><p>​mutable声明，这部分可以省略。按值传递函数对象参数时，<strong>加上mutable修饰符后，可以修改按值传递进来的拷贝（注意是能修改拷贝，而不是值本身）</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">QPushButton * myBtn = <span class="keyword">new</span> <span class="built_in">QPushButton</span> (<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">QPushButton * myBtn2 = <span class="keyword">new</span> <span class="built_in">QPushButton</span> (<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">myBtn2-&gt;<span class="built_in">move</span>(<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">connect</span>(myBtn,&amp;QPushButton::clicked,<span class="keyword">this</span>,[m] ()<span class="keyword">mutable</span> &#123; m = <span class="number">100</span> + <span class="number">10</span>; <span class="built_in">qDebug</span>() &lt;&lt; m; &#125;);</span><br><span class="line"><span class="built_in">connect</span>(myBtn2,&amp;QPushButton::clicked,<span class="keyword">this</span>,[=] ()  &#123; <span class="built_in">qDebug</span>() &lt;&lt; m; &#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; m;</span><br></pre></td></tr></table></figure><p>④ 函数返回值；</p><p>​-&gt;返回值类型，标识函数返回值的类型，当返回值为void，或者函数体中只有一处return的地方（此时编译器可以自动推断出返回值类型）时，这部分可以省略。</p><p>⑤ 是函数体；</p><p>​{}，标识函数的实现，这部分不能省略，但函数体可以为空。</p><h2 id="7、菜单栏和工具栏"><a href="#7、菜单栏和工具栏" class="headerlink" title="7、菜单栏和工具栏"></a>7、菜单栏和工具栏</h2><p><code>QMenuBar </code> 和 <code>QToolBar</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建菜单栏只能有一个（所以用setMenuBar）</span></span><br><span class="line">QMenuBar *bar = <span class="built_in">menuBar</span>();</span><br><span class="line"><span class="comment">//将菜单栏放在窗口中</span></span><br><span class="line"><span class="built_in">setMenuBar</span>(bar);</span><br><span class="line"><span class="comment">//创建菜单</span></span><br><span class="line">QMenu *file = bar-&gt;<span class="built_in">addMenu</span>(<span class="string">&quot;文件&quot;</span>);</span><br><span class="line">QMenu *edit = bar-&gt;<span class="built_in">addMenu</span>(<span class="string">&quot;编辑&quot;</span>);</span><br><span class="line"><span class="comment">//创建菜单项</span></span><br><span class="line">QAction *new_action = file-&gt;<span class="built_in">addAction</span>(<span class="string">&quot;新建&quot;</span>);</span><br><span class="line"><span class="comment">//创建菜单的分隔符</span></span><br><span class="line">file-&gt;<span class="built_in">addSeparator</span>();</span><br><span class="line">QAction *open_action =file-&gt;<span class="built_in">addAction</span>(<span class="string">&quot;打开&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建工具栏 可以有多个（所以用addToolBar）</span></span><br><span class="line">QToolBar *toolBar = <span class="keyword">new</span> <span class="built_in">QToolBar</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将工具栏放在窗口中</span></span><br><span class="line"><span class="built_in">addToolBar</span>(toolBar);</span><br><span class="line"></span><br><span class="line"><span class="comment">//工具栏的设置</span></span><br><span class="line"><span class="comment">//设置只能左右停靠</span></span><br><span class="line">toolBar-&gt;<span class="built_in">setAllowedAreas</span>(Qt::LeftToolBarArea | Qt::RightToolBarArea);</span><br><span class="line"><span class="comment">//设置浮动</span></span><br><span class="line">toolBar-&gt;<span class="built_in">setFloatable</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//设置移动</span></span><br><span class="line">toolBar-&gt;<span class="built_in">setMovable</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置工具栏内容</span></span><br><span class="line">toolBar-&gt;<span class="built_in">addAction</span>(<span class="string">&quot;工具一&quot;</span>);</span><br><span class="line">toolBar-&gt;<span class="built_in">addAction</span>(<span class="string">&quot;工具二&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//工具栏添加控件</span></span><br><span class="line">QPushButton *btn = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;工具&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">toolBar-&gt;<span class="built_in">addWidget</span>(btn);</span><br></pre></td></tr></table></figure><h2 id="8、状态栏"><a href="#8、状态栏" class="headerlink" title="8、状态栏"></a>8、状态栏</h2><p><code>QStatusBar</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//状态栏</span></span><br><span class="line">QStatusBar *statusBar = <span class="keyword">new</span> <span class="built_in">QStatusBar</span>();</span><br><span class="line"><span class="comment">//设置状态栏到窗口中</span></span><br><span class="line"><span class="built_in">setStatusBar</span>(statusBar);</span><br><span class="line"><span class="comment">//放标签控件</span></span><br><span class="line">QLabel * label = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="string">&quot;左侧提示信息&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">statusBar-&gt;<span class="built_in">addWidget</span>(label);</span><br><span class="line">QLabel * label2 = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="string">&quot;右侧提示信息&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">statusBar-&gt;<span class="built_in">addPermanentWidget</span>(label2);</span><br></pre></td></tr></table></figure><h2 id="9、铆接部件（浮动窗口）"><a href="#9、铆接部件（浮动窗口）" class="headerlink" title="9、铆接部件（浮动窗口）"></a>9、铆接部件（浮动窗口）</h2><p><code>QDockWidget</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//铆接部件（浮动窗口） 可以有多个</span></span><br><span class="line">QDockWidget *dockwidhet =  <span class="keyword">new</span> <span class="built_in">QDockWidget</span>(<span class="string">&quot;浮动&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line"><span class="comment">//设置在窗口的下方</span></span><br><span class="line"><span class="built_in">addDockWidget</span>(Qt::BottomDockWidgetArea ,dockwidhet);</span><br><span class="line"><span class="comment">//设置后期停靠区域 只允许上下</span></span><br><span class="line">dockwidhet-&gt;<span class="built_in">setAllowedAreas</span>(Qt::TopDockWidgetArea | Qt::BottomDockWidgetArea);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置 编辑器 为中心部件（仅有一个）</span></span><br><span class="line">QTextEdit *edit_text = <span class="keyword">new</span> <span class="built_in">QTextEdit</span>(<span class="keyword">this</span>);</span><br><span class="line"><span class="built_in">setCentralWidget</span>(edit_text);</span><br></pre></td></tr></table></figure><h2 id="10、添加资源项目"><a href="#10、添加资源项目" class="headerlink" title="10、添加资源项目"></a>10、添加资源项目</h2><p>①将文件拷贝到当前项目位置处 </p><p>②右键项目–添加新文件   选择QT–QT Resource File</p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731144637139.png" alt="image-20240731144637139"></p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731144657856.png" alt="image-20240731144657856"></p><p>③生成后缀为 qrc 的文件</p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731144743096.png" alt="image-20240731144743096"></p><p>④添加前缀并且添加文件 即可添加成功资源文件</p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731144832303.png" alt="image-20240731144832303"></p><p>⑤使用资源文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用qt资源</span></span><br><span class="line">ui-&gt;actionnew-&gt;<span class="built_in">setIcon</span>(<span class="built_in">QIcon</span>(<span class="string">&quot;:/1test.png&quot;</span>));</span><br><span class="line">ui-&gt;actionopen-&gt;<span class="built_in">setIcon</span>(<span class="built_in">QIcon</span>(<span class="string">&quot;:/2test.png&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731145219545.png" alt="image-20240731145219545"></p><h2 id="11、模态和非模态"><a href="#11、模态和非模态" class="headerlink" title="11、模态和非模态"></a>11、模态和非模态</h2><p>模态对话框–不可以对其他窗口进行操作</p><p>非模态对话框–可以对其他窗口进行操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//绑定事件 点击新建 弹出对话框</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;actionnew, &amp;QAction::triggered,[=]()&#123;</span><br><span class="line">    <span class="comment">//对话框</span></span><br><span class="line">    <span class="comment">//1.模态对话框--不可以对其他窗口进行操作</span></span><br><span class="line">    QDialog <span class="built_in">dlg</span>(<span class="keyword">this</span>);</span><br><span class="line">    dlg.<span class="built_in">resize</span>(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">    dlg.<span class="built_in">exec</span>();</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;模态对话框弹出&quot;</span>;</span><br><span class="line">    <span class="comment">//2.非模态对话框--可以对其他窗口进行操作</span></span><br><span class="line">    QDialog *dlg2 = <span class="keyword">new</span> <span class="built_in">QDialog</span>(<span class="keyword">this</span>);<span class="comment">//创建在堆 当函数结束的时候 不会消失</span></span><br><span class="line">    dlg2-&gt;<span class="built_in">setAttribute</span>(Qt::WA_DeleteOnClose);<span class="comment">//设置当对象关闭的之后进行释放</span></span><br><span class="line">    dlg2-&gt;<span class="built_in">resize</span>(<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">    dlg2-&gt;<span class="built_in">show</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12、消息对话框"><a href="#12、消息对话框" class="headerlink" title="12、消息对话框"></a>12、消息对话框</h2><p><strong>得到用户点击的按钮</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ret存储的是用户点击的按钮</span></span><br><span class="line"><span class="type">int</span> ret = QMessageBox::<span class="built_in">question</span>(<span class="keyword">this</span>,<span class="string">&quot;question&quot;</span>,<span class="string">&quot;问题&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (ret == QMessageBox::Yes)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;用户点击了“确定”按钮&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (ret == QMessageBox::No)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;用户点击了“取消”按钮&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数1：父亲对象</p><p>参数2：标题</p><p>参数3：文本内容</p><p>参数4：按键类型</p><p>参数5 :  默认按钮</p><h3 id="①错误消息对话框"><a href="#①错误消息对话框" class="headerlink" title="①错误消息对话框"></a>①错误消息对话框</h3><p><code>QMessageBox::critical(this,&quot;critical&quot;,&quot;错误&quot;);</code></p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731151328516.png" alt="image-20240731151328516"></p><h3 id="②信息对话框"><a href="#②信息对话框" class="headerlink" title="②信息对话框"></a>②信息对话框</h3><p><code>QMessageBox::information(this,&quot;info&quot;,&quot;信息&quot;);</code></p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731151501724.png" alt="image-20240731151501724"></p><h3 id="③提问对话框"><a href="#③提问对话框" class="headerlink" title="③提问对话框"></a>③提问对话框</h3><p><code>QMessageBox::question(this,&quot;question&quot;,&quot;问题&quot;);</code></p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731151554655.png" alt="image-20240731151554655"></p><h3 id="④警告对话框"><a href="#④警告对话框" class="headerlink" title="④警告对话框"></a>④警告对话框</h3><p><code>QMessageBox::warning(this,&quot;warning&quot;,&quot;警告&quot;); </code></p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731153454528.png" alt="image-20240731153454528"></p><h3 id="⑤颜色对话框"><a href="#⑤颜色对话框" class="headerlink" title="⑤颜色对话框"></a>⑤颜色对话框</h3><p><code>QColor color = QColorDialog::getColor(QColor(255,0,0)); qDebug() &lt;&lt; color.red() &lt;&lt; color.blue() &lt;&lt; color.green();</code></p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731153922383.png" alt="image-20240731153922383"></p><h3 id="⑥文件对话框"><a href="#⑥文件对话框" class="headerlink" title="⑥文件对话框"></a>⑥文件对话框</h3><p>文件对话框 参数1–父亲 参数2–标题 参数3–默认打开路径 参数4–过滤文件<br><code> QString path = QFileDialog::getOpenFileName(this,&quot;打开文件&quot;,&quot;C:\\Users\\ZW\\Desktop&quot;,&quot;(*.txt)&quot;);</code></p><h3 id="⑦字体对话框"><a href="#⑦字体对话框" class="headerlink" title="⑦字体对话框"></a>⑦字体对话框</h3><p><code>bool flag; QFont select = QFontDialog::getFont(&amp;flag,QFont(&quot;宋体&quot;,36));</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//绑定事件 点击新建 弹出对话框</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;actionnew, &amp;QAction::triggered,[=]()&#123;</span><br><span class="line">    <span class="comment">//对话框</span></span><br><span class="line">    <span class="comment">//1.模态对话框--不可以对其他窗口进行操作</span></span><br><span class="line">    <span class="comment">// QDialog dlg(this);</span></span><br><span class="line">    <span class="comment">// dlg.resize(200,200);</span></span><br><span class="line">    <span class="comment">// dlg.exec();</span></span><br><span class="line">    <span class="comment">// qDebug() &lt;&lt; &quot;模态对话框弹出&quot;;</span></span><br><span class="line">    <span class="comment">//2.非模态对话框--可以对其他窗口进行操作</span></span><br><span class="line">    <span class="comment">// dlg2 = new QDialog(this);//创建在堆 当函数结束的时候 不会消失</span></span><br><span class="line">    <span class="comment">// dlg2-&gt;setAttribute(Qt::WA_DeleteOnClose);//设置当对象关闭的之后进行释放</span></span><br><span class="line">    <span class="comment">// dlg2-&gt;resize(200,200);</span></span><br><span class="line">    <span class="comment">// dlg2-&gt;show();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//消息对话框</span></span><br><span class="line">    <span class="comment">//错误对话框</span></span><br><span class="line">    <span class="comment">//QMessageBox::critical(this,&quot;critical&quot;,&quot;错误&quot;);</span></span><br><span class="line">    <span class="comment">//信息对话框</span></span><br><span class="line">    <span class="comment">//QMessageBox::information(this,&quot;info&quot;,&quot;信息&quot;);</span></span><br><span class="line">    <span class="comment">//提问对话框</span></span><br><span class="line">    <span class="comment">// int ret = QMessageBox::question(this,&quot;question&quot;,&quot;问题&quot;);</span></span><br><span class="line">    <span class="comment">//  if (ret == QMessageBox::Yes)</span></span><br><span class="line">    <span class="comment">//  &#123;</span></span><br><span class="line">    <span class="comment">//     qDebug() &lt;&lt; &quot;用户点击了“确定”按钮&quot;;</span></span><br><span class="line">    <span class="comment">//  &#125; else if (ret == QMessageBox::No)</span></span><br><span class="line">    <span class="comment">//  &#123;</span></span><br><span class="line">    <span class="comment">//      qDebug() &lt;&lt; &quot;用户点击了“取消”按钮&quot;;</span></span><br><span class="line">    <span class="comment">//  &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//警告对话框</span></span><br><span class="line">    QMessageBox::<span class="built_in">warning</span>(<span class="keyword">this</span>,<span class="string">&quot;warning&quot;</span>,<span class="string">&quot;警告&quot;</span>); </span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="13、布局设置–P23"><a href="#13、布局设置–P23" class="headerlink" title="13、布局设置–P23"></a>13、布局设置–P23</h2><h3 id="①系统提供的布局控件"><a href="#①系统提供的布局控件" class="headerlink" title="①系统提供的布局控件"></a>①系统提供的布局控件</h3><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/wps1.jpg" alt="img"></p><p>这4个为系统给我们提供的布局的控件，但是使用起来不是非常的灵活</p><h3 id="②利用widget做布局"><a href="#②利用widget做布局" class="headerlink" title="②利用widget做布局"></a>②利用widget做布局</h3><p>第二种布局方式是利用控件里的widget来做布局，在Containers中</p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/wps2.jpg" alt="img"> </p><p>在widget中的控件可以进行水平、垂直、栅格布局等操作，比较灵活。</p><p>再布局的同时我们需要灵活运用弹簧的特性让我们的布局更加的美观</p><p>注意：默认窗口的边框存在一定的距离 可以在layout中进行设置</p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731160617770.png" alt="image-20240731160617770"></p><h2 id="14、控件"><a href="#14、控件" class="headerlink" title="14、控件"></a>14、控件</h2><h3 id="①按钮组"><a href="#①按钮组" class="headerlink" title="①按钮组"></a>①按钮组</h3><p> <code>QPushButton </code> 常用按钮 </p><p> <code>QToolButton</code> 工具按钮  用于显示图片，如图想显示文字，修改风格：toolButtonStyle ， 凸起风格autoRaise</p><p><code>radioButton</code> 单选按钮，设置默认 ui-&gt;rBtnMan-&gt;setChecked(true); </p><p> <code>checkbox</code> 多选按钮，监听状态，2 选中  1 半选 0 未选中</p><h3 id="②QListWidget-列表容器"><a href="#②QListWidget-列表容器" class="headerlink" title="②QListWidget 列表容器"></a>②QListWidget 列表容器</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">QListWidgetItem *item1 = <span class="keyword">new</span> <span class="built_in">QListWidgetItem</span>(<span class="string">&quot;12345&quot;</span>);</span><br><span class="line">QListWidgetItem *item2 = <span class="keyword">new</span> <span class="built_in">QListWidgetItem</span>(<span class="string">&quot;上山打老虎&quot;</span>);</span><br><span class="line"><span class="comment">//设置居中显示</span></span><br><span class="line">item1-&gt;<span class="built_in">setTextAlignment</span>(Qt::AlignHCenter);</span><br><span class="line">item2-&gt;<span class="built_in">setTextAlignment</span>(Qt::AlignHCenter);</span><br><span class="line"></span><br><span class="line"><span class="comment">//加入到QListWidget</span></span><br><span class="line">ui-&gt;listWidget-&gt;<span class="built_in">addItem</span>(item1);</span><br><span class="line">ui-&gt;listWidget-&gt;<span class="built_in">addItem</span>(item2);</span><br></pre></td></tr></table></figure><p><strong>(可以利用addItems一次性添加整个诗内容)</strong></p><h3 id="③QTreeWidget-树控件"><a href="#③QTreeWidget-树控件" class="headerlink" title="③QTreeWidget 树控件"></a>③QTreeWidget 树控件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent): <span class="built_in">QWidget</span>(parent) , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//设置水平头</span></span><br><span class="line">    ui-&gt;treeWidget-&gt;<span class="built_in">setHeaderLabels</span>(<span class="built_in">QStringList</span>() &lt;&lt; <span class="string">&quot;英雄&quot;</span> &lt;&lt; <span class="string">&quot;英雄介绍&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加载顶层节点</span></span><br><span class="line">    QTreeWidgetItem * liItem = <span class="keyword">new</span> <span class="built_in">QTreeWidgetItem</span>(<span class="built_in">QStringList</span>() &lt;&lt; <span class="string">&quot;力量&quot;</span>);</span><br><span class="line">    ui-&gt;treeWidget-&gt;<span class="built_in">addTopLevelItem</span>(liItem);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//追加子节点</span></span><br><span class="line">    QTreeWidgetItem * Item1 = <span class="keyword">new</span> <span class="built_in">QTreeWidgetItem</span>(<span class="built_in">QStringList</span>() &lt;&lt; <span class="string">&quot;zw&quot;</span>  &lt;&lt; <span class="string">&quot;123&quot;</span>);</span><br><span class="line">    QTreeWidgetItem * Item2 = <span class="keyword">new</span> <span class="built_in">QTreeWidgetItem</span>(<span class="built_in">QStringList</span>() &lt;&lt; <span class="string">&quot;zz&quot;</span>  &lt;&lt; <span class="string">&quot;456&quot;</span>);</span><br><span class="line">    QTreeWidgetItem * Item3 = <span class="keyword">new</span> <span class="built_in">QTreeWidgetItem</span>(<span class="built_in">QStringList</span>() &lt;&lt; <span class="string">&quot;ww&quot;</span>  &lt;&lt; <span class="string">&quot;789&quot;</span>);</span><br><span class="line">    liItem-&gt;<span class="built_in">addChild</span>(Item1);</span><br><span class="line">    liItem-&gt;<span class="built_in">addChild</span>(Item2);</span><br><span class="line">    liItem-&gt;<span class="built_in">addChild</span>(Item3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731164125070.png" alt="image-20240731164125070"></p><h3 id="④QTableWidget-表格控件"><a href="#④QTableWidget-表格控件" class="headerlink" title="④QTableWidget 表格控件"></a>④QTableWidget 表格控件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent): <span class="built_in">QWidget</span>(parent) , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置列数</span></span><br><span class="line">    ui-&gt;tableWidget-&gt;<span class="built_in">setColumnCount</span>(<span class="number">3</span>);</span><br><span class="line">    <span class="comment">//设置水平表头</span></span><br><span class="line">    ui-&gt;tableWidget-&gt;<span class="built_in">setHorizontalHeaderLabels</span>(<span class="built_in">QStringList</span>() &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot;年龄&quot;</span> &lt;&lt;<span class="string">&quot;性别&quot;</span>);</span><br><span class="line">    <span class="comment">//设置行数</span></span><br><span class="line">    ui-&gt;tableWidget-&gt;<span class="built_in">setRowCount</span>(<span class="number">3</span>);</span><br><span class="line">    <span class="comment">//设置正文</span></span><br><span class="line">    QStringList name;</span><br><span class="line">    name &lt;&lt;<span class="string">&quot;zw&quot;</span>&lt;&lt; <span class="string">&quot;zz&quot;</span> &lt;&lt; <span class="string">&quot;ww&quot;</span>;</span><br><span class="line"></span><br><span class="line">    QStringList sex;</span><br><span class="line">    sex &lt;&lt; <span class="string">&quot;男&quot;</span> &lt;&lt; <span class="string">&quot;女&quot;</span> &lt;&lt; <span class="string">&quot;男&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> col = <span class="number">0</span>;</span><br><span class="line">        ui-&gt;tableWidget-&gt;<span class="built_in">setItem</span>(i,col++,<span class="keyword">new</span> <span class="built_in">QTableWidgetItem</span>(name[i]));</span><br><span class="line">        ui-&gt;tableWidget-&gt;<span class="built_in">setItem</span>(i,col++,<span class="keyword">new</span> <span class="built_in">QTableWidgetItem</span>(sex[i]));</span><br><span class="line">        <span class="comment">//int转为QString类型</span></span><br><span class="line">        ui-&gt;tableWidget-&gt;<span class="built_in">setItem</span>(i,col++,<span class="keyword">new</span> <span class="built_in">QTableWidgetItem</span>(QString::<span class="built_in">number</span>(<span class="number">18</span>+i)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240731165118253.png" alt="image-20240731165118253"></p><h3 id="⑤其他控件介绍"><a href="#⑤其他控件介绍" class="headerlink" title="⑤其他控件介绍"></a>⑤其他控件介绍</h3><blockquote><p>stackedWidget  栈控件</p></blockquote><p><code>ui-&gt;stackedWidget-&gt;setCurrentIndex(1);</code></p><blockquote><p>下拉框</p></blockquote><p><code>ui-&gt;comboBox-&gt;addItem(&quot;奔驰&quot;);</code></p><blockquote><p>QLabel 显示图片</p></blockquote><p><code>ui-&gt;lbl_Image-&gt;setPixmap(QPixmap(&quot;:/Image/butterfly.png&quot;))</code></p><blockquote><p>QLabel显示动图  gif图片</p></blockquote><p><code> ui-&gt;lbl_movie-&gt;setMovie(movie);</code> </p><p>播放动图</p><p><code>movie-&gt;start();</code></p><h2 id="15、自定义控件"><a href="#15、自定义控件" class="headerlink" title="15、自定义控件"></a>15、自定义控件</h2><h3 id="①添加新文件"><a href="#①添加新文件" class="headerlink" title="①添加新文件"></a>①添加新文件</h3><p>添加了.ui文件 即可通过这个ui文件对控件进行封装</p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240801110348968.png" alt="image-20240801110348968"></p><h3 id="②进行设计自定义控件"><a href="#②进行设计自定义控件" class="headerlink" title="②进行设计自定义控件"></a>②进行设计自定义控件</h3><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240801110619289.png" alt="image-20240801110619289"></p><h3 id="③将设计好的控件添加到主窗口中"><a href="#③将设计好的控件添加到主窗口中" class="headerlink" title="③将设计好的控件添加到主窗口中"></a>③将设计好的控件添加到主窗口中</h3><p>选择 <strong>widget</strong> 控件 并右键其 选择 <strong>提升为</strong></p><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240801110715728.png" alt="image-20240801110715728"></p><h3 id="④进行功能的设置"><a href="#④进行功能的设置" class="headerlink" title="④进行功能的设置"></a>④进行功能的设置</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置数字加减 从而使得 滑动条移动</span></span><br><span class="line"><span class="comment">//使用函数指针 选择参数为(int)的函数</span></span><br><span class="line"><span class="built_in">void</span>(QSpinBox::*spSiganal)(<span class="type">int</span>) = &amp;QSpinBox::valueChanged;</span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;spinBox,spSiganal,ui-&gt;horizontalSlider,&amp;QSlider::setValue);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置滑动条移动 从而使得 数字发生改变</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;horizontalSlider,&amp;QSlider::valueChanged,ui-&gt;spinBox,&amp;QSpinBox::setValue);</span><br></pre></td></tr></table></figure><p><img src="/2024/08/02/QT%E7%AC%94%E8%AE%B0/image-20240801111632248.png" alt="image-20240801111632248"></p><h2 id="16、QT的鼠标事件"><a href="#16、QT的鼠标事件" class="headerlink" title="16、QT的鼠标事件"></a>16、QT的鼠标事件</h2><h3 id="①鼠标的进入和离开事件"><a href="#①鼠标的进入和离开事件" class="headerlink" title="①鼠标的进入和离开事件"></a>①鼠标的进入和离开事件</h3><p>只需要重写父（QLabel）函数的 <code>enterEvent(QEnterEvent * event)</code> 和 <code>leaveEvent(QEvent *)</code>  即可实现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鼠标进入事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::enterEvent</span><span class="params">(QEnterEvent * event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;鼠标进入&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鼠标离开事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::leaveEvent</span><span class="params">(QEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;鼠标离开&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="②鼠标的按下与释放"><a href="#②鼠标的按下与释放" class="headerlink" title="②鼠标的按下与释放"></a>②鼠标的按下与释放</h3><p>只需要重写父（QLabel）函数的 <code>mousePressEvent(QMouseEvent *ev)</code> 和 <code>mouseReleaseEventQMouseEvent *ev)</code>  即可实现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鼠标点击事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::mousePressEvent</span><span class="params">(QMouseEvent *ev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;鼠标按下&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//鼠标释放事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::mouseReleaseEvent</span><span class="params">(QMouseEvent *ev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;鼠标释放&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="③鼠标的移动"><a href="#③鼠标的移动" class="headerlink" title="③鼠标的移动"></a>③鼠标的移动</h3><p>只需要重写父函数（QLabel）的 <code>mouseMoveEvent(QMouseEvent *ev)</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鼠标移动事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myLabel::mouseMoveEvent</span><span class="params">(QMouseEvent *ev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;鼠标移动&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="④如果需要得到鼠标的信息-则是需要使用其参数"><a href="#④如果需要得到鼠标的信息-则是需要使用其参数" class="headerlink" title="④如果需要得到鼠标的信息 则是需要使用其参数"></a>④如果需要得到鼠标的信息 则是需要使用其参数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QString str = <span class="built_in">QString</span>(<span class="string">&quot;鼠标按下了x = %1, y = %2, globalX = %3， gloablY = %4&quot;</span>).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">x</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">y</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalX</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalY</span>());</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;鼠标按下&quot;</span> &lt;&lt; str;</span><br></pre></td></tr></table></figure><h3 id="⑤判断左右按键"><a href="#⑤判断左右按键" class="headerlink" title="⑤判断左右按键"></a>⑤判断左右按键</h3><p>ev-&gt;button() 可以判断所有按键 Qt::LeftButton  Qt::RightButton</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(ev-&gt;<span class="built_in">button</span>() == Qt::LeftButton)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//执行操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ev-&gt;buttons()判断组合按键  <strong>判断move时候的左右键</strong>  结合 &amp; 操作符</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(ev-&gt;<span class="built_in">buttons</span>() &amp; Qt::LeftButton)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//执行操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="⑥设置鼠标的追踪状态-即可捕获非点击状态下的移动"><a href="#⑥设置鼠标的追踪状态-即可捕获非点击状态下的移动" class="headerlink" title="⑥设置鼠标的追踪状态 即可捕获非点击状态下的移动"></a>⑥设置鼠标的追踪状态 即可捕获非点击状态下的移动</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">myLabel::<span class="built_in">myLabel</span>(QWidget *parent): QLabel&#123;parent&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">setMouseTracking</span>(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="17、定时器"><a href="#17、定时器" class="headerlink" title="17、定时器"></a>17、定时器</h2><h3 id="①定时器事件"><a href="#①定时器事件" class="headerlink" title="①定时器事件"></a>①定时器事件</h3><p>定时器事件 只需要重写 <code>void timerEvent(QTimerEvent *)</code> 即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent) : <span class="built_in">QWidget</span>(parent), <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//启动定时器 参数1是间隔单位是Ms</span></span><br><span class="line">    <span class="built_in">startTimer</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//重写定时器的事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::timerEvent</span><span class="params">(QTimerEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//定时器让区域内的内容 每次加1</span></span><br><span class="line">    ui-&gt;timer-&gt;<span class="built_in">setText</span>(QString::<span class="built_in">number</span>(num++));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="②多个定时器"><a href="#②多个定时器" class="headerlink" title="②多个定时器"></a>②多个定时器</h3><p>启动定时器 <code>startTimer(1000);</code> </p><p>启动定时器的返回值是 <code>int</code> 类型 记录的是启动某个事件的 <code>id</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent) : <span class="built_in">QWidget</span>(parent) , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//启动定时器 参数1是间隔单位是Ms</span></span><br><span class="line">    id1 = <span class="built_in">startTimer</span>(<span class="number">1000</span>);</span><br><span class="line">    id2 = <span class="built_in">startTimer</span>(<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::timerEvent</span><span class="params">(QTimerEvent *ev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//定时器1 每隔一秒数字加1</span></span><br><span class="line">    <span class="keyword">if</span>(ev-&gt;<span class="built_in">timerId</span>() == id1)</span><br><span class="line">    &#123;</span><br><span class="line">        ui-&gt;timer-&gt;<span class="built_in">setText</span>(QString::<span class="built_in">number</span>(num++));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(ev-&gt;<span class="built_in">timerId</span>() == id2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//定时器2 每隔两秒数字加1</span></span><br><span class="line">        <span class="type">static</span> <span class="type">int</span> num2 = <span class="number">1</span>;</span><br><span class="line">        ui-&gt;timer2-&gt;<span class="built_in">setText</span>(QString::<span class="built_in">number</span>(num2++));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="③定时器的第二种方式"><a href="#③定时器的第二种方式" class="headerlink" title="③定时器的第二种方式"></a>③定时器的第二种方式</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent) : <span class="built_in">QWidget</span>(parent) , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//启动定时器的第二种方式</span></span><br><span class="line">    QTimer * timer = <span class="keyword">new</span> <span class="built_in">QTimer</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//启动定时器</span></span><br><span class="line">    timer-&gt;<span class="built_in">start</span>(<span class="number">500</span>);</span><br><span class="line">    <span class="comment">//绑定事件</span></span><br><span class="line">    <span class="built_in">connect</span>(timer,&amp;QTimer::timeout,[=]()&#123;</span><br><span class="line">        <span class="type">static</span> <span class="type">int</span> number = <span class="number">1</span>;</span><br><span class="line">        ui-&gt;timer3-&gt;<span class="built_in">setText</span>(QString::<span class="built_in">number</span>(number++));</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="18、事件分发器"><a href="#18、事件分发器" class="headerlink" title="18、事件分发器"></a>18、事件分发器</h2><p>用途：<strong>用于事件的分发</strong></p><p>也可以做拦截操作，不建议</p><p><code>bool event( QEvent * e); </code></p><p>返回值 <strong>如果是true 代表用户处理这个事件，不向下分发了</strong></p><p>e-&gt;type() &#x3D;&#x3D; 鼠标按下 …</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过event事件分发器 拦截 鼠标按下事件</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">event</span><span class="params">(QEvent * e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//拦截 鼠标按下事件</span></span><br><span class="line">    <span class="keyword">if</span>(e-&gt;<span class="built_in">type</span>() == QEvent::MouseButtonPress)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//将QEvent类型的数据e 强制转换为 QMouseEvent类型的数据ev</span></span><br><span class="line">        QMouseEvent *ev = <span class="built_in">static_cast</span>&lt;QMouseEvent *&gt;(e);</span><br><span class="line">        QString str = <span class="built_in">QString</span>(<span class="string">&quot;QEvent 鼠标按下了x = %1, y = %2, globalX = %3， gloablY = %4&quot;</span>).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">x</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">y</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalX</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalY</span>());</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;QEvent 的 鼠标按下&quot;</span> &lt;&lt; str;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// true代表用户自己处理了 不向下分发</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//未拦截的事件 会自动交给父类处理(默认处理）</span></span><br><span class="line">    <span class="comment">//return event(e);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="19、事件过滤器"><a href="#19、事件过滤器" class="headerlink" title="19、事件过滤器"></a>19、事件过滤器</h2><p>在程序将时间分发到事件分发器前，可以利用 <strong>过滤器</strong> 做拦截</p><h3 id="①步骤如下："><a href="#①步骤如下：" class="headerlink" title="①步骤如下："></a>①步骤如下：</h3><h4 id="（1）给控件安装事件过滤器"><a href="#（1）给控件安装事件过滤器" class="headerlink" title="（1）给控件安装事件过滤器"></a>（1）给控件安装事件过滤器</h4><p><code>ui-&gt;label-&gt;installEventFilter(this);</code></p><h4 id="（2）重写-eventFilter函数-（obj-，-e）"><a href="#（2）重写-eventFilter函数-（obj-，-e）" class="headerlink" title="（2）重写 eventFilter函数 （obj ， e）"></a>（2）重写 eventFilter函数 （obj ， e）</h4><p><code>eventFilter(QObject *obj, QEvent * e)</code></p><p>拦截某个事件后 原本的处理就失效 转而实现拦截器中的事件处理</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//重写事件过滤器(拦截了鼠标点击的事件)</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Widget::eventFilter</span><span class="params">(QObject *obj, QEvent * e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(obj == ui-&gt;label)<span class="comment">//判断是哪个部件的过滤器</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(e-&gt;<span class="built_in">type</span>() == QEvent::MouseButtonPress)<span class="comment">//判断是什么条件的过滤器</span></span><br><span class="line">        &#123;</span><br><span class="line">            QMouseEvent *ev = <span class="built_in">static_cast</span>&lt;QMouseEvent *&gt;(e);</span><br><span class="line">            QString str = <span class="built_in">QString</span>(<span class="string">&quot;事件过滤器中的 鼠标按下了x = %1, y = %2, globalX = %3， gloablY = %4&quot;</span>).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">x</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">y</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalX</span>()).<span class="built_in">arg</span>(ev-&gt;<span class="built_in">globalY</span>());</span><br><span class="line">            <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;事件过滤器中的 鼠标按下&quot;</span> &lt;&lt; str;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">// true代表用户自己处理了 不向下分发</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//其他的默认处理</span></span><br><span class="line">    <span class="keyword">return</span> QWidget::<span class="built_in">eventFilter</span>(obj,e);<span class="comment">//未拦截的事件 会自动交给父类处理(默认处理）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="20、绘图事件"><a href="#20、绘图事件" class="headerlink" title="20、绘图事件"></a>20、绘图事件</h2><h3 id="①先重写绘图函数"><a href="#①先重写绘图函数" class="headerlink" title="①先重写绘图函数"></a>①先重写绘图函数</h3><p><code>paintEvent(QPaintEvent *)</code></p><h3 id="②声明画家对象"><a href="#②声明画家对象" class="headerlink" title="②声明画家对象"></a>②声明画家对象</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//绘图事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 需要先包含#include &lt;QPainter&gt; //画家类</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//画家对象</span></span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;<span class="comment">//在当前窗口下绘画</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//画笔对象</span></span><br><span class="line">    <span class="function">QPen <span class="title">pen</span><span class="params">(QColor(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span></span>;</span><br><span class="line">    <span class="comment">//让画家 使用这个笔</span></span><br><span class="line">    painter.<span class="built_in">setPen</span>(pen);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//画刷对象</span></span><br><span class="line">    <span class="function">QBrush <span class="title">brush</span><span class="params">(QColor(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>))</span></span>;</span><br><span class="line">    <span class="comment">//让画家使用这个画刷</span></span><br><span class="line">    painter.<span class="built_in">setBrush</span>(brush);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//画线</span></span><br><span class="line">    painter.<span class="built_in">drawLine</span>(<span class="built_in">QPoint</span>(<span class="number">0</span>,<span class="number">0</span>),<span class="built_in">QPoint</span>(<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">    <span class="comment">//椭圆</span></span><br><span class="line">    painter.<span class="built_in">drawEllipse</span>(<span class="built_in">QPoint</span>(<span class="number">100</span>,<span class="number">100</span>),<span class="number">50</span>,<span class="number">50</span>);</span><br><span class="line">    <span class="comment">//画矩形</span></span><br><span class="line">    painter.<span class="built_in">drawRect</span>(<span class="built_in">QRect</span>(<span class="number">20</span>,<span class="number">20</span>,<span class="number">50</span>,<span class="number">50</span>));</span><br><span class="line">    <span class="comment">//画文字</span></span><br><span class="line">    painter.<span class="built_in">drawText</span>(<span class="built_in">QRect</span>(<span class="number">10</span>,<span class="number">200</span>,<span class="number">100</span>,<span class="number">50</span>),<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="③绘图的高级设置"><a href="#③绘图的高级设置" class="headerlink" title="③绘图的高级设置"></a>③绘图的高级设置</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//绘图事件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 需要先包含#include &lt;QPainter&gt; //画家类</span></span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;<span class="comment">//在当前窗口下绘画</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// painter.drawEllipse(QPoint(100,100),50,50);</span></span><br><span class="line">    <span class="comment">// //设置抗锯齿(效率低）</span></span><br><span class="line">    <span class="comment">// painter.setRenderHint(QPainter::Antialiasing);</span></span><br><span class="line">    <span class="comment">// //画圆</span></span><br><span class="line">    <span class="comment">// painter.drawEllipse(QPoint(200,100),50,50);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//画矩形</span></span><br><span class="line">    painter.<span class="built_in">drawRect</span>(<span class="built_in">QRect</span>(<span class="number">20</span>,<span class="number">20</span>,<span class="number">50</span>,<span class="number">50</span>));</span><br><span class="line">    painter.<span class="built_in">translate</span>(<span class="number">100</span>,<span class="number">0</span>);<span class="comment">//让画家移动（100,0）</span></span><br><span class="line">    painter.<span class="built_in">drawRect</span>(<span class="built_in">QRect</span>(<span class="number">20</span>,<span class="number">20</span>,<span class="number">50</span>,<span class="number">50</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="④手动调用绘图事件"><a href="#④手动调用绘图事件" class="headerlink" title="④手动调用绘图事件"></a>④手动调用绘图事件</h3><p>利用画家 画 资源图片</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;<span class="comment">//在当前窗口下绘画</span></span><br><span class="line">painter.<span class="built_in">drawPixmap</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="built_in">QPixmap</span>(<span class="string">&quot;:/image/lenna.jpg&quot;</span>));</span><br></pre></td></tr></table></figure><p>如果需要手动调用绘图事件 则使用update进行更新</p><h3 id="⑤绘图设备"><a href="#⑤绘图设备" class="headerlink" title="⑤绘图设备"></a>⑤绘图设备</h3><p>可以将绘制的画面 保存在本地</p><p><code>QImage</code> 和 <code>QPixmap</code>  的功能类似 </p><p>但是<code>QImage</code> 的像素更加清晰 经过了增强</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent) : <span class="built_in">QWidget</span>(parent) , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//pixmap绘图设备</span></span><br><span class="line">    <span class="function">QPixmap <span class="title">pix</span><span class="params">(<span class="number">300</span>,<span class="number">300</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//声明画家对象</span></span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(&amp;pix)</span></span>;</span><br><span class="line">    painter.<span class="built_in">setPen</span>(<span class="built_in">QPen</span>(Qt::green));</span><br><span class="line">    painter.<span class="built_in">drawEllipse</span>(<span class="built_in">QPoint</span>(<span class="number">150</span>,<span class="number">150</span>),<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//保存</span></span><br><span class="line">    pix.<span class="built_in">save</span>(<span class="string">&quot;D:\\pix.png&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>QPicture</code>绘图设备 可以 记录和重现 绘图指令（主要是用来记录绘图的步骤的）</p><h2 id="21、QFile文件操作"><a href="#21、QFile文件操作" class="headerlink" title="21、QFile文件操作"></a>21、QFile文件操作</h2><h3 id="①读文件操作"><a href="#①读文件操作" class="headerlink" title="①读文件操作"></a>①读文件操作</h3><p><code>QFile</code> 默认读取的格式是 <strong>UTF-8</strong></p><p>格式转换为 <strong>GBK</strong> 格式</p><p><code>QString content = QString::fromLocal8Bit(array);</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">        , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">    &#123;</span><br><span class="line">        ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//点击按钮 弹出选取文件的对话框</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">connect</span>(ui-&gt;pushButton,&amp;QPushButton::clicked,[=]()&#123;</span><br><span class="line">            QString path = QFileDialog::<span class="built_in">getOpenFileName</span>(<span class="keyword">this</span>,<span class="string">&quot;打开文件&quot;</span>,<span class="string">&quot;C:\\Users\\zw\\Desktop&quot;</span>);</span><br><span class="line">            ui-&gt;lineEdit-&gt;<span class="built_in">setText</span>(path);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//指定路径读取内容 放在textEDit中</span></span><br><span class="line">            QFile <span class="built_in">file</span>(path);</span><br><span class="line">            <span class="comment">//QFile默认读取的格式是UTF-8</span></span><br><span class="line">            <span class="comment">//设置打开方式 只读</span></span><br><span class="line">            file.<span class="built_in">open</span>(QIODevice::ReadOnly);</span><br><span class="line">            QByteArray array = file.<span class="built_in">readAll</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// ui-&gt;textEdit-&gt;setText(array);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//改成这样可以读取gbk格式</span></span><br><span class="line">            QString content = QString::<span class="built_in">fromLocal8Bit</span>(array);</span><br><span class="line">            ui-&gt;textEdit-&gt;<span class="built_in">setText</span>(content);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭文件对象</span></span><br><span class="line">        file.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="②写文件操作"><a href="#②写文件操作" class="headerlink" title="②写文件操作"></a>②写文件操作</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//点击按钮 弹出选取文件的对话框</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;pushButton,&amp;QPushButton::clicked,[=]()&#123;</span><br><span class="line">        QString path = QFileDialog::<span class="built_in">getOpenFileName</span>(<span class="keyword">this</span>,<span class="string">&quot;打开文件&quot;</span>,<span class="string">&quot;C:\\Users\\zw\\Desktop&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//指定路径读取内容 放在textEDit中</span></span><br><span class="line">        QFile <span class="built_in">file</span>(path);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//进行写操作</span></span><br><span class="line">        file.<span class="built_in">open</span>(QIODevice::Append);</span><br><span class="line">        file.<span class="built_in">write</span>(<span class="string">&quot;123456789&quot;</span>);</span><br><span class="line">        file.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="③QFileInfo-文件信息类"><a href="#③QFileInfo-文件信息类" class="headerlink" title="③QFileInfo 文件信息类"></a>③QFileInfo 文件信息类</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件信息类</span></span><br><span class="line"><span class="function">QFileInfo <span class="title">info</span><span class="params">(path)</span></span>;</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;大小：&quot;</span> &lt;&lt; info.<span class="built_in">size</span>();</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;后缀名：&quot;</span> &lt;&lt; info.<span class="built_in">suffix</span>();</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;文件名称：&quot;</span> &lt;&lt; info.<span class="built_in">fileName</span>();</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;文件路径：&quot;</span> &lt;&lt; info.<span class="built_in">filePath</span>();</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;创建日期：&quot;</span> &lt;&lt; info.<span class="built_in">birthTime</span>().<span class="built_in">toString</span>(<span class="string">&quot;yyyy/MM/dd hh:mm:ss&quot;</span>);</span><br><span class="line"><span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;修改日期：&quot;</span> &lt;&lt; info.<span class="built_in">lastModified</span>().<span class="built_in">toString</span>(<span class="string">&quot;yyyy/MM/dd hh:mm:ss&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="22、QT与Halcon的类型转换"><a href="#22、QT与Halcon的类型转换" class="headerlink" title="22、QT与Halcon的类型转换"></a>22、QT与Halcon的类型转换</h2><h3 id="①Halcon类型-—-QT类型"><a href="#①Halcon类型-—-QT类型" class="headerlink" title="①Halcon类型 —&gt;  QT类型"></a>①Halcon类型 —&gt;  QT类型</h3><h4 id="（1）字符串"><a href="#（1）字符串" class="headerlink" title="（1）字符串"></a>（1）字符串</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">std::string str = (std::string)hv_DecodedDataStrings[<span class="number">0</span>].<span class="built_in">S</span>();</span><br><span class="line">QString ans = QString::<span class="built_in">fromStdString</span>(str);</span><br></pre></td></tr></table></figure><h4 id="（2）Gray灰度图像"><a href="#（2）Gray灰度图像" class="headerlink" title="（2）Gray灰度图像"></a>（2）Gray灰度图像</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抓取图像</span></span><br><span class="line"><span class="built_in">GrabImageAsync</span>(&amp;ho_Image, hv_AcqHandle, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将这个灰度图像 转为QT中的QPixmap</span></span><br><span class="line"><span class="built_in">GetImagePointer1</span>(ho_Image, &amp;hv_Pointer, &amp;hv_Type, &amp;hv_Width, &amp;hv_Height);</span><br><span class="line">BYTE* p = (BYTE*)hv_Pointer[<span class="number">0</span>].<span class="built_in">L</span>();</span><br><span class="line"><span class="function">QImage <span class="title">image</span><span class="params">((uchar*)p, hv_Width, hv_Height, QImage::Format_Grayscale8)</span></span>;</span><br><span class="line">QPixmap pixmap = QPixmap::<span class="built_in">fromImage</span>(image);</span><br><span class="line">ui.label-&gt;<span class="built_in">setPixmap</span>(pixmap);</span><br></pre></td></tr></table></figure><h3 id="（3）RGB彩色图"><a href="#（3）RGB彩色图" class="headerlink" title="（3）RGB彩色图"></a>（3）RGB彩色图</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抓取图像</span></span><br><span class="line"><span class="built_in">GrabImageAsync</span>(&amp;ho_Image, hv_AcqHandle, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将这个rgb彩色图像 转为QT中的QPixmap</span></span><br><span class="line"><span class="built_in">GetImagePointer3</span>(ho_Image, &amp;hv_PointerRed, &amp;hv_PointerGreen, &amp;hv_PointerBlue,&amp;hv_Type1, &amp;hv_Width1, &amp;hv_Height1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//得到图片的宽和高</span></span><br><span class="line"><span class="type">int</span> width = hv_Width1[<span class="number">0</span>].<span class="built_in">I</span>();</span><br><span class="line"><span class="type">int</span> height = hv_Height1[<span class="number">0</span>].<span class="built_in">I</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//得到图片的rgb数据</span></span><br><span class="line">BYTE* pRed = (BYTE*)hv_PointerRed[<span class="number">0</span>].<span class="built_in">L</span>();</span><br><span class="line">BYTE* pGreen = (BYTE*)hv_PointerGreen[<span class="number">0</span>].<span class="built_in">L</span>();</span><br><span class="line">BYTE* pBlue = (BYTE*)hv_PointerBlue[<span class="number">0</span>].<span class="built_in">L</span>();</span><br><span class="line"><span class="comment">//正确的开辟数组的大小 是 width * height * 3</span></span><br><span class="line">BYTE* ImageRGB = <span class="keyword">new</span> BYTE[width * height * <span class="number">3</span>];</span><br><span class="line"><span class="comment">//对ImageRGB正确赋值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; height; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; width; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        ImageRGB[i * <span class="number">3</span> * width + <span class="number">3</span> * j] = pRed[i * width + j];</span><br><span class="line">        ImageRGB[i * <span class="number">3</span> * width + <span class="number">3</span> * j + <span class="number">1</span>] = pGreen[i * width + j];</span><br><span class="line">        ImageRGB[i * <span class="number">3</span> * width + <span class="number">3</span> * j + <span class="number">2</span>] = pBlue[i * width + j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转为Image和Pixmap数据类型</span></span><br><span class="line">QImage* tempImage = <span class="keyword">new</span> <span class="built_in">QImage</span>(ImageRGB, width, height, QImage::Format_RGB888);</span><br><span class="line">QPixmap pixmap = QPixmap::<span class="built_in">fromImage</span>(*tempImage);</span><br><span class="line">ui.label-&gt;<span class="built_in">setPixmap</span>(pixmap);</span><br></pre></td></tr></table></figure><h2 id="23、数据异常"><a href="#23、数据异常" class="headerlink" title="23、数据异常"></a>23、数据异常</h2><p>当出现数据异常的时候 大概率是因为某个数据不存在导致的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (hv_DecodedDataStrings.<span class="built_in">Length</span>() &gt; <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>直接使用 <code>Length()</code> 判断长度不为0的情况</p>]]></content>
      
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器视觉笔记</title>
      <link href="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/"/>
      <url>/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/</url>
      
        <content type="html"><![CDATA[<h1 id="机器视觉笔记"><a href="#机器视觉笔记" class="headerlink" title="机器视觉笔记"></a>机器视觉笔记</h1><h2 id="1-Halcon语法"><a href="#1-Halcon语法" class="headerlink" title="1.Halcon语法"></a>1.Halcon语法</h2><h3 id="一、语法介绍"><a href="#一、语法介绍" class="headerlink" title="一、语法介绍"></a>一、语法介绍</h3><h4 id="①赋值和逻辑比较"><a href="#①赋值和逻辑比较" class="headerlink" title="①赋值和逻辑比较"></a>①赋值和逻辑比较</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）   赋值等号:        :=                            例如：   A ：=<span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）   不等号:          <span class="meta">#                             例如：   <span class="keyword">if</span>（A # B）</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）   注释符:          *</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）   字符串赋值:     str  :=  ’halcon’</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）   等于比较符:      =                           例如：   <span class="keyword">if</span>  (X = <span class="number">10</span> )</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>)    逻辑与<span class="keyword">and</span> 例如：    <span class="keyword">if</span> (A&gt;<span class="number">1</span> <span class="keyword">and</span> A&lt;<span class="number">30</span> )</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>）   逻辑或<span class="keyword">or</span>                                    例如：    <span class="keyword">if</span>(A&gt;<span class="number">1</span> <span class="keyword">or</span> A&lt;<span class="number">30</span> )</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>）   逻辑反<span class="keyword">not</span>                                   例如：   <span class="keyword">if</span>( <span class="keyword">not</span>(A=<span class="number">10</span> ) )</span><br></pre></td></tr></table></figure><h4 id="②元组的操作"><a href="#②元组的操作" class="headerlink" title="②元组的操作"></a>②元组的操作</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">赋值</span><br><span class="line">St ：= [ St, iterm ]</span><br><span class="line">访问</span><br><span class="line">iterm ：= St[ i ]</span><br></pre></td></tr></table></figure><h4 id="③控制语句"><a href="#③控制语句" class="headerlink" title="③控制语句"></a>③控制语句</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）For 循环：                                     </span><br><span class="line">例如：   </span><br><span class="line"><span class="keyword">for</span> I := <span class="number">0</span> to NumBalls - <span class="number">1</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">     语句</span><br><span class="line">endfor</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>） While 循环：                                      </span><br><span class="line">例如：</span><br><span class="line"><span class="keyword">while</span> (x==<span class="number">1</span>)</span><br><span class="line">  语句</span><br><span class="line">Endwhile</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>） 异常捕获:                                       </span><br><span class="line">例如： </span><br><span class="line">Try</span><br><span class="line">  语句</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">  语句</span><br><span class="line">Endtry</span><br><span class="line">    </span><br><span class="line">Switch多分支:                                 </span><br><span class="line">例如：   </span><br><span class="line"><span class="keyword">switch</span> (Index)</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="literal">default</span>:</span><br><span class="line"> <span class="keyword">break</span></span><br><span class="line"> endswitch</span><br></pre></td></tr></table></figure><h4 id="④Halcon开发流程"><a href="#④Halcon开发流程" class="headerlink" title="④Halcon开发流程"></a>④Halcon开发流程</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704145418384.png" alt="image-20240704145418384"></p><h3 id="二、代码实例（在HDevelop运行）"><a href="#二、代码实例（在HDevelop运行）" class="headerlink" title="二、代码实例（在HDevelop运行）"></a>二、代码实例（在HDevelop运行）</h3><h4 id="①显示图片代码"><a href="#①显示图片代码" class="headerlink" title="①显示图片代码"></a>①显示图片代码</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">* 引入图片</span><br><span class="line">read_image(Image,<span class="string">&#x27;C:/Users/Pictures/Pictures/image.jpg&#x27;</span>)</span><br><span class="line">read_image(Image1,<span class="string">&#x27;fabrik&#x27;</span>)  软件安装目录下的image，不需要写全部路径</span><br><span class="line"></span><br><span class="line">* 获取图像大小</span><br><span class="line">get_image_size(Image, Width, Height)</span><br><span class="line"></span><br><span class="line">* 打开图像窗口</span><br><span class="line">* WindowHandle:窗口管理者(handle句柄，在某一个进程中的唯一索引)</span><br><span class="line">dev_open_window(<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line"></span><br><span class="line">*设置当前填充区域</span><br><span class="line">dev_set_draw(<span class="string">&#x27;margin&#x27;</span>)</span><br><span class="line"></span><br><span class="line">* 显示图像</span><br><span class="line">dev_display(Image)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/91ff1d56381647c1b3e9269dd7801adf-1717663052102-13.png" alt="在这里插入图片描述"></p><h4 id="②基础语法运行代码"><a href="#②基础语法运行代码" class="headerlink" title="②基础语法运行代码"></a>②基础语法运行代码</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">* 语法学习</span><br><span class="line">* 声明变量</span><br><span class="line">* C<span class="meta">#语法是 int x = 1</span></span><br><span class="line">* halcon赋值语法是 x:=<span class="number">1</span></span><br><span class="line">x:=<span class="number">1</span></span><br><span class="line">y:=<span class="string">&#x27;Hello halcon&#x27;</span></span><br><span class="line">i:=<span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">* 分支语句判断 <span class="function"><span class="keyword">if</span></span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">i=x</span>)</span></span><br><span class="line"><span class="function">    i:</span>=<span class="number">2.2</span></span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">* 不等于</span><br><span class="line"><span class="keyword">if</span>(x<span class="meta">#2)</span></span><br><span class="line">    i:=<span class="number">1.0</span></span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">* &gt; &lt; 和C<span class="meta">#都是一样的</span></span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">6</span>)</span><br><span class="line"><span class="function">endif</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">i&lt;<span class="number">6</span></span>)</span></span><br><span class="line"><span class="function">endif</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* <span class="keyword">else</span> <span class="keyword">if</span> 判断</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params">i&gt;<span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    i:</span>=<span class="number">2.0</span></span><br><span class="line">elseif(i&lt;<span class="number">2</span>)</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">* 逻辑与 &amp;&amp;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">0</span> <span class="keyword">and</span> x&lt;<span class="number">3</span>)</span><br><span class="line">    i:=<span class="number">4.0</span></span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">* 逻辑或 ||</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">0</span> <span class="keyword">or</span> x&lt;<span class="number">3</span>)</span><br><span class="line">    i:=<span class="number">5.0</span></span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">* 逻辑非 !=</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">not</span>(x=<span class="number">8</span>))</span><br><span class="line">    i:=<span class="number">8</span></span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">* 数组</span><br><span class="line">nums:=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">nums2:=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4.5</span>]</span><br><span class="line">nums3:=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;4.5&#x27;</span>]</span><br><span class="line"></span><br><span class="line">* <span class="keyword">for</span>循环（j从<span class="number">0</span>到<span class="number">5</span>，步长为<span class="number">1</span>）</span><br><span class="line"><span class="keyword">for</span> j:=<span class="number">0</span> to <span class="number">5</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">endfor</span><br><span class="line"></span><br><span class="line">* <span class="keyword">while</span> 循环</span><br><span class="line">a:=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span>(a==<span class="number">1</span>)</span><br><span class="line">    a:=<span class="number">2</span></span><br><span class="line">endwhile</span><br><span class="line"></span><br><span class="line">* <span class="keyword">switch</span> <span class="keyword">case</span> 循环</span><br><span class="line"><span class="keyword">switch</span>(a)</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    a:=<span class="number">5</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    a:=<span class="number">6</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">endswitch</span><br><span class="line"></span><br><span class="line">* 元组</span><br><span class="line">nums:=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">* 元组长度</span><br><span class="line">len := |nums|</span><br><span class="line"></span><br><span class="line">* 异常捕获</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">    * nums<span class="number">-1</span> 长度<span class="number">-1</span></span><br><span class="line">    * nums<span class="number">-1</span> 长度在这里有问题，需要换成 |nums|</span><br><span class="line">    <span class="keyword">for</span> Index := <span class="number">0</span> to |nums| <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">        a:=nums[Index]</span><br><span class="line">    <span class="function">endfor</span></span><br><span class="line"><span class="function"><span class="title">catch</span> (<span class="params">Exception</span>)</span></span><br><span class="line"><span class="function">    *<span class="title">disp_message</span> (<span class="params"><span class="number">3600</span>, Exception, <span class="string">&#x27;window&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">endtry</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* 进制：halcon对进制可以直接转换。</span></span><br><span class="line"><span class="function">i1 :</span>= <span class="number">123</span>$<span class="string">&#x27;#o&#x27;</span> <span class="comment">//8进制，0代表前缀</span></span><br><span class="line">i2 := <span class="number">123</span>$<span class="string">&#x27;#x&#x27;</span> <span class="comment">//16进制，0x为前缀，7b代表赋值</span></span><br><span class="line">i2 := <span class="number">123</span>$<span class="string">&#x27;#X&#x27;</span> <span class="comment">//7B为赋值，7b=7B</span></span><br><span class="line">i3 := <span class="number">123</span>$<span class="string">&#x27;#f&#x27;</span> <span class="comment">//double类型，默认保留小数点后六位</span></span><br><span class="line">i4 := <span class="number">123</span>$<span class="string">&#x27;#g&#x27;</span> <span class="comment">//</span></span><br><span class="line">i5 := <span class="number">123</span>$<span class="string">&#x27;#G&#x27;</span> <span class="comment">//</span></span><br><span class="line">i6 := <span class="number">123</span>$<span class="string">&#x27;#e&#x27;</span> <span class="comment">//转成科学计数</span></span><br><span class="line">i7 := <span class="number">123</span>$<span class="string">&#x27;#E&#x27;</span> <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">* 整数</span><br><span class="line">d1 := <span class="number">123</span>$<span class="string">&#x27;6&#x27;</span> <span class="comment">// 小于6位文本右对齐，大于6位忽略</span></span><br><span class="line">d2 := <span class="number">123456</span>$<span class="string">&#x27;6&#x27;</span> <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">d3 := <span class="number">123</span>$<span class="string">&#x27;-6&#x27;</span> <span class="comment">// 小于6位文本左对齐，大于6位忽略</span></span><br><span class="line">d4 := <span class="number">123456</span>$<span class="string">&#x27;-6&#x27;</span> <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">d5 := <span class="number">123</span>$<span class="string">&#x27;.6&#x27;</span> <span class="comment">// 小于6位时，文本左补零</span></span><br><span class="line">d6 := <span class="number">123</span>$<span class="string">&#x27;10.5&#x27;</span> <span class="comment">// 小于十位时，文本右对齐，小于五位补零</span></span><br><span class="line">d7:= <span class="number">12345</span>$<span class="string">&#x27;10.5&#x27;</span> <span class="comment">//</span></span><br><span class="line">d8:= <span class="number">1234567891</span>$<span class="string">&#x27;10.5&#x27;</span> <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">* 四舍五入</span><br><span class="line">e := <span class="number">1.5555</span></span><br><span class="line">e1 := e$<span class="string">&#x27;.0f&#x27;</span></span><br><span class="line">e2 := e$<span class="string">&#x27;.1f&#x27;</span></span><br><span class="line">e3 := e$<span class="string">&#x27;.2f&#x27;</span></span><br><span class="line">e4 := e$<span class="string">&#x27;.3f&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240606155957701-1717663052102-14.png" alt="image-20240606155957701"></p><h4 id="③元组（数组）运行代码"><a href="#③元组（数组）运行代码" class="headerlink" title="③元组（数组）运行代码"></a>③元组（数组）运行代码</h4><p><code>元组（Tuple）</code>是一种基本的数据结构，用于存储和处理一组有序的元素。</p><p>元组可以包含不同类型的数据，如整数、实数、字符串等，甚至可以包含其他元组。</p><p>元组在 HALCON 中被广泛应用于表示和操作图像处理和计算机视觉中的数据。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">* 元组</span><br><span class="line">Tuple := [<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">* 根据索引来操作元组</span><br><span class="line">Tuple[<span class="number">0</span>] := <span class="number">2</span></span><br><span class="line">* 批量操作元组的值</span><br><span class="line">Tuple[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>] := <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"></span><br><span class="line">*批量为元组赋值,自动填充<span class="number">0</span>~<span class="number">100</span>的连续值</span><br><span class="line">tuple2:=[<span class="number">0</span>:<span class="number">100</span>]</span><br><span class="line"></span><br><span class="line">*批量为元组赋值，从<span class="number">0</span>到<span class="number">150</span>的连续值，步长为<span class="number">3</span></span><br><span class="line">tuple3:=[<span class="number">0</span>:<span class="number">3</span>:<span class="number">150</span>]</span><br><span class="line">* 批量为元组赋值，从<span class="number">100</span>~<span class="number">-100</span>的连续值，步长为<span class="number">-10</span></span><br><span class="line">tuple4:=[<span class="number">100</span>:<span class="number">-10</span>:<span class="number">-100</span>]</span><br><span class="line"></span><br><span class="line">*合并（合并在一起并去重 并存入第三个参数中）</span><br><span class="line">tupleInt1:=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">tupleInt2:=[<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>]</span><br><span class="line">tuple_union(tupleInt1, tupleInt2, Union)</span><br><span class="line"></span><br><span class="line">*交集（两个元组中一样的元素 并存入第三个参数中）</span><br><span class="line">tupleInt3:=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">tupleInt4:=[<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>]</span><br><span class="line">tuple_intersection (tupleInt3, tupleInt4, Intersection)</span><br><span class="line"></span><br><span class="line">* 替换（注意：[<span class="number">0</span>,<span class="number">1</span>]代表的是数组的下标，而不是数组的值）</span><br><span class="line">tupleInt5:=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">tuple_replace (tupleInt5,[<span class="number">0</span>,<span class="number">1</span>],[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>],Replaced)</span><br><span class="line"></span><br><span class="line">* 插入</span><br><span class="line">tupleInt6:=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">tuple_insert(tupleInt6,<span class="number">3</span>,<span class="string">&#x27;x&#x27;</span>,Replaced2)</span><br><span class="line"></span><br><span class="line">* 求绝对值</span><br><span class="line">tuple_abs ([<span class="number">1</span>,<span class="number">-23</span>,<span class="number">-4</span>,<span class="number">-5</span>],Abs)</span><br><span class="line"></span><br><span class="line">* <span class="keyword">const</span>与元组的使用</span><br><span class="line">* 长度为<span class="number">10</span>，元素为<span class="keyword">const</span>类型的新元组</span><br><span class="line">tuple_gen_const(<span class="number">10</span>,<span class="number">2</span>,Newtuple)</span><br><span class="line"></span><br><span class="line">* 链接</span><br><span class="line">a:=[tupleInt1,tupleInt2]</span><br><span class="line">* 获取索引对应的值</span><br><span class="line">b:=a[<span class="number">1</span>]</span><br><span class="line">* 批量获取索引的值</span><br><span class="line">c:=a[<span class="number">1</span>:<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">* 选取数组下标为<span class="number">3</span>的元素</span><br><span class="line">d:=subset(Replaced2,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">*移除,对应索引的值</span><br><span class="line">e:=<span class="keyword">remove</span>(Replaced2,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">*产生<span class="number">10</span>个<span class="number">5</span>存入Newtuple中</span><br><span class="line">tuple_gen_const (<span class="number">10</span>,<span class="number">5</span>,Newtuple)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240606155927359-1717663052102-15.png" alt="image-20240606155927359"></p><h3 id="三、第一个Halcon程序"><a href="#三、第一个Halcon程序" class="headerlink" title="三、第一个Halcon程序"></a>三、第一个Halcon程序</h3><p>目的：检测红框内的物体中心点</p><p>思路：寻找物体的特征 发现物体的<a href="https://so.csdn.net/so/search?q=%E7%81%B0%E5%BA%A6&spm=1001.2101.3001.7020">灰度</a>与周围相比偏高  再用面积筛选出合适大小的连通域  获取该连通域的面积中心  绘制十字星</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240606162844917-1717663052102-16.png" alt="image-20240606162844917"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">*读取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;fabrik.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*获取图像大小</span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line"></span><br><span class="line">*关闭窗口</span><br><span class="line">dev_clear_window()</span><br><span class="line"></span><br><span class="line">*打开窗口</span><br><span class="line">dev_open_window(<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line"></span><br><span class="line">*显示图像</span><br><span class="line">dev_display(Image)</span><br><span class="line"></span><br><span class="line">* 限制灰度值范围：<span class="number">128</span>-最小灰度值 <span class="number">255</span>-最大灰度值</span><br><span class="line">threshold (Image, Region, <span class="number">128</span>, <span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">* 连通域搜索：寻找闭合图像</span><br><span class="line">connection (Region, ConnectedRegions)</span><br><span class="line"></span><br><span class="line">* 选择形状： 面积范围： 最小 最大</span><br><span class="line">select_shape (ConnectedRegions, SelectedRegions, <span class="string">&#x27;area&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="number">8144</span>, <span class="number">8500</span>)</span><br><span class="line"></span><br><span class="line">*获取面积中心</span><br><span class="line">area_center(SelectedRegions, Area, Row, Column)</span><br><span class="line"></span><br><span class="line">*生成十字星</span><br><span class="line">gen_cross_contour_xld (Cross, Row, Column, <span class="number">30</span>, <span class="number">0.0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240606162435298-1717663052102-17.png" alt="image-20240606162435298"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240606163908858.png" alt="image-20240606163908858"></p><p><strong>注意：单步调试的时候需要开启和显示 才可以正常覆盖显示十字星</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240606163641049.png" alt="image-20240606163641049"></p><h3 id="四、第二个Halcon程序"><a href="#四、第二个Halcon程序" class="headerlink" title="四、第二个Halcon程序"></a>四、第二个Halcon程序</h3><p>目的：识别骰子并给筛子标上不同的颜色</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读一张图片（可以用F1进行帮助文档 或者打开算子窗口）</span></span><br><span class="line"><span class="built_in">read_image</span> (Image, <span class="string">&#x27;dice&#x27;</span>)</span><br><span class="line"><span class="comment">//打开一个窗口 并获得句柄WindowHandle</span></span><br><span class="line"><span class="comment">//其中的参数0,0为坐标值  580和440代表窗口大小  black代表背景颜色</span></span><br><span class="line"><span class="built_in">dev_open_window</span> (<span class="number">0</span>, <span class="number">0</span>, <span class="number">580</span>, <span class="number">440</span>, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line"><span class="built_in">dev_display</span> (Image)  <span class="comment">//显示窗口</span></span><br><span class="line"><span class="built_in">stop</span>()</span><br><span class="line">* <span class="comment">// Stop（）函数是暂停程序的执行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义最高和最低灰度值</span></span><br><span class="line">MinGray := <span class="number">85</span></span><br><span class="line">MaxGray := <span class="number">255</span></span><br><span class="line"><span class="comment">//threshold算子输入的是Image 输出的是Region 条件是最大和最小灰度</span></span><br><span class="line"><span class="built_in">threshold</span> (Image, Region, MinGray, MaxGray)</span><br><span class="line"><span class="built_in">dev_display</span> (Region)</span><br><span class="line"><span class="built_in">stop</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">//connection算子输入的是Region 输出的是ConnectedRegions </span></span><br><span class="line"><span class="comment">//作用是将Region连起来 相当于数组储存到ConnectedRegions</span></span><br><span class="line"><span class="built_in">connection</span> (Region, ConnectedRegions)</span><br><span class="line"><span class="built_in">dev_display</span> (ConnectedRegions)</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704141209097.png" alt="image-20240704141209097"></p><h2 id="2-高斯公式（成像光路）"><a href="#2-高斯公式（成像光路）" class="headerlink" title="2.高斯公式（成像光路）"></a>2.高斯公式（成像光路）</h2><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240510090753975-1717663052102-18.png" alt="image-20240510090753975"></p><p><strong>主要是放大率和焦距的计算</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704121003487.png" alt="image-20240704121003487"></p><h2 id="3-镜头的选型"><a href="#3-镜头的选型" class="headerlink" title="3.镜头的选型"></a>3.镜头的选型</h2><h3 id="焦距越小-视场角越大-拍摄距离越近"><a href="#焦距越小-视场角越大-拍摄距离越近" class="headerlink" title="焦距越小 视场角越大 拍摄距离越近"></a>焦距越小 视场角越大 拍摄距离越近</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704120929974.png" alt="image-20240704120929974"></p><h3 id="相机选型中1英寸-16毫米（mm）"><a href="#相机选型中1英寸-16毫米（mm）" class="headerlink" title="相机选型中1英寸&#x3D;16毫米（mm）"></a>相机选型中1英寸&#x3D;16毫米（mm）</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240510090922912-1717663052102-19.png" alt="image-20240510090922912"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240510092323886-1717663052102-20.png" alt="image-20240510092323886"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240510092425086-1717663052102-21.png" alt="image-20240510092425086"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240510092734634-1717663052102-22.png" alt="image-20240510092734634"></p><h3 id="远心镜头"><a href="#远心镜头" class="headerlink" title="远心镜头"></a>远心镜头</h3><p>主要是为了解决被测物体不在同一物面上的情况</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704121320014.png" alt="image-20240704121320014"></p><h2 id="4-镜头的MTF曲线"><a href="#4-镜头的MTF曲线" class="headerlink" title="4.镜头的MTF曲线"></a>4.镜头的MTF曲线</h2><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240510091554283-1717663052102-23.png" alt="image-20240510091554283"></p><h2 id="5-机器视觉和计算机视觉的区别"><a href="#5-机器视觉和计算机视觉的区别" class="headerlink" title="5.机器视觉和计算机视觉的区别"></a>5.机器视觉和计算机视觉的区别</h2><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704111750500.png" alt="image-20240704111750500"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704111846766.png" alt="image-20240704111846766"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704112852577.png" alt="image-20240704112852577"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704113804093.png" alt="image-20240704113804093"></p><h2 id="6-工作原理"><a href="#6-工作原理" class="headerlink" title="6.工作原理"></a>6.工作原理</h2><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704113956372.png" alt="image-20240704113956372"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704114022210.png" alt="image-20240704114022210"></p><h2 id="7-光圈"><a href="#7-光圈" class="headerlink" title="7.光圈"></a>7.光圈</h2><p>光圈决定镜头的进光量（进光量越多，画面越亮）</p><p>大光圈—-景深较短</p><p>小光圈—-景深较长</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704115816759.png" alt="image-20240704115816759"></p><h2 id="8-Halcon介绍"><a href="#8-Halcon介绍" class="headerlink" title="8.Halcon介绍"></a>8.Halcon介绍</h2><p><strong>安装路径为C:\Program Files\MVTec\HALCON-12.0</strong></p><h3 id="1-算子（Operators）"><a href="#1-算子（Operators）" class="headerlink" title="(1).算子（Operators）"></a>(1).算子（Operators）</h3><p>输入和输出参数严格区分开</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704145650828.png" alt="image-20240704145650828"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">* 开启两个窗口</span><br><span class="line">dev_open_window(0,0,Width, Height, &#x27;black&#x27;, WindowHandle1)</span><br><span class="line">dev_open_window(0,0,Width, Height, &#x27;black&#x27;, WindowHandle2)</span><br><span class="line">* 激活窗口</span><br><span class="line">dev_set_window(WindowHandle2)</span><br><span class="line"></span><br><span class="line">* 显示图片</span><br><span class="line">dev_display(Image)</span><br><span class="line"></span><br><span class="line">*让亮的区域更亮 暗的区域更暗</span><br><span class="line">gray_range_rect(Image : ImageResult : MaskHeight, MaskWidth : )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*求解区域的方向角度</span><br><span class="line">orientation_region(Regions : : : Phi)</span><br><span class="line"></span><br><span class="line">*根据区域Regions创建一个轮廓xld</span><br><span class="line">gen_contour_region_xld(Regions : Contours : Mode : )</span><br><span class="line"></span><br><span class="line">* 将输入的区域Region转换为一个&#x27;byte&#x27;图像，并将区域内的所有像素赋予前景灰度值ForegroundGray</span><br><span class="line">* 如果输入的区域大于生成的图像，则将其裁剪到图像边界。背景设置为BackgroundGray。</span><br><span class="line">region_to_bin(Region, BinImage : ForegroundGray, BackgroundGray, Width, Height : )</span><br><span class="line">    </span><br><span class="line">*计算每个输入轮廓或多边形的平行于坐标轴的包围矩形</span><br><span class="line">*包围矩形由左上角点和右下角点像素的坐标（Row1、Column1、Row2、Column2）描述</span><br><span class="line">*如果传递的轮廓或多边形多于一个，则结果按照与XLD中相应轮廓或多边形相同的顺序存储在元组中</span><br><span class="line">smallest_rectangle1_xld(XLD : : : Row1, Column1, Row2, Column2)</span><br><span class="line"></span><br><span class="line">*计算由轮廓或多边形XLD所围成的区域的面积和重心（质心）和沿边界的点的顺序</span><br><span class="line">*如果轮廓或多边形中的点按逆时针顺序排列（即按照数学上的正方向），则PointOrder将为&#x27;positive&#x27;</span><br><span class="line">area_center_xld(XLD : : : Area, Row, Column, PointOrder)</span><br><span class="line"></span><br><span class="line">*将元组Tuple中的所有元素按升序进行排序，并返回排序后的元组元素相对于输入元组Tuple的索引</span><br><span class="line">*作为前提条件，元组Tuple的单个元素必须是可比较的</span><br><span class="line">tuple_sort_index(Tuple : : : Indices)</span><br><span class="line"></span><br><span class="line">*计算轮廓或多边形XLD的长度</span><br><span class="line">*长度被计算为轮廓或多边形上相邻点之间的欧几里德距离的总和</span><br><span class="line">*如果传递了多个轮廓或多边形，结果按照与XLD中相应轮廓或多边形相同的顺序存储在元组中</span><br><span class="line">length_xld(XLD : : : Length)</span><br><span class="line"></span><br><span class="line">*确定包含轮廓或多边形的最小包围圆，即所有包含轮廓的圆中面积最小的圆</span><br><span class="line">*该函数计算出最小包围圆的中心坐标(Row, Column)和半径(Radius)</span><br><span class="line">smallest_circle_xld(XLD : Row, Column, Radius)</span><br></pre></td></tr></table></figure><h3 id="2-HDevelop自带图片素材存储地"><a href="#2-HDevelop自带图片素材存储地" class="headerlink" title="(2).HDevelop自带图片素材存储地"></a>(2).HDevelop自带图片素材存储地</h3><p>C:\Users\Public\Documents\MVTec\HALCON-12.0\examples\images</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704145956479.png" alt="image-20240704145956479"></p><h3 id="3-直方图（通过直方图确定灰度范围和面积范围）"><a href="#3-直方图（通过直方图确定灰度范围和面积范围）" class="headerlink" title="(3).直方图（通过直方图确定灰度范围和面积范围）"></a>(3).直方图（通过直方图确定灰度范围和面积范围）</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704152711225.png" alt="image-20240704152711225"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704152728260.png" alt="image-20240704152728260"></p><p>在这里打开</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704153136774.png" alt="image-20240704153136774"></p><h3 id="4-获取图像"><a href="#4-获取图像" class="headerlink" title="(4).获取图像"></a>(4).获取图像</h3><h4 id="①获取非实时图像"><a href="#①获取非实时图像" class="headerlink" title="①获取非实时图像"></a>①获取非实时图像</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704154946572.png" alt="image-20240704154946572"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704154934659.png" alt="image-20240704154934659"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704155740867.png" alt="image-20240704155740867"></p><h4 id="②获取实时图像"><a href="#②获取实时图像" class="headerlink" title="②获取实时图像"></a>②获取实时图像</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704161052574.png" alt="image-20240704161052574"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240704161535280.png"></p><p>异步读取:图像从采集设备获取，非实时，取像与处理并行，对图像处理时间把控比较严;</p><p>同步读取:通过相机取像，实时，取像与处理是串行的，取像周期长。</p><h4 id="③通道"><a href="#③通道" class="headerlink" title="③通道"></a>③通道</h4><p>通道就是代表RBG中的某一个</p><p>灰度图片通道为1</p><p>彩色图片通道为3</p><h4 id="④图片展示设置"><a href="#④图片展示设置" class="headerlink" title="④图片展示设置"></a>④图片展示设置</h4><p>将三幅图片进行平铺展示</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709130659273.png" alt="image-20240709130659273"></p><h4 id="⑤图像灰度值"><a href="#⑤图像灰度值" class="headerlink" title="⑤图像灰度值"></a>⑤图像灰度值</h4><p>在灰度图像中，像素的颜色强度是由其对应的灰度级决定的</p><p>范围通常从<strong>0（黑色）到255（白色）</strong></p><p><strong>亮度越高、颜色越接近白色</strong>的地方，相应的像素值就越<strong>大</strong></p><p>而在图像的<strong>深色区域</strong>，像素值则较<strong>小</strong></p><p>灰度图像中的<strong>高亮</strong>通常表示<strong>像素值较大</strong>。</p><h2 id="9、ROI（对图片感兴趣区域）"><a href="#9、ROI（对图片感兴趣区域）" class="headerlink" title="9、ROI（对图片感兴趣区域）"></a>9、ROI（对图片感兴趣区域）</h2><h3 id="①图形化工具的形式（左键选择-右键结束）"><a href="#①图形化工具的形式（左键选择-右键结束）" class="headerlink" title="①图形化工具的形式（左键选择 右键结束）"></a>①图形化工具的形式（左键选择 右键结束）</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705105109903.png" alt="image-20240705105109903"></p><p>可以求多个图形的交并补集 也可以直接插入代码</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705115444789.png" alt="image-20240705115444789"></p><h3 id="②代码的形式"><a href="#②代码的形式" class="headerlink" title="②代码的形式"></a>②代码的形式</h3><p>(1)非交互方式</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705105956632.png" alt="image-20240705105956632"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">read_image (image,<span class="string">&#x27;C:/Users/Public/Documents/MVTec/HALCON-12.0/examples/images/claudia.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">* 生成矩形区域区域为左上(<span class="number">100</span>,<span class="number">100</span>)到右下(<span class="number">300</span>,<span class="number">300</span>)</span><br><span class="line">gen_rectangle1 (Region1,<span class="number">50</span>,<span class="number">100</span>,<span class="number">120</span>,<span class="number">280</span>)</span><br><span class="line"></span><br><span class="line">* 从原始图片中选择出被覆盖的区域</span><br><span class="line">reduce_domain(image,Region1,ImageReduced)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（2）交互的方式</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705111001641.png" alt="image-20240705111001641"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">read_image (image,<span class="string">&#x27;C:/Users/Public/Documents/MVTec/HALCON-12.0/examples/images/claudia.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">get_image_size (image,Width,Height)</span><br><span class="line"></span><br><span class="line">* 绘制窗口 并得到窗口句柄(在坐标(<span class="number">0</span>,<span class="number">0</span>)位置处 宽和高为Width,Height)</span><br><span class="line">dev_open_window(<span class="number">0</span>,<span class="number">0</span>,Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line"></span><br><span class="line">dev_display(image)</span><br><span class="line"></span><br><span class="line">* 产生一个交互式的绘图 左键选择右键结束 输入的是窗口句柄WindowHandle</span><br><span class="line">* 输出的是左上和右下的坐标 Row1, Column1, Row2, <span class="function">Column2</span></span><br><span class="line"><span class="function"><span class="title">draw_rectangle1</span>(<span class="params">WindowHandle, Row1, Column1, Row2, Column2</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* 绘制窗口 用的是上面所选中的区域(<span class="params">输入是Row1, Column1, Row2, Column2 输出是Rectangle</span>)</span></span><br><span class="line"><span class="function"><span class="title">gen_rectangle1</span> (<span class="params">Rectangle, Row1, Column1, Row2, Column2</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* 从原始图片中选择出被覆盖的区域(<span class="params">输入是image,Rectangle 输出是ImageReduced</span>)</span></span><br><span class="line"><span class="function"><span class="title">reduce_domain</span>(<span class="params">image,Rectangle,ImageReduced</span>)</span></span><br><span class="line"><span class="function">    </span></span><br></pre></td></tr></table></figure><p>绘制多边形的时候比较特殊（不需要连接到首 会自动首尾相连）（绘制完多边形 需要进行填充）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">read_image (image,<span class="string">&#x27;C:/Users/Public/Documents/MVTec/HALCON-12.0/examples/images/claudia.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">get_image_size (image,Width,Height)</span><br><span class="line"></span><br><span class="line">* 绘制窗口 并得到窗口句柄(在坐标(<span class="number">0</span>,<span class="number">0</span>)位置处 宽和高为Width,Height)</span><br><span class="line">dev_open_window(<span class="number">0</span>,<span class="number">0</span>,Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line"></span><br><span class="line">dev_display(image)</span><br><span class="line"></span><br><span class="line">* 绘制多边形</span><br><span class="line">draw_polygon (PolygonRegion, WindowHandle)</span><br><span class="line"></span><br><span class="line">* 对多边形进行填充(保证任意两点相连都在区域内部)</span><br><span class="line">shape_trans(PolygonRegion, RegionTrans, <span class="string">&#x27;convex&#x27;</span>)</span><br><span class="line"></span><br><span class="line">* 从原始图片中选择出被覆盖的区域</span><br><span class="line">reduce_domain(image, RegionTrans, ImageReduced1)</span><br></pre></td></tr></table></figure><h2 id="10、图像的变换和校正"><a href="#10、图像的变换和校正" class="headerlink" title="10、图像的变换和校正"></a>10、图像的变换和校正</h2><h3 id="Halcon的坐标轴为"><a href="#Halcon的坐标轴为" class="headerlink" title="Halcon的坐标轴为"></a>Halcon的坐标轴为</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705121449489.png" alt="image-20240705121449489"></p><h3 id="①图形的平移—齐次坐标（竖着的x，y，m-其中m一般为1）"><a href="#①图形的平移—齐次坐标（竖着的x，y，m-其中m一般为1）" class="headerlink" title="①图形的平移—齐次坐标（竖着的x，y，m 其中m一般为1）"></a>①图形的平移—齐次坐标（竖着的x，y，m 其中m一般为1）</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705120001705.png" alt="image-20240705120001705"></p><h3 id="②图形的旋转"><a href="#②图形的旋转" class="headerlink" title="②图形的旋转"></a>②图形的旋转</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705120308616.png" alt="image-20240705120308616"></p><h3 id="③图形的缩放"><a href="#③图形的缩放" class="headerlink" title="③图形的缩放"></a>③图形的缩放</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705120411113.png" alt="image-20240705120411113"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705120417799.png" alt="image-20240705120417799"></p><h3 id="④相似变换"><a href="#④相似变换" class="headerlink" title="④相似变换"></a>④相似变换</h3><p>由一个平面&#x2F;立体图形变换到另一个平面&#x2F;立体图形，在改变的过程中保持形状不变（大小方向和位置可变)，任何相似变换都可以分解为等比例缩放、平移、旋转的组合相似变换</p><h3 id="⑤仿射变换"><a href="#⑤仿射变换" class="headerlink" title="⑤仿射变换"></a>⑤仿射变换</h3><p>由一个平面&#x2F;立体图形变换到另一个平面&#x2F;立体图形，在改变的过程中保持直线和平行线不变(平行线映射为平行线），任何仿射变换都可以分解为缩放、平移、旋转和切变(Shearing)的组合</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705123658146.png" alt="image-20240705123658146"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">* 平移</span><br><span class="line">* 输入HomMat2D,Tx,Ty</span><br><span class="line">* 输出<span class="function">HomMat2Dtranslate</span></span><br><span class="line"><span class="function"><span class="title">hom_mat2d_translate</span>(<span class="params">::HomMat2D,Tx,Ty:HomMat2Dtranslate</span>)</span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">* 旋转</span></span><br><span class="line"><span class="function">* 输入HomMat2D,phi,Tx,<span class="title">Ty</span>(<span class="params">phi代表旋转角度</span>)（Tx,Ty代表旋转原点）</span></span><br><span class="line"><span class="function">* 输出HomMat2Droute</span></span><br><span class="line"><span class="function"><span class="title">hom_mat2d_rotate</span>(<span class="params">::HomMat2D,phi,Tx,Ty:HomMat2Drotate</span>)</span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">* 缩放</span></span><br><span class="line"><span class="function">* 输入HomMat2D,Sx,Sy,Px,Py（Sx,Sy是缩放系数）（Px,Py是变换不动点）</span></span><br><span class="line"><span class="function">* 输出HomMat2Dscale</span></span><br><span class="line"><span class="function"><span class="title">hom_mat2d_scale</span>(<span class="params">::HomMat2D,Sx,Sy,Px,Py:HomMat2Dscale</span>)</span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* 仿射变换</span></span><br><span class="line"><span class="function">(<span class="params"><span class="number">1</span></span>)创建一个仿射变换单位矩阵</span></span><br><span class="line"><span class="function"><span class="title">hom_mat2d_identity</span>(<span class="params">:::HomeMat2dIdentity</span>)</span></span><br><span class="line"><span class="function">(<span class="params"><span class="number">2</span></span>)设置可变换的参数 可以设置平移、缩放以及旋转的参数</span></span><br><span class="line"><span class="function">(<span class="params"><span class="number">3</span></span>)进行仿射变换 输入Image 得到仿射变换后端图ImageAffinTrans</span></span><br><span class="line"><span class="function"><span class="title">affine_trans_image</span> (<span class="params">Image:ImageAffinTrans:HomMat2D,Interpolation,AdaptImageSize:</span>)</span></span><br></pre></td></tr></table></figure><h3 id="⑥投影变换"><a href="#⑥投影变换" class="headerlink" title="⑥投影变换"></a>⑥投影变换</h3><p>变换过程中，直线映射为直线(但不一定保证平行度)，任何二维投影变换都可以用3x3可逆矩阵表示，而任何三维投影变换都可以用4x4可逆矩阵表示</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705134014758.png" alt="image-20240705134014758"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705134626157.png" alt="image-20240705134626157"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* 通过P和Q两组点确定投影变换的矩阵</span><br><span class="line">* 通过P和Q两个点确定齐次变换的矩阵（至少需要4对）</span><br><span class="line">* method是就是进行归异化处理的方法</span><br><span class="line">hom_vector_to_proj_hom_mat2d(::Px,Py,Pw,Qx,Qy,Qw,Method:HomMat2D)</span><br><span class="line"></span><br><span class="line">* 进行投影变换</span><br><span class="line">* 输入校正前的图片Image 输出校正完成的图片Image_rectified 变换的矩阵为HomMat2D</span><br><span class="line">projective_trans_image (Image, Image_rectified, HomMat2D, &#x27;bilinear&#x27;, &#x27;false&#x27;, &#x27;false&#x27;)</span><br></pre></td></tr></table></figure><p>具体可以参考–<strong>二维码的简单校验.hdev</strong></p><h2 id="11、常见的插值算法"><a href="#11、常见的插值算法" class="headerlink" title="11、常见的插值算法"></a>11、常见的插值算法</h2><p>**插值:**利用已知数据去预测未知数据</p><p><strong>图像插值</strong>:给定一个像素点，根据它周围像素点的信息来对该像素点的值进行预测。</p><h3 id="①自适应插值"><a href="#①自适应插值" class="headerlink" title="①自适应插值"></a>①自适应插值</h3><p>根据插值的不同像素点内容进行改变（尖锐的边缘或者是平滑的纹理）</p><h3 id="②非自适应插值"><a href="#②非自适应插值" class="headerlink" title="②非自适应插值"></a>②非自适应插值</h3><p>对每个像素点的处理都是同样的</p><p>（1）最近邻插值：选取离目标点最近的点的灰度值作为新的插入点的灰度值</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705143048523.png" alt="image-20240705143048523"></p><p>（2）线性插值</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705143310415.png" alt="image-20240705143310415"></p><p>（3）双线性插值</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705143402534.png" alt="image-20240705143402534"></p><p>（4）双三次插值</p><p>在双三次插值法中，选取最近的16个像素点计算目标图像处像素值</p><h2 id="12、图像增强"><a href="#12、图像增强" class="headerlink" title="12、图像增强"></a>12、图像增强</h2><p>图像增强是有目的地强调<strong>图像的整体或局部特性</strong>，将原来不清晰的图像变得清晰或强调某些感兴趣的特征，扩大图像中不同物体特征之间的差别，抑制不感兴趣的特征，改善图像质量，丰富信息量，加强图像判读和识别效果，满足某些特殊分析的需要</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705144428687.png" alt="image-20240705144428687"></p><h3 id="①图像取反算子"><a href="#①图像取反算子" class="headerlink" title="①图像取反算子"></a>①图像取反算子</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 取反算子 将亮变暗 暗变亮</span><br><span class="line">invert_image(Image:ImageInvert::)</span><br></pre></td></tr></table></figure><h3 id="②增加图像对比度算子"><a href="#②增加图像对比度算子" class="headerlink" title="②增加图像对比度算子"></a>②增加图像对比度算子</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emphasize(Image:ImageEmphasize:MaskWidth,MaskHeight,Factor:)</span><br></pre></td></tr></table></figure><h3 id="③缩放图像的灰度"><a href="#③缩放图像的灰度" class="headerlink" title="③缩放图像的灰度"></a>③缩放图像的灰度</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705145343004.png" alt="image-20240705145343004"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scale_image(Image:ImageScaled:Mult,Add:)</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705145359058.png" alt="image-20240705145359058"></p><h2 id="13、直方图修正法"><a href="#13、直方图修正法" class="headerlink" title="13、直方图修正法"></a>13、直方图修正法</h2><h3 id="①直方图均衡化"><a href="#①直方图均衡化" class="headerlink" title="①直方图均衡化"></a>①直方图均衡化</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705150221291.png" alt="image-20240705150221291"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">equ_histo_image(GrayImage,ImageEquHisto)</span><br></pre></td></tr></table></figure><h3 id="②直方图规定化"><a href="#②直方图规定化" class="headerlink" title="②直方图规定化"></a>②直方图规定化</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705150313698.png" alt="image-20240705150313698"></p><h2 id="14、图像的平滑"><a href="#14、图像的平滑" class="headerlink" title="14、图像的平滑"></a>14、图像的平滑</h2><h3 id="①噪声"><a href="#①噪声" class="headerlink" title="①噪声"></a>①噪声</h3><h4 id="（1）高斯噪声"><a href="#（1）高斯噪声" class="headerlink" title="（1）高斯噪声"></a>（1）高斯噪声</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705150515895.png" alt="image-20240705150515895"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 生成高斯噪声</span><br><span class="line">gauss_distribution(20,Distribution)</span><br><span class="line">*将灰度图片GrayImage 进行添加噪声处理 得到 ImageNoise</span><br><span class="line">add_noise_distribution(GrayImage,ImageNoise,Distribution)</span><br></pre></td></tr></table></figure><h4 id="（2）椒盐噪声"><a href="#（2）椒盐噪声" class="headerlink" title="（2）椒盐噪声"></a>（2）椒盐噪声</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705150720983.png" alt="image-20240705150720983"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 生成椒盐噪声</span><br><span class="line">sp_distribution(3,3,Distribution)</span><br><span class="line">*将灰度图片GrayImage 进行添加噪声处理 得到 ImageNoise</span><br><span class="line">add_noise_distribution(GrayImage,ImageNoise,Distribution)</span><br></pre></td></tr></table></figure><h3 id="②滤波"><a href="#②滤波" class="headerlink" title="②滤波"></a>②滤波</h3><h4 id="（1）均值滤波–适合处理高斯噪声"><a href="#（1）均值滤波–适合处理高斯噪声" class="headerlink" title="（1）均值滤波–适合处理高斯噪声"></a>（1）均值滤波–适合处理高斯噪声</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705150855442.png" alt="image-20240705150855442"></p><p>图像邻域平均法算法简单，计算速度快</p><p>但它的主要缺点是在降低噪声的同时使图像产生模糊，特别在边缘和细节处</p><p>图像所用的邻域半径越大，则图像的模糊程度越大</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mean_image(Image:ImageMean:MaskWidth,MaskHeight:)</span><br></pre></td></tr></table></figure><h4 id="（2）中值滤波—适合处理椒盐噪声"><a href="#（2）中值滤波—适合处理椒盐噪声" class="headerlink" title="（2）中值滤波—适合处理椒盐噪声"></a>（2）中值滤波—适合处理椒盐噪声</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705151329809.png" alt="image-20240705151329809"></p><h2 id="15、图像的锐化–增强图像的边缘或轮廓"><a href="#15、图像的锐化–增强图像的边缘或轮廓" class="headerlink" title="15、图像的锐化–增强图像的边缘或轮廓"></a>15、图像的锐化–增强图像的边缘或轮廓</h2><p>在图像的识别中常需要突出边缘和轮廓信息</p><p><strong>图像锐化就是增强图像的边缘或轮廓</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705152150825.png" alt="image-20240705152150825"></p><p><strong>横向微分运算</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705152703494.png" alt="image-20240705152703494"></p><p><strong>纵向微分运算</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705152719305.png" alt="image-20240705152719305"></p><p><strong>双向一次微分运算</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705152738604.png" alt="image-20240705152738604"></p><h3 id><a href="#" class="headerlink" title></a></h3><p>Robert存在一定的缺陷 因为图片存在噪声的情况下 会增强大量无用的数据</p><h4 id="sobel算子"><a href="#sobel算子" class="headerlink" title="sobel算子"></a>sobel算子</h4><p>sobel算子在一定程度上克服了这个问题（sobel会使边缘锐化更明显）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* sobel算子</span><br><span class="line">*  FilterType代表滤波的类型</span><br><span class="line">sobel_amp(Image:EdgeAmplitude:FilterType,Size:)</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">*读取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/资料/B站课程资料/《机器视觉案例》/案例原图/第四章/4-8.png&#x27;</span>)</span><br><span class="line">*边缘检测</span><br><span class="line">sobel_amp (Image, EdgeAmplitude, <span class="string">&#x27;sum_abs&#x27;</span>, <span class="number">3</span>)</span><br><span class="line">*阈值分割</span><br><span class="line">threshold (EdgeAmplitude, Region, <span class="number">10</span>, <span class="number">255</span>)</span><br><span class="line">*提取边缘框架 将图片边缘进行细化</span><br><span class="line">skeleton (Region, Skeleton)</span><br><span class="line">*显示图片</span><br><span class="line">dev_display (Image)</span><br><span class="line">*设置输出颜色为红色</span><br><span class="line">dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">*显示边缘框架</span><br><span class="line">dev_display (Skeleton)</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705153911910.png" alt="image-20240705153911910"></p><h4 id="基于二阶微分的图像增强–拉普拉斯算子"><a href="#基于二阶微分的图像增强–拉普拉斯算子" class="headerlink" title="基于二阶微分的图像增强–拉普拉斯算子"></a>基于二阶微分的图像增强–拉普拉斯算子</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705154214870.png" alt="image-20240705154214870"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* 拉普拉斯算子</span><br><span class="line">laplace(Image:ImageLaplace:ResultType,MaskSize,FileterMask:)</span><br><span class="line"></span><br><span class="line">*找出过零点的像素点</span><br><span class="line">zero_crossing(Image:RegionCrossing::)</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">*关闭窗口</span><br><span class="line">dev_close_window ()</span><br><span class="line">*获取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/资料/B站课程资料/《机器视觉案例》/案例原图/第四章/4-9.png&#x27;</span>)</span><br><span class="line">*获取图像尺寸</span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line">*打开适应图片大小的窗口</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line">*显示图片</span><br><span class="line">dev_display (Image)</span><br><span class="line">*对图像进行拉普拉斯算子处理 signed代表有符号 <span class="number">3</span>代表<span class="function">MaskSize</span></span><br><span class="line"><span class="function"><span class="title">laplace</span> (<span class="params">Image, ImageLaplace, <span class="string">&#x27;signed&#x27;</span>, <span class="number">3</span>, <span class="string">&#x27;n_8_isotropic&#x27;</span></span>)</span></span><br><span class="line"><span class="function">*显示处理后的图像</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">ImageLaplace</span>)</span></span><br></pre></td></tr></table></figure><h2 id="16、频域处理法"><a href="#16、频域处理法" class="headerlink" title="16、频域处理法"></a>16、频域处理法</h2><p>低通滤波器（Low-pass Filter）和高通滤波器（High-pass Filter）是两种常见的频域滤波器，用于图像处理中的频率分析和图像增强。</p><ol><li><p><strong>低通滤波器（Low-pass Filter）：</strong><br>低通滤波器允许低频信号通过，抑制高频信号。它的作用是平滑图像、去除高频噪声、模糊图像的细节，使图像变得更加平滑。低通滤波器通常用于图像模糊、降噪和图像压缩等应用。</p><p>常见的低通滤波器包括：</p><ul><li>均值滤波器（平均滤波器）：用邻域像素的平均值替代中心像素的值。</li><li>高斯滤波器：使用高斯函数作为权重来平滑图像，具有更好的平滑效果和较好的边缘保留性能。</li><li>中值滤波器：用邻域像素的中值替代中心像素的值，对于去除椒盐噪声等非常有效。</li></ul><p>低通滤波器可以通过控制滤波器的大小或频率响应来调整平滑程度。较大的滤波器将导致更强的平滑效果，但可能会损失图像的细节。</p></li><li><p><strong>高通滤波器（High-pass Filter）：</strong><br>高通滤波器允许高频信号通过，抑制低频信号。它的作用是突出图像中的细节、边缘和纹理，增强图像的锐度和边缘信息。高通滤波器通常用于图像增强、边缘检测和纹理分析等应用。</p><p>常见的高通滤波器包括：</p><ul><li>拉普拉斯滤波器：用于增强图像的高频部分，使边缘更加明显。</li><li>Sobel滤波器：用于检测图像中的边缘，通过计算梯度来突出边缘。</li><li>Prewitt滤波器：类似于Sobel滤波器，用于检测图像中的边缘。</li></ul><p>高通滤波器可以通过控制滤波器的大小或频率响应来调整增强效果。较小的滤波器将突出较细的边缘和细节，而较大的滤波器将突出更粗的边缘和纹理。</p></li></ol><p><strong>一幅图像灰度均匀的区域对应低频部分</strong></p><p><strong>图像中的噪声、边缘、细节对应高频部分</strong></p><p> <strong>比较亮的是低频</strong>    <strong>比较暗的是高频</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705161740305.png" alt="image-20240705161740305"></p><p>低通滤波是保留低频 过滤高频</p><p>高通滤波是保留高频 过滤低频</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705161340906.png" alt="image-20240705161340906"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706115211531.png" alt="image-20240706115211531"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*进行快速傅里叶变换</span><br><span class="line">*其中<span class="string">&#x27;to_freq&#x27;</span>代表正向 ‘from_freq’代表反向</span><br><span class="line">*ResultType表示结果类型（傅里叶变换得到的结果有实部和虚部 默认为complex复数形式）</span><br><span class="line">fft_generic(Image:ImageFFT:<span class="string">&#x27;to_freq&#x27;</span>,Exponent,Norm,Mode,ResultType:)</span><br></pre></td></tr></table></figure><h3 id="①低通滤波器"><a href="#①低通滤波器" class="headerlink" title="①低通滤波器"></a>①低通滤波器</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">*读取带有椒盐噪声图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/资料/B站课程资料/《机器视觉案例》/案例原图/第四章/4-10.png&#x27;</span>)</span><br><span class="line">*获得图像尺寸</span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line">*关闭窗口</span><br><span class="line">dev_close_window ()</span><br><span class="line">*打开适应图像大小的窗口</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, <span class="number">512</span>, <span class="number">512</span>, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line">*显示图像</span><br><span class="line">dev_display (Image)</span><br><span class="line">*图像转灰度化</span><br><span class="line">rgb1_to_gray (Image, GrayImage)</span><br><span class="line">*获得一个低通滤波模型 超过<span class="number">0.1</span>就去除   </span><br><span class="line">gen_lowpass (ImageLowpass, <span class="number">0.1</span>, <span class="string">&#x27;none&#x27;</span>, <span class="string">&#x27;dc_center&#x27;</span>, Width, Height)</span><br><span class="line">*对噪声图像进行傅里叶变换，得到频率图像</span><br><span class="line">fft_generic (Image, ImageFFT, <span class="string">&#x27;to_freq&#x27;</span>, <span class="number">-1</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;dc_center&#x27;</span>, <span class="string">&#x27;complex&#x27;</span>)</span><br><span class="line">*对频率图像进行低通滤波</span><br><span class="line">convol_fft (ImageFFT, ImageLowpass, ImageConvol)</span><br><span class="line">*对频率图像进行傅里叶变换</span><br><span class="line">fft_generic (ImageConvol, ImageFFT1, <span class="string">&#x27;from_freq&#x27;</span>,<span class="number">1</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;dc_center&#x27;</span>, <span class="string">&#x27;complex&#x27;</span>) </span><br></pre></td></tr></table></figure><h3 id="②高通滤波器"><a href="#②高通滤波器" class="headerlink" title="②高通滤波器"></a>②高通滤波器</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">*关闭窗口</span><br><span class="line">dev_close_window ()</span><br><span class="line">*读取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/资料/B站课程资料/《机器视觉案例》/案例原图/第四章/4-11.png&#x27;</span>)</span><br><span class="line">*图像灰度化</span><br><span class="line">rgb1_to_gray (Image, GrayImage)</span><br><span class="line">*获取图像大小</span><br><span class="line">get_image_size (GrayImage, Width, Height)</span><br><span class="line">*打开图像适应大小窗口</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line">*得到高通滤波模型</span><br><span class="line">gen_highpass (ImageHighpass, <span class="number">0.1</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;dc_center&#x27;</span>, Width, Height)</span><br><span class="line">*对图像进行傅里叶变换</span><br><span class="line">fft_generic(GrayImage,ImageFFT,<span class="string">&#x27;to_freq&#x27;</span>,<span class="number">-1</span>,<span class="string">&#x27;none&#x27;</span>,<span class="string">&#x27;dc_center&#x27;</span>,<span class="string">&#x27;complex&#x27;</span>)</span><br><span class="line">*对频率图像进行高通滤波</span><br><span class="line">convol_fft(ImageFFT,ImageHighpass,ImageConvol)</span><br><span class="line">*对得到的频率图像进行傅里叶反变换</span><br><span class="line">fft_generic(ImageConvol,ImageResult,<span class="string">&#x27;from_freq&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;none&#x27;</span>,<span class="string">&#x27;dc_center&#x27;</span>,<span class="string">&#x27;byte&#x27;</span>)</span><br><span class="line">*显示图像</span><br><span class="line">dev_display (ImageResult)</span><br></pre></td></tr></table></figure><h3 id="③同态滤波增强—解决图像照度不均匀（或者有阴影）"><a href="#③同态滤波增强—解决图像照度不均匀（或者有阴影）" class="headerlink" title="③同态滤波增强—解决图像照度不均匀（或者有阴影）"></a>③同态滤波增强—解决图像照度不均匀（或者有阴影）</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705164044137.png" alt="image-20240705164044137"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705164537471.png" alt="image-20240705164537471"></p><h2 id="17、图像分割"><a href="#17、图像分割" class="headerlink" title="17、图像分割"></a>17、图像分割</h2><p><strong>阈值分割</strong>（Threshold Segmentation）：</p><ul><li>阈值分割是一种简单而常用的分割方法，它基于简单的像素灰度值比较来确定目标和背景之间的阈值。</li><li>阈值分割将图像中的像素根据其灰度值与给定阈值的关系分为两个类别：目标和背景。</li><li>阈值分割通常使用整数阈值进行像素分类，将低于阈值的像素标记为背景，高于或等于阈值的像素标记为目标。</li><li>阈值分割是一种简单快速的分割方法，适用于许多应用场景，但对于复杂的图像或具有多个目标的情况可能效果有限。</li></ul><p><strong>亚像素阈值分割</strong>（Subpixel Thresholding）：</p><ul><li>亚像素阈值分割是一种进一步提高分割精度的技术，它允许对像素进行更精细的分类，而不仅仅是简单的目标和背景。</li><li>亚像素阈值分割通过使用更高精度的阈值（通常是浮点数）来对像素进行分类，从而实现更精确的分割结果。</li><li>亚像素阈值分割可以将像素分类为多个类别，例如目标、背景和边界区域，并且可以提供更准确的边界位置信息。</li><li>亚像素阈值分割通常需要更复杂的计算和处理过程，相对于传统的阈值分割方法而言，计算成本更高。</li></ul><p>阈值分割是一种简单快速的分割方法，适用于许多场景</p><p>亚像素阈值分割则是一种<strong>更精确的分割技术</strong>，适用于对分割精度要求更高的任务</p><h3 id="①全局阈值分割—根据灰度不同进行分割"><a href="#①全局阈值分割—根据灰度不同进行分割" class="headerlink" title="①全局阈值分割—根据灰度不同进行分割"></a>①全局阈值分割—根据灰度不同进行分割</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706104513434.png" alt="image-20240706104513434"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706104601136.png" alt="image-20240706104601136"></p><h4 id="（1）基于直方图谷底进行阈值分割"><a href="#（1）基于直方图谷底进行阈值分割" class="headerlink" title="（1）基于直方图谷底进行阈值分割"></a>（1）基于直方图谷底进行阈值分割</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">* 读取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/资料/B站课程资料/《机器视觉案例》/案例原图/第五章/5-1.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*转为单通道的灰度图</span><br><span class="line">*rgb1_to_gray (Image, GrayImage)</span><br><span class="line"></span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line"></span><br><span class="line">dev_close_window ()</span><br><span class="line"></span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line"></span><br><span class="line">*设置显示选中的颜色</span><br><span class="line">dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*计算图像的灰度直方图  </span><br><span class="line">*得到绝对的AbsoluteHisto和相对的RelativeHisto（除以了灰度的总数值在<span class="number">0</span><span class="number">-1</span>之间）</span><br><span class="line">gray_histo (Image, Image, AbsoluteHisto, RelativeHisto)</span><br><span class="line"></span><br><span class="line">*从直方图中确定灰度值阈值 得到最小灰度值MinThresh和最大灰度值MaxThresh</span><br><span class="line">* 其中的<span class="number">8</span> 代表平滑度</span><br><span class="line">histo_to_thresh (RelativeHisto, <span class="number">8</span>, MinThresh, MaxThresh)</span><br><span class="line"></span><br><span class="line">*设置最多有<span class="number">12</span>种颜色</span><br><span class="line">dev_set_colored (<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">*进行阈值分割</span><br><span class="line">threshold (Image, Region, MinThresh[<span class="number">0</span>], MaxThresh[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">dev_display (Region)</span><br></pre></td></tr></table></figure><h4 id="（2）基于直方图的自动自动阈值分割"><a href="#（2）基于直方图的自动自动阈值分割" class="headerlink" title="（2）基于直方图的自动自动阈值分割"></a>（2）基于直方图的自动自动阈值分割</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706123906476.png" alt="image-20240706123906476"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">*获取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/资料/B站课程资料/《机器视觉案例》/案例原图/第五章/5-2.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*新开一个窗口</span><br><span class="line">dev_open_window_fit_image (Image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br><span class="line"></span><br><span class="line">rgb1_to_gray (Image, GrayImage)</span><br><span class="line"></span><br><span class="line">*自动阈值分割 <span class="number">5</span>代表的是平滑度</span><br><span class="line">auto_threshold (Image, Regions, <span class="number">5</span>)</span><br><span class="line">*显示分割区域</span><br><span class="line">dev_display (Regions)</span><br></pre></td></tr></table></figure><h3 id="②局部阈值分割"><a href="#②局部阈值分割" class="headerlink" title="②局部阈值分割"></a>②局部阈值分割</h3><p>在动态阈值分割方法中，基于图像和参考图像的像素值之间的差异来进行分割。具体步骤如下：</p><ol><li>对于原始图像<code>Image</code>和平滑后的图像<code>ImageMean</code>的每个像素位置(i, j)，计算它们的差值：<code>diff = abs(Image[i,j] - ImageMean[i,j])</code>。</li><li>根据阈值偏移量，将差值与阈值比较。如果差值大于阈值，将该位置标记为目标区域。</li><li>对于所有被标记为目标区域的位置，构建一个连通区域，将相邻的目标像素归为同一区域。</li><li>最后，将提取出的圆形区域存储在<code>RegionDynThresh</code>变量中。</li></ol><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706124648875.png" alt="image-20240706124648875"></p><p><strong>算子为dyn_threshold</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706124731427.png" alt="image-20240706124731427"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dyn_threshold(OrigImage,ThresholdImage:RegionDynThresh:Offset,LightDark:)</span><br><span class="line">下面是对该函数的详细解释：</span><br><span class="line">Image: 原始图像，用作分割的输入图像。</span><br><span class="line">ImageMean: 平滑处理后的图像，用来计算动态阈值的参考图像。</span><br><span class="line">RegionDynThresh: 存储分割结果的变量，提取出的圆形区域将存储在该变量中。</span><br><span class="line">15: 阈值偏移量，用于调整动态阈值的灵敏度。增加偏移量将导致更多的区域被认为是目标区域，而减少偏移量则会导致较少的区域被认为是目标区域。</span><br><span class="line">&#x27;not_equal&#x27;: 分割操作符，指定了使用不相等关系进行分割。这意味着对于图像中的每个像素，如果其值与对应位置的均值图像像素值不相等，则被视为目标区域。</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">*关闭窗口</span><br><span class="line">dev_close_window ()</span><br><span class="line">*获取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;photometric_stereo/embossed_01&#x27;</span>)</span><br><span class="line">*获得图像尺寸</span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line"></span><br><span class="line">*打开适应图像大小的窗口</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle1)</span><br><span class="line"></span><br><span class="line">*在图像上使用均值滤波器进行适当平滑 </span><br><span class="line">mean_image (Image, ImageMean, <span class="number">59</span>, <span class="number">59</span>)</span><br><span class="line"></span><br><span class="line">*动态阈值分割，提取圆区域 <span class="number">15</span>代表偏移量 </span><br><span class="line">* dark--代表找暗区 亮--代表亮区  equal--代表找既不是暗也不是亮区  now_equal--代表找亮和暗区</span><br><span class="line">dyn_threshold (Image, ImageMean, RegionDynThresh, <span class="number">15</span>, <span class="string">&#x27;not_equal&#x27;</span>)</span><br><span class="line"></span><br><span class="line"> * 显示图像</span><br><span class="line">dev_display (Image)</span><br><span class="line">*显示提取区域</span><br><span class="line">dev_display (RegionDynThresh)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="③边缘检测"><a href="#③边缘检测" class="headerlink" title="③边缘检测"></a>③边缘检测</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706134335998.png" alt="image-20240706134335998"></p><h4 id="（1）prewitt算子"><a href="#（1）prewitt算子" class="headerlink" title="（1）prewitt算子"></a>（1）prewitt算子</h4><p><strong>(相比于sobel算子，抑制噪声的影响的效果更好)</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">*读取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;fabrik&#x27;</span>)</span><br><span class="line">*用prewitt算子进行边缘提取</span><br><span class="line">prewitt_amp (Image, ImageEdgeAmp)</span><br><span class="line">*进行阈值操作</span><br><span class="line">threshold (ImageEdgeAmp, Region, <span class="number">20</span>, <span class="number">255</span>)</span><br><span class="line">*骨骼化操作</span><br><span class="line">skeleton (Region, Skeleton)</span><br><span class="line">*显示图像</span><br><span class="line">dev_display (Image)</span><br><span class="line">*设置输出颜色为红色</span><br><span class="line">dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">*显示骨骼图像</span><br><span class="line">dev_display (Skeleton)</span><br></pre></td></tr></table></figure><h4 id="（2）kirsch算子"><a href="#（2）kirsch算子" class="headerlink" title="（2）kirsch算子"></a>（2）kirsch算子</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706135152941.png" alt="image-20240706135152941"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">*读取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;fabrik&#x27;</span>)</span><br><span class="line">*用kirsch算子进行边缘检测</span><br><span class="line">kirsch_amp (Image, ImageEdgeAmp)</span><br><span class="line">*进行阈值操作</span><br><span class="line">threshold (ImageEdgeAmp, Region, <span class="number">70</span>, <span class="number">255</span>)</span><br><span class="line">*骨骼化操作</span><br><span class="line">skeleton (Region, Skeleton)</span><br><span class="line">*显示图像</span><br><span class="line">dev_display (Image)</span><br><span class="line">*设置输出颜色为红色</span><br><span class="line">dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">*显示骨骼图像</span><br><span class="line">dev_display (Skeleton)</span><br></pre></td></tr></table></figure><h4 id="（3）log算子（laplace-of-gauss）"><a href="#（3）log算子（laplace-of-gauss）" class="headerlink" title="（3）log算子（laplace_of_gauss）"></a>（3）log算子（laplace_of_gauss）</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706135429139.png" alt="image-20240706135429139"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706141546230.png" alt="image-20240706141546230"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706140539333.png" alt="image-20240706140539333"></p><h4 id="（4）canny算子"><a href="#（4）canny算子" class="headerlink" title="（4）canny算子"></a>（4）canny算子</h4><p>canny算子和log算子类似 都是<strong>先平滑后求导</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">*获取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;fabrik&#x27;</span>)</span><br><span class="line">*使用canny算法进行边缘提取</span><br><span class="line">edges_image (Image, ImaAmp, ImaDir, <span class="string">&#x27;canny&#x27;</span>, <span class="number">0.5</span>, <span class="string">&#x27;nms&#x27;</span>, <span class="number">12</span>, <span class="number">22</span>)</span><br><span class="line">*阈值分割</span><br><span class="line">threshold (ImaAmp, Edges, <span class="number">1</span>, <span class="number">255</span>)</span><br><span class="line">*骨骼化</span><br><span class="line">skeleton (Edges, Skeleton)</span><br><span class="line">*将骨骼化的区域转化为XLD (轮廓)</span><br><span class="line">gen_contours_skeleton_xld (Skeleton, Contours, <span class="number">1</span>, <span class="string">&#x27;filter&#x27;</span>)</span><br><span class="line">*显示图像</span><br><span class="line">dev_display (Image)</span><br><span class="line">*设置<span class="number">6</span>种输出颜色</span><br><span class="line">dev_set_colored (<span class="number">6</span>)</span><br><span class="line">*显示<span class="function">XLD</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">Contours</span>)</span></span><br></pre></td></tr></table></figure><p><strong>亚像素级别的边缘提取</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706142804274.png" alt="image-20240706142804274"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* 关闭窗口</span><br><span class="line">dev_close_window ()</span><br><span class="line">* 读取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;fabrik&#x27;</span>)</span><br><span class="line">* 打开适应图像大小的窗口</span><br><span class="line">dev_open_window_fit_image (Image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle)</span><br><span class="line">* 对图像进行亚像素区域提取</span><br><span class="line">edges_sub_pix (Image, Edges, <span class="string">&#x27;canny&#x27;</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">22</span>)</span><br><span class="line">* 放大图像用于详细的边缘检查</span><br><span class="line">dev_set_part (<span class="number">160</span>, <span class="number">250</span>, <span class="number">210</span>, <span class="number">300</span>)</span><br><span class="line">dev_display (Image)</span><br><span class="line">dev_display (Edges)</span><br></pre></td></tr></table></figure><h3 id="④区域分割–将具有相同属性的像素归为同一个区域"><a href="#④区域分割–将具有相同属性的像素归为同一个区域" class="headerlink" title="④区域分割–将具有相同属性的像素归为同一个区域"></a>④区域分割–将具有相同属性的像素归为同一个区域</h3><h4 id="（1）区域生长"><a href="#（1）区域生长" class="headerlink" title="（1）区域生长"></a>（1）区域生长</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706143522490.png" alt="image-20240706143522490"></p><p><strong>halcon的生长算子</strong></p><p>  <code> regiongrowing_mean</code> 中指明了起始的生长坐标</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706144147387.png" alt="image-20240706144147387"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706145318441.png" alt="image-20240706145318441"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">*读取图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;fabrik&#x27;</span>)</span><br><span class="line">*对图像进行均值处理，选用circle类型的中值滤波器 对图片进行去噪操作</span><br><span class="line">median_image (Image, ImageMedian, <span class="string">&#x27;circle&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;mirrored&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*使用regiongrowing算子寻找颜色相近的邻域 输入ImageMedian 得到生长后的区域Regions</span><br><span class="line">*对图片进行区域生长 <span class="number">1</span>（ROW）和<span class="number">1</span>（COL）代表一个点距离下一个点之间的像素差距是多少</span><br><span class="line">*<span class="number">2</span>代表的是灰度值的差值 <span class="number">5000</span>代表的是输出区域的每个区域至少是<span class="number">5000</span></span><br><span class="line">regiongrowing (ImageMedian, Regions, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5000</span>)</span><br><span class="line"></span><br><span class="line">*对图像进行区域分割，提取满足各个条件的各个独立区域</span><br><span class="line">*找到每一个分割好的区域的中心 存入到<span class="function">Centers</span></span><br><span class="line"><span class="function"><span class="title">shape_trans</span> (<span class="params">Regions, Centers, <span class="string">&#x27;inner_center&#x27;</span></span>)</span></span><br><span class="line"><span class="function">*将每个中心依次存入到SingleCenters</span></span><br><span class="line"><span class="function"><span class="title">connection</span> (<span class="params">Centers, SingleCenters</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">*计算出初步提取的区域的中心点坐标</span></span><br><span class="line"><span class="function"><span class="title">area_center</span> (<span class="params">SingleCenters, Area, Row, Column</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">*以均值灰度图像为输入，进行区域增长计算，计算的起始坐标为上一步的各区域中心</span></span><br><span class="line"><span class="function">*种子点为刚刚所获得的每个区域中心点坐标</span></span><br><span class="line"><span class="function"><span class="title">regiongrowing_mean</span> (<span class="params">ImageMedian, RegionsMean, Row, Column, <span class="number">25</span>, <span class="number">100</span></span>)</span></span><br></pre></td></tr></table></figure><h4 id="（2）区域分裂合并法"><a href="#（2）区域分裂合并法" class="headerlink" title="（2）区域分裂合并法"></a>（2）区域分裂合并法</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706151844833.png" alt="image-20240706151844833"></p><h4 id="（3）Hough变换–检测线"><a href="#（3）Hough变换–检测线" class="headerlink" title="（3）Hough变换–检测线"></a>（3）Hough变换–检测线</h4><p><strong>将间断的边缘链接成有意义的完整边缘，同时去除假边缘</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706153153851.png" alt="image-20240706153153851"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">*读取图像 </span><br><span class="line">read_image (Image, <span class="string">&#x27;fabrik&#x27;</span>)</span><br><span class="line">*获得目标区域图像</span><br><span class="line">rectangle1_domain (Image, ImageReduced, <span class="number">170</span>, <span class="number">280</span>, <span class="number">310</span>, <span class="number">360</span>)</span><br><span class="line">* 用Sobel边缘检测算子提取边缘</span><br><span class="line">sobel_dir (ImageReduced, EdgeAmplitude, EdgeDirection, <span class="string">&#x27;sum_abs&#x27;</span>, <span class="number">3</span>)</span><br><span class="line">*设置输出颜色为红色</span><br><span class="line">dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">*阈值分割得到图像</span><br><span class="line">threshold (EdgeAmplitude, Region, <span class="number">55</span>, <span class="number">255</span>)</span><br><span class="line">* 截取刚刚用阈值分割所覆盖的图像</span><br><span class="line">reduce_domain (EdgeDirection, Region, EdgeDirectionReduced)</span><br><span class="line"></span><br><span class="line">* 进行Hough变换</span><br><span class="line">*输入的是边缘检测得到的方向图（EdgeDirection）</span><br><span class="line">*输出的是hough变换的映射图和检测的Lines图</span><br><span class="line">*<span class="number">4</span>代表的是方向的不确定度（即可以容忍的角度偏差度为多少）</span><br><span class="line">*<span class="number">2</span>代表的是角度的分辨率</span><br><span class="line">*’mean’代表的是平滑处理（为了去除噪点） <span class="number">3</span>代表做平滑处理的模板大小</span><br><span class="line">*<span class="number">25</span>代表投票数需要达到<span class="number">25</span>才有效</span><br><span class="line">*前一个<span class="number">5</span>约束角度 后一个<span class="number">5</span>约束距离</span><br><span class="line">*‘<span class="literal">true</span>’代表是否产生Line Region</span><br><span class="line">*输出Angle（角度）和Dist（距离）</span><br><span class="line">hough_lines_dir (EdgeDirectionReduced, HoughImage, Lines, <span class="number">4</span>, <span class="number">2</span>, <span class="string">&#x27;mean&#x27;</span>, <span class="number">3</span>, <span class="number">25</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="string">&#x27;true&#x27;</span>, Angle, Dist)</span><br><span class="line"></span><br><span class="line">*将霍夫变换提取直线以普通形式描述的输入行存储为区域</span><br><span class="line">gen_region_hline (LinesHNF, Angle, Dist)</span><br><span class="line">*显示图像</span><br><span class="line">dev_display (Image)</span><br><span class="line">*设置输出颜色数目</span><br><span class="line">dev_set_colored (<span class="number">12</span>)</span><br><span class="line">*设置输出填充方式为“轮廓”</span><br><span class="line">dev_set_draw (<span class="string">&#x27;margin&#x27;</span>)</span><br><span class="line">*显示<span class="function">LinesHNF</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">LinesHNF</span>) </span></span><br><span class="line"><span class="function">*设置输出填充方式为“填充”</span></span><br><span class="line"><span class="function"><span class="title">dev_set_draw</span> (<span class="params"><span class="string">&#x27;fill&#x27;</span></span>)</span></span><br><span class="line"><span class="function">*显示Lines</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">Lines</span>)</span></span><br></pre></td></tr></table></figure><h4 id="（4）Hough变换—检测圆"><a href="#（4）Hough变换—检测圆" class="headerlink" title="（4）Hough变换—检测圆"></a>（4）Hough变换—检测圆</h4><p><strong>Halcon算子</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706164826333.png" alt="image-20240706164826333"></p><p>其中Percent代表圆占整个图片的百分比</p><p>Mode代表确定圆位置的模式（用外圈还是内圈）</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706164838335.png" alt="image-20240706164838335"></p><h3 id="⑤分水岭算法—基于边缘的图像分割"><a href="#⑤分水岭算法—基于边缘的图像分割" class="headerlink" title="⑤分水岭算法—基于边缘的图像分割"></a>⑤分水岭算法—基于边缘的图像分割</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707104706403.png" alt="image-20240707104706403"></p><p>为了解决过度分割的问题，可以使用基于标记(mark)图像的分水岭算法，就是通过先验知识，来指导分水岭算法，以便获得更好的图像分段效果。</p><p>在这个区域的洪水淹没过程中，水平面都是从定义的高度开始的,这样可以避免一些很小的噪声极值区域的分割。</p><p>这个就是<strong>阈值化的提取</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707105404681.png" alt="image-20240707105404681"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">*获取图像</span><br><span class="line">read_image (Br2, <span class="string">&#x27;particle&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*对单通道图像进行高斯平滑处理，去除噪声</span><br><span class="line">gauss_filter (Br2, ImageGauss, <span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">*将图像颜色进行反转</span><br><span class="line">invert_image (ImageGauss, ImageInvert)</span><br><span class="line"></span><br><span class="line">*对高斯平滑后的图像进行分数岭处理，提取出盆地区域</span><br><span class="line">*输入图像 输出分水岭和盆地</span><br><span class="line">watersheds (ImageInvert, Basins, Watersheds)</span><br><span class="line"></span><br><span class="line">*对图像进行带阈值的分水岭处理 阈值为<span class="number">30</span></span><br><span class="line">*输入图像和阈值 输出分水岭</span><br><span class="line">watersheds_threshold (ImageInvert, Basins1,<span class="number">30</span>)</span><br></pre></td></tr></table></figure><h2 id="18、特征提取"><a href="#18、特征提取" class="headerlink" title="18、特征提取"></a>18、特征提取</h2><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707122525680.png" alt="image-20240707122525680"></p><h3 id="①特征的分类"><a href="#①特征的分类" class="headerlink" title="①特征的分类"></a>①特征的分类</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707122833229.png" alt="image-20240707122833229"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707123031891.png" alt="image-20240707123031891"></p><h3 id="②区域形状特征"><a href="#②区域形状特征" class="headerlink" title="②区域形状特征"></a>②区域形状特征</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707123429651.png" alt="image-20240707123429651"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">*获得Regions区域的每个对象面积，中心点Row，Col信息</span><br><span class="line">area_center(Regions:::Area,Row,Column)</span><br><span class="line"></span><br><span class="line">*获得封闭区域孔洞的面积 一个区域包含多个孔洞 所以返回的是所有孔洞的面积之和</span><br><span class="line">area_holes(Regions:::Area)</span><br><span class="line"></span><br><span class="line">*根据特征提取出符合条件的区域</span><br><span class="line">select_shape(Regions:SelectedRegions:Features,Operation,Min,Max:)</span><br><span class="line"></span><br><span class="line">*计算每个区域的内接圆</span><br><span class="line">inner_circle(Regions:::Row,Column,Radius)</span><br><span class="line"></span><br><span class="line">*计算区域外接矩形</span><br><span class="line">*第一种是是平行的矩形 得到左上角点和右下角点</span><br><span class="line">smallest_rectangle1(Regions:::Row1,Column1,Row2,Column2)</span><br><span class="line">*第二种是可以旋转的矩形 得到固定点、旋转角度、半宽、半高</span><br><span class="line">smallest_rectangle1(Regions:::Row,Column,Phi,Length1,Length2)</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707130336770.png" alt="image-20240707130336770"></p><p><strong>选择 面积在500-2000之间 而且 区域宽和高的比值在1-1.7</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707131135279.png" alt="image-20240707131135279"></p><h3 id="③基于灰度值的特征"><a href="#③基于灰度值的特征" class="headerlink" title="③基于灰度值的特征"></a>③基于灰度值的特征</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707140247631.png" alt="image-20240707140247631"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">*用于计算指定区域的灰度值特征值</span><br><span class="line">gray_features(Regions,Image::Features:Value)</span><br><span class="line"></span><br><span class="line">*计算区域的灰度值平均值和方差</span><br><span class="line">intensity(Regions,Image:::Mean,Deviation)</span><br><span class="line"></span><br><span class="line">*计算区域的最大最小灰度值 Percent代表向内收缩的比例 因为希望去除噪声的影响 </span><br><span class="line">min_max_gray(Regions,Image::Percent:Min,Max,Range)</span><br><span class="line"></span><br><span class="line">*提取灰度区域的面积和中心(每个点的灰度值求和 其实是重心的坐标)</span><br><span class="line">area_center_gray(Regions,Image:::Area,Row,Column)</span><br><span class="line"></span><br><span class="line">*根据灰度特征值选择区域</span><br><span class="line">select_gray(Regions,Image:SelectedRegions:Features,Operation,Min,Max:)</span><br></pre></td></tr></table></figure><h3 id="④基于图像纹理的特征"><a href="#④基于图像纹理的特征" class="headerlink" title="④基于图像纹理的特征"></a>④基于图像纹理的特征</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707144646146.png" alt="image-20240707144646146"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707144819692.png" alt="image-20240707144819692"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240707151201916.png" alt="image-20240707151201916"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*创建图像中某个区域的共生矩阵 ldGray代表灰度级 Direction代表方向（0,45,90,135）</span><br><span class="line">gen_cooc_matrix(Regions,Image:Matrix:LdGray,Direction:)</span><br><span class="line"></span><br><span class="line">*基于灰度共生矩阵计算特征值 </span><br><span class="line">* 输入灰度共生矩阵 输出 能量 相关性 局部均匀性 对比度</span><br><span class="line">cooc_feature_matrix(CoocMatrix:::Energy,Correlation,Homogeneity,Contrast)</span><br><span class="line"></span><br><span class="line">*二合一算子</span><br><span class="line">*计算共生矩阵 并且 导出灰度值特征</span><br><span class="line">cocc_feature_image(Regions,Image::LdGray,Direction:Energy,Correlation,Homogeneity,Contrast)</span><br></pre></td></tr></table></figure><h2 id="19、二值图像的形态学处理"><a href="#19、二值图像的形态学处理" class="headerlink" title="19、二值图像的形态学处理"></a>19、二值图像的形态学处理</h2><h3 id="①反射的概念"><a href="#①反射的概念" class="headerlink" title="①反射的概念"></a>①反射的概念</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709110345302.png" alt="image-20240709110345302"></p><h3 id="②腐蚀"><a href="#②腐蚀" class="headerlink" title="②腐蚀"></a>②腐蚀</h3><p>注意：</p><p>使用结构元素腐蚀完后 所有的中心点就构成了一个新图形（所以腐蚀区域与结构元素的大小有关）<img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709110812775.png" alt="image-20240709110812775"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">*使用圆形结构元素对区域进行腐蚀</span><br><span class="line">erosion_circle(Region:RegionErosion:Radius:)</span><br><span class="line"></span><br><span class="line">*使用矩形结构元素对区域进行腐蚀</span><br><span class="line">erosion_rectangle1(Region:RegionErosion:Width,Hright:)</span><br><span class="line"></span><br><span class="line">*使用生成的结构元素对区域进行腐蚀（参考点为结构元素的中心）</span><br><span class="line">*Iterations是迭代次数的含义 代表要腐蚀多少次</span><br><span class="line">erosion1(Region,StructElement:RegionErosion:Iterations:)</span><br><span class="line"></span><br><span class="line">*使用生成的结构元素对区域进行腐蚀（可以手动设置参考点的位置）</span><br><span class="line">erosion1(Region,StructElement:RegionErosion:Row,Column,Iterations:)</span><br></pre></td></tr></table></figure><h3 id="③膨胀"><a href="#③膨胀" class="headerlink" title="③膨胀"></a>③膨胀</h3><p>只要结构元素与被腐蚀图像存在交集即可</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709114534789.png" alt="image-20240709114534789"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">*使用圆形结构元素对区域进行膨胀</span><br><span class="line">dilation_circle(Region:RegionDilation:Radius:)</span><br><span class="line"></span><br><span class="line">*使用矩形结构元素对区域进行膨胀</span><br><span class="line">dilation_rectangle1(Region:RegionDilation:Width,Height:)</span><br><span class="line"></span><br><span class="line">*使用生成结构元素对区域进行膨胀（参考点为结构元素的中心）</span><br><span class="line">dilation1(Region,StructElement:RegionDilation:Iterations:)</span><br><span class="line"></span><br><span class="line">*使用生成结构元素对区域进行膨胀（参考点可以自行设置）</span><br><span class="line">dilation2(Region,StructElement:RegionDilation:Row,Column,Iterations:)</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709115957881.png" alt="image-20240709115957881"></p><h3 id="④开闭运算"><a href="#④开闭运算" class="headerlink" title="④开闭运算"></a>④开闭运算</h3><h4 id="开运算—先腐蚀后膨胀—去毛刺杂质"><a href="#开运算—先腐蚀后膨胀—去毛刺杂质" class="headerlink" title="开运算—先腐蚀后膨胀—去毛刺杂质"></a>开运算—先腐蚀后膨胀—去毛刺杂质</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709120218367.png" alt="image-20240709120218367"></p><h4 id="闭运算—先膨胀，后腐蚀—填空隙"><a href="#闭运算—先膨胀，后腐蚀—填空隙" class="headerlink" title="闭运算—先膨胀，后腐蚀—填空隙"></a>闭运算—先膨胀，后腐蚀—填空隙</h4><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709120426093.png" alt="image-20240709120426093"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*使用生成结构元素对区域进行开运算</span><br><span class="line">opening(Region,StructElement:RegionOpening::)</span><br><span class="line"></span><br><span class="line">*使用圆形结构元素对区域进行开运算</span><br><span class="line">opening_circle(Region:RegionOpening:Radius:)</span><br><span class="line"></span><br><span class="line">*使用矩形结构元素对区域进行开运算</span><br><span class="line">opening_rectangle1(Region:RegionOpening:Width,Height:)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*使用生成结构元素对区域进行闭运算</span><br><span class="line">closing(Region,StructElement:RegionClosing::)</span><br><span class="line"></span><br><span class="line">*使用圆形结构元素对区域进行闭运算</span><br><span class="line">closing_circle(Region:RegionClosing:Radius:)</span><br><span class="line"></span><br><span class="line">*使用矩形结构元素对区域进行闭运算</span><br><span class="line">closing_rectangle1(Region:RegionClosing:Width,Height:)</span><br></pre></td></tr></table></figure><h3 id="⑤击中和击不中"><a href="#⑤击中和击不中" class="headerlink" title="⑤击中和击不中"></a>⑤击中和击不中</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709121951954.png" alt="image-20240709121951954"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*击中与击不中算子</span><br><span class="line">*输入图像区域 并且输入两个结构元素 两个结构元素交集是空集 一个是击中 一个是击不中</span><br><span class="line">*Row,Column代表的是参考点的行和列坐标</span><br><span class="line">hit_or_miss(Region,StructElement1,StructElement2:RegionHitMiss:Row,Column:)</span><br></pre></td></tr></table></figure><h2 id="20、灰度图像的形态学处理"><a href="#20、灰度图像的形态学处理" class="headerlink" title="20、灰度图像的形态学处理"></a>20、灰度图像的形态学处理</h2><h3 id="①灰度图像的形态学操作"><a href="#①灰度图像的形态学操作" class="headerlink" title="①灰度图像的形态学操作"></a>①灰度图像的形态学操作</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709123045867.png" alt="image-20240709123045867"></p><h3 id="②灰度腐蚀与膨胀运算"><a href="#②灰度腐蚀与膨胀运算" class="headerlink" title="②灰度腐蚀与膨胀运算"></a>②灰度腐蚀与膨胀运算</h3><p>灰度腐蚀能够被用来 <strong>分开相互连接的亮物体</strong> 和 <strong>连接支离破碎的暗物体</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709123239326.png" alt="image-20240709123239326"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*使用生成结构元素对灰度图像进行腐蚀操作</span><br><span class="line">gray_erosion(Image,SE:ImageErosion::)</span><br><span class="line"></span><br><span class="line">*使用矩形结构元素对灰度图像进行腐蚀操作</span><br><span class="line">gray_erosion_rect(Image:ImageMin:MaskHeight,MaskWidth:)</span><br><span class="line"></span><br><span class="line">*使用多边形结构元素对灰度图像进行腐蚀操作</span><br><span class="line">gray_erosion_shape(Image:ImageMin:MaskHeight,MaskWidth,MaskShape:)</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709123501895.png" alt="image-20240709123501895"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*使用生成结构元素对灰度图像进行膨胀操作</span><br><span class="line">gray_dilation(Image,SE:ImageDilation::)</span><br><span class="line"></span><br><span class="line">*使用矩形结构元素对灰度图像进行膨胀操作</span><br><span class="line">gray_dilation_rect(Image:ImageMax:MaskHeight,MaskWidth:)</span><br><span class="line"></span><br><span class="line">*使用多边形结构元素对灰度图像进行膨胀操作</span><br><span class="line">gray_dilation_shape(Image:ImageMax:MaskHeight,MaskWidth,MaskShape:)</span><br></pre></td></tr></table></figure><h3 id="③灰度开运算与闭运算"><a href="#③灰度开运算与闭运算" class="headerlink" title="③灰度开运算与闭运算"></a>③灰度开运算与闭运算</h3><p>经过 <strong>开运算</strong> 后，图片 <strong>先腐蚀后膨胀</strong></p><p>图片的<strong>整体色调变暗</strong>，但是图片中<strong>阴影和明亮处的界限并未改变</strong>，每一部分的<strong>亮部和暗部都更加平滑</strong>了</p><p><strong>Gray Opening Shape（灰度开运算）</strong>是先对图像进行腐蚀操作，再进行膨胀操作。它的作用是消除图像中的细小尖锐物体、噪点或细小连接区域。灰度开运算可以使图像中<strong>较亮的区域变得更暗</strong>，而<strong>较暗的区域则不会有太大的变化，<code>也就是会增加暗的像素点</code></strong>———-<strong>灰度开运算用于去除细小的尖锐物体或噪点</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709124350318.png" alt="image-20240709124350318"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*使用生成结构元素对灰度图像进行开运算</span><br><span class="line">gray_opening(Image,SE:ImageOpening::)</span><br><span class="line"></span><br><span class="line">*使用矩形结构元素对灰度图像进行开运算</span><br><span class="line">gray_opening_rect(Image:ImageOpening:MaskHeight,MaskWidth:)</span><br><span class="line"></span><br><span class="line">*使用多边形结构元素对灰度图像进行开运算</span><br><span class="line">gray_opening_shape(Image:ImageOpening:MaskHeight,MaskWidth,MaskShape:)</span><br></pre></td></tr></table></figure><p>经过 <strong>闭运算</strong> 后，图片 <strong>先膨胀后腐蚀</strong></p><p>图片的<strong>整体色调变亮</strong>，<strong>界限没有改变</strong>，<strong>明亮也更加平滑</strong>了</p><p><strong>Gray Closing Shape（灰度闭运算）</strong>是先对图像进行膨胀操作，再进行腐蚀操作。它的作用是填充图像中的小孔洞，平滑图像的边界并连接相邻的区域。灰度闭运算可以使图像中<strong>较暗的区域变得更亮</strong>，而<strong>较亮的区域则不会有太大的变化，<code>也就是会增加亮的像素点</code></strong>——-<strong>灰度闭运算用于填充小孔洞、连接相邻区域</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709124400077.png" alt="image-20240709124400077"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*使用生成结构元素对灰度图像进行闭运算</span><br><span class="line">gray_closing(Image,SE:ImageClosing::)</span><br><span class="line"></span><br><span class="line">*使用矩形结构元素对灰度图像进行闭运算</span><br><span class="line">gray_closing_rect(Image:ImageClosing:MaskHeight,MaskWidth:)</span><br><span class="line"></span><br><span class="line">*使用多边形结构元素对灰度图像进行闭运算</span><br><span class="line">gray_closing_shape(Image:ImageClosing:MaskHeight,MaskWidth,MaskShape:)</span><br></pre></td></tr></table></figure><h3 id="④顶帽和底帽运算"><a href="#④顶帽和底帽运算" class="headerlink" title="④顶帽和底帽运算"></a>④顶帽和底帽运算</h3><p>顶帽和底帽运算就是在开运算和闭运算的基础上，来处理图像中出现的各种杂点、空洞、小的间隙、毛躁的边缘等</p><p>顶帽操作的效果等同于<strong>原图-开运算</strong>，即原图减去开运算的图像——-<strong>通常用来去除背景</strong></p><p>底帽操作的效果等同于<strong>原图-闭运算</strong>，即原图减去闭运算的图像</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709125953839.png" alt="image-20240709125953839"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*顶帽运算</span><br><span class="line">gray_tophat(Image, SE : ImageTopHat : : )</span><br><span class="line"></span><br><span class="line">*底帽运算</span><br><span class="line">gray_bothat(Image, SE : ImageBotHat : : )</span><br></pre></td></tr></table></figure><h2 id="21、边界提取"><a href="#21、边界提取" class="headerlink" title="21、边界提取"></a>21、边界提取</h2><p>边界提取得到的仍然是region类型</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709130945037.png" alt="image-20240709130945037"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 提取边界的算子</span><br><span class="line">* BoundaryType可选inner(内边界)，outer（外边界），inner_filled(内边界，并且将内部孔洞填充)；</span><br><span class="line">boundary(Region:RegionBorder:BoundaryType:)</span><br></pre></td></tr></table></figure><h2 id="22、孔洞填充"><a href="#22、孔洞填充" class="headerlink" title="22、孔洞填充"></a>22、孔洞填充</h2><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709131630770.png" alt="image-20240709131630770"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*孔洞填充</span><br><span class="line">fIll_up(Region:RegionFillUp)c</span><br><span class="line"></span><br><span class="line">*选择一些特定区域进行填充</span><br><span class="line">fill_uo_shape(Region:RegionFillUp:Frature,min,max)</span><br></pre></td></tr></table></figure><h2 id="23、骨架提取"><a href="#23、骨架提取" class="headerlink" title="23、骨架提取"></a>23、骨架提取</h2><p>骨架提取得到的仍然是region类型</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709132246949.png" alt="image-20240709132246949"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*骨架骨骼提取</span><br><span class="line">skeleton(Region:Skeleton::)</span><br></pre></td></tr></table></figure><h2 id="24、图像模板匹配"><a href="#24、图像模板匹配" class="headerlink" title="24、图像模板匹配"></a>24、图像模板匹配</h2><p>图像模板匹配:在整个图像区域发现与给定子图像匹配的小块区域</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709134057720.png" alt="image-20240709134057720"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709134434371.png" alt="image-20240709134434371"></p><h3 id="①基于相关性匹配"><a href="#①基于相关性匹配" class="headerlink" title="①基于相关性匹配"></a>①基于相关性匹配</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709135454785.png" alt="image-20240709135454785"></p><p><strong>适用于光照不均匀 光线明暗变化较大的 但背景不是特别复杂的场景</strong></p><p>注意：</p><p><strong>在相关性匹配的过程中 模板图片的角度会归为0度 所以仿射变换的过程中是从0度开始变换的</strong></p><p><strong>并且 在创建模板和寻找的过程中 做好是360度匹配（rad(0)–rad(360)）(但是圆不需要)</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240712114057290.png" alt="image-20240712114057290"></p><p>基于相关性的匹配算法模板</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">*抠图 抠出模板图片</span><br><span class="line"></span><br><span class="line">*创建NCC匹配模板</span><br><span class="line">create_ncc_model(Template::NumLevels,AngleStart,AngleExtent,AngleStep,MetricLModelID)</span><br><span class="line"></span><br><span class="line">*搜索NCC最佳匹配</span><br><span class="line">find_ncc_model(Image::ModelID,AngleStart,AngleExtent,MinScore,NumMatches,MaxOverlap,SubPixel,Numlevels:Row.Column,Angle,Score)</span><br><span class="line"></span><br><span class="line">*进行仿射变换（把原先画的区域移到找到区域的位置）</span><br><span class="line">vector_angle_to_rigid (ModelRow, ModelColumn, <span class="number">0</span>, Row, Column, Angle, HomMat2D)</span><br><span class="line">affine_trans_region (ModelRegion, RegionAffineTrans, HomMat2D, <span class="string">&#x27;nearest_neighbor&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*释放模板资源</span><br><span class="line">clear_ncc_model(ModelID)</span><br></pre></td></tr></table></figure><h3 id="②基于像素灰度值的模板匹配"><a href="#②基于像素灰度值的模板匹配" class="headerlink" title="②基于像素灰度值的模板匹配"></a>②基于像素灰度值的模板匹配</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709134606814.png" alt="image-20240709134606814"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*创建带旋转角度的灰度匹配模板</span><br><span class="line">create_template(Template : : FirstError, NumLevel, Optimize, GrayValues : TemplateID)</span><br><span class="line">*创建不带旋转角度的灰度匹配模板</span><br><span class="line">create_template_rot(Template : : NumLevel, AngleStart, AngleExtend, AngleStep, Optimize, GrayValues : TemplateID)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*搜索最佳匹配 _rot代表带角度的 _mg代表带金字塔层数的</span><br><span class="line">best_match_rot_mg(Image : : TemplateID, AngleStart, AngleExtend, MaxError, SubPixel, NumLevels : Row, Column, Angle, Error)</span><br><span class="line"></span><br><span class="line">*再进行划线展示（仿射变换 或者 disp直接显示)</span><br><span class="line"></span><br><span class="line">*释放模板资源</span><br><span class="line">clear_ncc_model(ModelID)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*计算区域与图像的平均值和差值 看这个区域的差别在哪里</span><br><span class="line">intensity(Regions, Image : : : Mean, Deviation)</span><br><span class="line"></span><br><span class="line">*根据均值进行自适应调整 </span><br><span class="line">set_offset_template( : : TemplateID, GrayOffset : )</span><br></pre></td></tr></table></figure><h3 id="③基于特征的模板匹配——不变矩匹配法"><a href="#③基于特征的模板匹配——不变矩匹配法" class="headerlink" title="③基于特征的模板匹配——不变矩匹配法"></a>③基于特征的模板匹配——不变矩匹配法</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709144356449.png" alt="image-20240709144356449"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709144512598.png" alt="image-20240709144512598"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709150615789.png" alt="image-20240709150615789"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709145456907.png" alt="image-20240709145456907"></p><h3 id="④基于形状特征的匹配"><a href="#④基于形状特征的匹配" class="headerlink" title="④基于形状特征的匹配"></a>④基于形状特征的匹配</h3><p><strong>注意</strong></p><p>轮廓的位置会自动移到（0，0)的位置 所以起始变化点是（0，0)</p><p><strong>XLD</strong>（eXtended Line Descriptions）：换句话说XLD就是一个轮廓函数，它不是基于像素，人们通常称他为亚像素，只不过它比像素更精确，可以精确到像素内部的一种描述。<br>       在Halcon中，使用XLD表示亚像素的轮廓和多边形。常用edges_sub_pix算子来提取亚像素轮廓。<br>       我们都知道图片是由像素组成，当我们用halcon读取图像Image或者region的时候，获得的数据就是像素。这些数据结构都是像素级别的。<br>       获得图像后，我们可以通过亚像素阈值分割或者亚像素边缘提取，这样这些处理得到的结果其实就是用亚像素轮廓来表示。。<br>       上述所述亚像素轮廓其实在halcon中指的就是xld，它可以表示直线或多边形，是一组有序的控制点集合，控制点顺序用来说明彼此相连的关系。</p><p><strong>多模板匹配例程所在位置</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240712151816925.png" alt="image-20240712151816925"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">可以获得区域的轮廓</span><br><span class="line">inspect_shape_model (Image, ModelImages, ModelRegions, 1, 30)</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709151005939.png" alt="image-20240709151005939"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709151243326.png" alt="image-20240709151243326"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">*抠图 抠出模板图片</span><br><span class="line"></span><br><span class="line">--------------------------创建形状匹配模板-----------------；</span><br><span class="line">create_shape_model(Template : : NumLevels, AngleStart, AngleExtent, AngleStep, Optimization, Metric, Contrast, MinContrast : ModelID)</span><br><span class="line">*创建行和列均匀收缩变化的形状匹配模板</span><br><span class="line">create_scaled_shape_model(Template : : NumLevels, AngleStart, AngleExtent, AngleStep, ScaleMin, ScaleMax, ScaleStep, Optimization, Metric, Contrast, MinContrast : ModelID)</span><br><span class="line">*创建行和列不均匀收缩变化的形状匹配模板</span><br><span class="line">create_aniso_shape_model(Template : : NumLevels, AngleStart, AngleExtent, AngleStep, ScaleRMin, ScaleRMax, ScaleRStep, ScaleCMin, ScaleCMax, ScaleCStep, Optimization, Metric, Contrast, MinContrast : ModelID)</span><br><span class="line"></span><br><span class="line">-----------------------------获取形状模板的轮廓------------------；</span><br><span class="line">get_shape_model_contours( : ModelContours : ModelID, Level : )</span><br><span class="line"></span><br><span class="line">-------------------------------*寻找最佳匹配--------------------</span><br><span class="line">------注意find_shape_models代表多个模板匹配 在model后面加一个s-----------；</span><br><span class="line">find_shape_model(Image : : ModelID, AngleStart, AngleExtent, MinScore, NumMatches, MaxOverlap, SubPixel, NumLevels, Greediness : Row, Column, Angle, Score)</span><br><span class="line">*寻找最佳匹配（这个模板是进行等比例大小缩放过的）</span><br><span class="line">find_scaled_shape_model(Image : : ModelID, AngleStart, AngleExtent, ScaleMin, ScaleMax, MinScore, NumMatches, MaxOverlap, SubPixel, NumLevels, Greediness : Row, Column, Angle, Scale, Score)</span><br><span class="line">*寻找最佳匹配（这个模板是进行非等比例大小缩放过的）</span><br><span class="line">find_aniso_shape_model(Image : : ModelID, AngleStart, AngleExtent, ScaleRMin, ScaleRMax, ScaleCMin, ScaleCMax, MinScore, NumMatches, MaxOverlap, SubPixel, NumLevels, Greediness : Row, Column, Angle, ScaleR, ScaleC, Score)</span><br><span class="line"></span><br><span class="line">----------------------将形状模板的轮廓进行仿射变换最佳匹配的位置------------；</span><br><span class="line">vector_angle_to_rigid (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, RowRef, ColumnRef, <span class="number">0</span>, HomMat2D)</span><br><span class="line">affine_trans_contour_xld (Model, ModelTrans, HomMat2D)</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Metric (input_control)  <span class="built_in">string</span> → (<span class="built_in">string</span>)</span><br><span class="line">Match metric.</span><br><span class="line">Default <span class="keyword">value</span>: <span class="string">&#x27;use_polarity&#x27;</span></span><br><span class="line">List of values: <span class="string">&#x27;ignore_color_polarity&#x27;</span>, <span class="string">&#x27;ignore_global_polarity&#x27;</span>, <span class="string">&#x27;ignore_local_polarity&#x27;</span>, <span class="string">&#x27;use_polarity&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;ignore_color_polarity&#x27;</span>（忽略颜色极性）：在这种模式下，匹配过程中将忽略图像中物体的颜色信息，仅考虑物体的形状信息。这意味着无论物体是亮色还是暗色，都将被视为相同的形状进行匹配。这种模式适用于只关注物体的形状特征，而对颜色不敏感的应用场景。</span><br><span class="line"><span class="string">&#x27;ignore_global_polarity&#x27;</span>（忽略全局极性）：在这种模式下，匹配过程中将忽略图像中物体的全局极性信息，只考虑局部极性和形状信息。全局极性指的是整个物体区域的亮度变化趋势，而局部极性指的是物体局部区域的亮度变化趋势。通过忽略全局极性，匹配算法将主要关注物体的局部形状信息，而不受整体亮度变化的影响。这种模式适用于物体具有局部形状特征并且整体亮度可能变化较大的情况。</span><br><span class="line"><span class="string">&#x27;ignore_local_polarity&#x27;</span>（忽略局部极性）：在这种模式下，匹配过程中将忽略物体的局部极性信息，只考虑全局极性和形状信息。与上述模式相反，它将主要关注物体的全局形状信息，而不受局部亮度变化的影响。这种模式适用于物体的整体形状特征对匹配更重要，而局部亮度变化对匹配结果影响较小的情况。</span><br><span class="line"><span class="string">&#x27;use_polarity&#x27;</span>（使用极性信息和形状信息进行匹配，默认选项）：这是默认的匹配度量标准选项。在这种模式下，匹配过程中同时考虑物体的极性信息（包括全局和局部极性）和形状信息。极性信息指的是物体区域的亮度变化趋势，包括明暗变化、边缘方向等。这种模式综合考虑了颜色、亮度和形状等多个特征，适用于大多数情况下的模板匹配任务。</span><br></pre></td></tr></table></figure><h3 id="⑤Matching助手工具"><a href="#⑤Matching助手工具" class="headerlink" title="⑤Matching助手工具"></a>⑤Matching助手工具</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709150024054.png" alt="image-20240709150024054"></p><h2 id="25、图像金字塔"><a href="#25、图像金字塔" class="headerlink" title="25、图像金字塔"></a>25、图像金字塔</h2><p>低分辨率关注的是基础纹理（大纹理)</p><p>高分辨率下关注的是更精细的纹理</p><p><strong>根据金字塔层数和对比度检查要生成的模板是否合适</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*读取图像的新算子</span><br><span class="line">open_framegrabber (&#x27;File&#x27;, 1, 1, 0, 0, 0, 0, &#x27;default&#x27;, -1, &#x27;default&#x27;, -1, &#x27;default&#x27;, &#x27;rings/rings.seq&#x27;, &#x27;default&#x27;, -1, 1, FGHandle)</span><br><span class="line"></span><br><span class="line">*创建基于金字塔层数的模型表示</span><br><span class="line">inspect_shape_model</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240709155253690.png" alt="image-20240709155253690"></p><h2 id="26、相机标定（Camera-Calibration–标定，校准）"><a href="#26、相机标定（Camera-Calibration–标定，校准）" class="headerlink" title="26、相机标定（Camera Calibration–标定，校准）"></a>26、相机标定（Camera Calibration–标定，校准）</h2><h3 id="①标定的概念"><a href="#①标定的概念" class="headerlink" title="①标定的概念"></a>①标定的概念</h3><p>标定的主要目标是获得相机的内部参数和外部参数，以便将图像像素坐标转换为真实世界中的物理坐标。</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240710111159354.png" alt="image-20240710111159354"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240710113557854.png" alt="image-20240710113557854"></p><h3 id="②标定的流程"><a href="#②标定的流程" class="headerlink" title="②标定的流程"></a>②标定的流程</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240710121942179.png" alt="image-20240710121942179"></p><h2 id="27、-双目立体视觉—-模拟人的双眼"><a href="#27、-双目立体视觉—-模拟人的双眼" class="headerlink" title="27、 双目立体视觉—-模拟人的双眼"></a>27、 双目立体视觉—-模拟人的双眼</h2><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240710131313225.png" alt="image-20240710131313225"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240710134134709.png" alt="image-20240710134134709"></p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240710141037584.png" alt="image-20240710141037584"></p><h3 id="例程"><a href="#例程" class="headerlink" title="例程"></a>例程</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240710141104040.png" alt="image-20240710141104040"></p><h2 id="28、OCR识别"><a href="#28、OCR识别" class="headerlink" title="28、OCR识别"></a>28、OCR识别</h2><p><strong>注意Halcon自带的字体默认字体是黑色背景是亮色</strong></p><h3 id="①常用的将断开字符连接上的方法"><a href="#①常用的将断开字符连接上的方法" class="headerlink" title="①常用的将断开字符连接上的方法"></a>①常用的将断开字符连接上的方法</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* 膨胀</span><br><span class="line">dilation_circle (Region, RegionDilation, <span class="number">3.5</span>)</span><br><span class="line">* 连接（打散成单个区域）</span><br><span class="line">connection (RegionDilation, ConnectedRegions)</span><br><span class="line">* 求交集（将字母i和j断开的区域连接上）</span><br><span class="line">intersection (ConnectedRegions, Region, RegionIntersection)</span><br></pre></td></tr></table></figure><h3 id="②ocr的识别流程"><a href="#②ocr的识别流程" class="headerlink" title="②ocr的识别流程"></a>②ocr的识别流程</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">*创建并且存储训练集</span><br><span class="line">write_ocr_trainf (Characters, Image, Classes, TrainFile)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*创建 OCR 分类器</span><br><span class="line">------从训练文件中读取类别名称</span><br><span class="line">read_ocr_trainf_names (TrainFile, CharacterNames, CharacterCount)</span><br><span class="line">------创建 MLP OCR 分类器</span><br><span class="line">create_ocr_class_mlp (<span class="number">8</span>, <span class="number">10</span>, <span class="string">&#x27;constant&#x27;</span>, <span class="string">&#x27;default&#x27;</span>, CharacterNames, <span class="number">20</span>, <span class="string">&#x27;canonical_variates&#x27;</span>, <span class="number">26</span>, <span class="number">42</span>, OCRHandle)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*使用训练文件进行训练分类器</span><br><span class="line">trainf_ocr_class_mlp (OCRHandle, TrainFile, <span class="number">100</span>, <span class="number">0.01</span>, <span class="number">0.01</span>, Error, ErrorLog)</span><br><span class="line">*从文件中直接读取一个分类器</span><br><span class="line">read_ocr_class_mlp (FontName, OCRHandle)</span><br><span class="line"></span><br><span class="line">*单个匹配或者多个匹配</span><br><span class="line">do_ocr_single_class_mlp(Character, Image : : OCRHandle, Num : Class, Confidence)</span><br><span class="line">do_ocr_multi_class_mlp(Character, Image : : OCRHandle : Class, Confidence)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="③对于弯曲的字符可以进行极坐标旋转"><a href="#③对于弯曲的字符可以进行极坐标旋转" class="headerlink" title="③对于弯曲的字符可以进行极坐标旋转"></a>③对于弯曲的字符可以进行极坐标旋转</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">polar_trans_image_ext (Image, ImagePolar, Row, Column, <span class="number">0</span>, rad(<span class="number">360</span>), Radius - <span class="number">30</span>, Radius - <span class="number">5</span>, WidthP, HeightP, <span class="string">&#x27;bilinear&#x27;</span>)</span><br><span class="line"></span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, WidthP, HeightP, <span class="string">&#x27;black&#x27;</span>, WindowHandle2)</span><br><span class="line"></span><br><span class="line">rotate_image (ImagePolar, ImageRotate, <span class="number">180</span>, <span class="string">&#x27;constant&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="④OCR识别字符的流程"><a href="#④OCR识别字符的流程" class="headerlink" title="④OCR识别字符的流程"></a>④OCR识别字符的流程</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240713161411369.png" alt="image-20240713161411369"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">read_image (Image11, <span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/Halcon视频教程 第2套初级班+强化班/初级班视频/实战图片/字符.bmp&#x27;</span>)</span><br><span class="line">dev_close_window ()</span><br><span class="line">get_image_size (Image11, Width, Height)</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, Width/<span class="number">4</span>, Height/<span class="number">4</span>, <span class="string">&#x27;black&#x27;</span>, WindowID)</span><br><span class="line">set_display_font (WindowID, <span class="number">40</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*图片翻转为正向</span><br><span class="line">mirror_image (Image11, ImageMirror, <span class="string">&#x27;row&#x27;</span>)</span><br><span class="line">mirror_image (ImageMirror, ImageMirror1, <span class="string">&#x27;column&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*选择感兴趣的区域</span><br><span class="line">scale_image (ImageMirror1, ImageScaled, <span class="number">3.98438</span>, <span class="number">-749</span>)</span><br><span class="line">threshold (ImageScaled, Regions, <span class="number">0</span>, <span class="number">52</span>)</span><br><span class="line">connection (Regions, ConnectedRegions)</span><br><span class="line">select_shape (ConnectedRegions, SelectedRegions, [<span class="string">&#x27;area&#x27;</span>,<span class="string">&#x27;rectangularity&#x27;</span>], <span class="string">&#x27;and&#x27;</span>, [<span class="number">111408</span>,<span class="number">0.61765</span>], [<span class="number">5e+006</span>,<span class="number">1</span>])</span><br><span class="line">reduce_domain (ImageMirror1, SelectedRegions, ImageReduced)</span><br><span class="line"></span><br><span class="line">*选择需要识别的内容（<span class="number">26</span>）</span><br><span class="line">threshold (ImageReduced, Regions1, <span class="number">0</span>, <span class="number">144</span>)</span><br><span class="line">connection (Regions1, ConnectedRegions1)</span><br><span class="line">select_shape (ConnectedRegions1, SelectedRegions1, [<span class="string">&#x27;area&#x27;</span>,<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;rectangularity&#x27;</span>], <span class="string">&#x27;and&#x27;</span>, [<span class="number">0</span>,<span class="number">54.23</span>,<span class="number">0</span>], [<span class="number">9647.27</span>,<span class="number">204.14</span>,<span class="number">0.8545</span>])</span><br><span class="line">union1 (SelectedRegions1, RegionUnion)</span><br><span class="line"></span><br><span class="line">*将断开区域进行连接</span><br><span class="line">gen_rectangle2 (Rectangle, <span class="number">16</span>, <span class="number">16</span>, rad(<span class="number">45</span>), <span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line">closing (RegionUnion, Rectangle, RegionClosing)</span><br><span class="line">*注意要将连通好的单个区域 与 二值化后的区域 进行交集运算</span><br><span class="line">connection (RegionClosing, ConnectedRegions2)</span><br><span class="line">intersection (ConnectedRegions2, Regions1, RegionIntersection)</span><br><span class="line"></span><br><span class="line">read_ocr_class_mlp (<span class="string">&#x27;Industrial_0-9A-Z_NoRej.omc&#x27;</span>, OCRHandle)</span><br><span class="line">do_ocr_multi_class_mlp (RegionIntersection, ImageReduced, OCRHandle, Class, Confidence)</span><br><span class="line"></span><br><span class="line">smallest_rectangle1 (RegionIntersection, Row11, Column1, Row2, Column21)</span><br><span class="line">count_obj (RegionIntersection, NumberFinal)</span><br><span class="line">dev_display (ImageMirror1)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span> to NumberFinal <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">    disp_message (WindowID, Class[i - <span class="number">1</span>], <span class="string">&#x27;image&#x27;</span>,Row2[i - <span class="number">1</span>], Column1[i - <span class="number">1</span>], <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">endfor</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="⑤OCR识别环形字体"><a href="#⑤OCR识别环形字体" class="headerlink" title="⑤OCR识别环形字体"></a>⑤OCR识别环形字体</h3><p><strong>区别点主要在于将圆形区域进行极坐标转换（拉直操作）</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240713165746300.png" alt="image-20240713165746300"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">*读取图像</span><br><span class="line">read_image (Image,<span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/Halcon视频教程 第2套初级班+强化班/初级班视频/实战图片/1.1.bmp&#x27;</span>)</span><br><span class="line">dev_close_window ()</span><br><span class="line">dev_open_window (<span class="number">0</span>,<span class="number">0</span>,<span class="number">480</span>,<span class="number">480</span>,<span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line">dev_display (Image)</span><br><span class="line">rgb1_to_gray (Image, GrayImage)</span><br><span class="line"></span><br><span class="line">*提取外圆的半径</span><br><span class="line">threshold (GrayImage, Regions, <span class="number">4</span>, <span class="number">103</span>)</span><br><span class="line">*得到外圆的圆心和半径</span><br><span class="line">smallest_circle (Regions, Row, Column, OuterRadius)</span><br><span class="line"></span><br><span class="line">*得到整个外圆</span><br><span class="line">shape_trans (Regions, outcircle, <span class="string">&#x27;outer_circle&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*求外环的补集 也就是得到内圆</span><br><span class="line">complement (Regions, RegionComplement)</span><br><span class="line">connection (RegionComplement, InnerCircle)</span><br><span class="line">select_shape (InnerCircle, SelectedRegions, [<span class="string">&#x27;area&#x27;</span>,<span class="string">&#x27;circularity&#x27;</span>], <span class="string">&#x27;and&#x27;</span>, [<span class="number">200</span>,<span class="number">0.8422</span>], [<span class="number">2.29055e+006</span>,<span class="number">1</span>])</span><br><span class="line">*得到内圆的圆心和半径</span><br><span class="line">smallest_circle (SelectedRegions, InnerRow, InnerColumn, InnerRadius)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*极坐标转换</span><br><span class="line">*输入的参数 </span><br><span class="line">* Image---输入原图片  PolarTransImage--得到的转换后的图</span><br><span class="line">* Row, Column圆心的坐标</span><br><span class="line">* rad(<span class="number">360</span>), <span class="number">0</span> 这个表示需要处理哪些角度的 （这个就代表<span class="number">360</span>度均处理）</span><br><span class="line">* OuterRadius - <span class="number">100</span> 这个表示字体的顶部到圆心的距离</span><br><span class="line">* InnerRadius + <span class="number">40</span> 这个表示字体的底部到圆心的距离</span><br><span class="line">* <span class="number">1440</span>代表极坐标的宽度</span><br><span class="line">* <span class="number">100</span>代表待识别字体的高度</span><br><span class="line">polar_trans_image_ext (Image, PolarTransImage, Row, Column, rad(<span class="number">360</span>), <span class="number">0</span>, OuterRadius - <span class="number">100</span>, InnerRadius + <span class="number">40</span>, <span class="number">1440</span>, <span class="number">100</span>, <span class="string">&#x27;bilinear&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*接下来就和之前一样 对字体进行处理</span><br><span class="line">*颜色翻转</span><br><span class="line">invert_image (PolarTransImage, ImageInvert)</span><br><span class="line">*对比度改变</span><br><span class="line">scale_image (ImageInvert, ImageScaled1, <span class="number">6.71053</span>, <span class="number">-1429</span>)</span><br><span class="line">*字符分割</span><br><span class="line">binary_threshold (ImageScaled1, Region2, <span class="string">&#x27;max_separability&#x27;</span>, <span class="string">&#x27;light&#x27;</span>, UsedThreshold2)</span><br><span class="line">connection (Region2, ConnectedRegions3)</span><br><span class="line">select_shape (ConnectedRegions3, SelectedRegions1, <span class="string">&#x27;area&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="number">64.69</span>, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">*对字符进行膨胀处理 然后connection连通后求交集</span><br><span class="line">dilation_rectangle1 (SelectedRegions1, RegionDilation, <span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">union1 (RegionDilation, RegionUnion)</span><br><span class="line">connection (RegionUnion, ConnectedRegions2)</span><br><span class="line">dev_clear_window ()</span><br><span class="line">dev_display (ConnectedRegions2)</span><br><span class="line">intersection (ConnectedRegions2, Region2, RegionIntersection)</span><br><span class="line">sort_region (RegionIntersection, SortedRegions1, <span class="string">&#x27;character&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;column&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*识别</span><br><span class="line">read_ocr_class_mlp (<span class="string">&#x27;C:/Program Files/MVTec/HALCON-12.0/ocr/Industrial_0-9A-Z_NoRej.omc&#x27;</span>, OCRHandle)</span><br><span class="line">do_ocr_multi_class_mlp (SortedRegions1, PolarTransImage, OCRHandle, Class, Confidence)</span><br><span class="line"></span><br><span class="line">*显示</span><br><span class="line">count_obj (SortedRegions1, Number)</span><br><span class="line">area_center (SortedRegions1, Area, Row2, Column2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> Index := <span class="number">1</span> to Number <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">    disp_message (WindowHandle, Class[Index<span class="number">-1</span>], <span class="string">&#x27;PolarTransImage&#x27;</span>, <span class="number">40</span>, Column2[Index<span class="number">-1</span>]<span class="number">-20</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">endfor</span><br></pre></td></tr></table></figure><h2 id="29、测量和拟合"><a href="#29、测量和拟合" class="headerlink" title="29、测量和拟合"></a>29、测量和拟合</h2><h3 id="①测量矩形边缘宽度的过程"><a href="#①测量矩形边缘宽度的过程" class="headerlink" title="①测量矩形边缘宽度的过程"></a>①测量矩形边缘宽度的过程</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">*形成测量矩形</span><br><span class="line">gen_rectangle2 (Rectangle1, Row + Rect1Row, Column + Rect1Col, RectPhi, RectLength1, RectLength2)</span><br><span class="line">gen_measure_rectangle2( : : Row, Column, Phi, Length1, Length2, Width, Height, Interpolation : MeasureHandle)</span><br><span class="line"></span><br><span class="line">*进行边缘对测量</span><br><span class="line">*sigma代表平滑参数</span><br><span class="line">*Threshold 边缘幅度  Transition 边缘方向</span><br><span class="line">*IntraDistance 两个边缘之间的距离</span><br><span class="line">*InterDistance 相邻边缘对之间的距离</span><br><span class="line">measure_pairs(Image : : MeasureHandle, Sigma, Threshold, Transition, Select : RowEdgeFirst, ColumnEdgeFirst, AmplitudeFirst, RowEdgeSecond, ColumnEdgeSecond, AmplitudeSecond, IntraDistance, InterDistance)</span><br><span class="line">    </span><br><span class="line">*释放测量矩形</span><br><span class="line">close_measure(MeasureHandle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*以单个边缘的形式进行测量 而不是边缘对 </span><br><span class="line">measure_pos(Image : : MeasureHandle, Sigma, Threshold, Transition, Select : RowEdge, ColumnEdge, Amplitude, Distance)</span><br></pre></td></tr></table></figure><p>例程：<code>fuse.hdev</code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">* fuse.hdev: measuring the width of a fuse wire</span><br><span class="line">* </span><br><span class="line">dev_update_window (<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">dev_close_window ()</span><br><span class="line">* ****</span><br><span class="line">* step: acquire image</span><br><span class="line">* ****</span><br><span class="line">read_image (Fuse, <span class="string">&#x27;fuse&#x27;</span>)</span><br><span class="line">get_image_size (Fuse, Width, Height)</span><br><span class="line">dev_open_window_fit_image (Fuse, <span class="number">0</span>, <span class="number">0</span>, Width, Height, WindowID)</span><br><span class="line">set_display_font (WindowID, <span class="number">12</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">dev_set_draw (<span class="string">&#x27;margin&#x27;</span>)</span><br><span class="line">dev_set_line_width (<span class="number">3</span>)</span><br><span class="line">dev_display (Fuse)</span><br><span class="line">set_display_font (WindowID, <span class="number">12</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">disp_continue_message (WindowID, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">stop ()</span><br><span class="line">* ****</span><br><span class="line">* step: create measure <span class="built_in">object</span></span><br><span class="line">* ****</span><br><span class="line">* -&gt; specify ROI</span><br><span class="line">Row := <span class="number">297</span></span><br><span class="line">Column := <span class="number">545</span></span><br><span class="line">Length1 := <span class="number">80</span></span><br><span class="line">Length2 := <span class="number">10</span></span><br><span class="line">Angle := rad(<span class="number">90</span>)</span><br><span class="line">gen_rectangle2 (ROI, Row, Column, Angle, Length1, Length2)</span><br><span class="line">* -&gt; <span class="function">create measure <span class="built_in">object</span></span></span><br><span class="line"><span class="function"><span class="title">gen_measure_rectangle2</span> (<span class="params">Row, Column, Angle, Length1, Length2, Width, Height, <span class="string">&#x27;bilinear&#x27;</span>, MeasureHandle</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">ROI</span>)</span></span><br><span class="line"><span class="function"><span class="title">disp_continue_message</span> (<span class="params">WindowID, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">stop</span> ()</span></span><br><span class="line"><span class="function">* ****</span></span><br><span class="line"><span class="function">* step: measure</span></span><br><span class="line"><span class="function">* ****</span></span><br><span class="line"><span class="function"><span class="title">measure_pairs</span> (<span class="params">Fuse, MeasureHandle, <span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;negative&#x27;</span>, <span class="string">&#x27;all&#x27;</span>, RowEdgeFirst, ColumnEdgeFirst, AmplitudeFirst, RowEdgeSecond, ColumnEdgeSecond, AmplitudeSecond, IntraDistance, InterDistance</span>)</span></span><br><span class="line"><span class="function"><span class="title">disp_continue_message</span> (<span class="params">WindowID, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">stop</span> ()</span></span><br><span class="line"><span class="function">* ****</span></span><br><span class="line"><span class="function">* step: visualize results</span></span><br><span class="line"><span class="function">* ****</span></span><br><span class="line"><span class="function"><span class="keyword">for</span> i :</span>= <span class="number">0</span> to |RowEdgeFirst| - <span class="number">1</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">    gen_contour_polygon_xld (EdgeFirst, [-sin(Angle + rad(<span class="number">90</span>)) * Length2 + RowEdgeFirst[i],-sin(Angle - rad(<span class="number">90</span>)) * Length2 + RowEdgeFirst[i]], [cos(Angle + rad(<span class="number">90</span>)) * Length2 + ColumnEdgeFirst[i],cos(Angle - rad(<span class="number">90</span>)) * Length2 + ColumnEdgeFirst[i]])</span><br><span class="line">    gen_contour_polygon_xld (EdgeSecond, [-sin(Angle + rad(<span class="number">90</span>)) * Length2 + RowEdgeSecond[i],-sin(Angle - rad(<span class="number">90</span>)) * Length2 + RowEdgeSecond[i]], [cos(Angle + rad(<span class="number">90</span>)) * Length2 + ColumnEdgeSecond[i],cos(Angle - rad(<span class="number">90</span>)) * Length2 + ColumnEdgeSecond[i]])</span><br><span class="line">    dev_set_color (<span class="string">&#x27;cyan&#x27;</span>)</span><br><span class="line">    dev_display (EdgeFirst)</span><br><span class="line">    dev_set_color (<span class="string">&#x27;magenta&#x27;</span>)</span><br><span class="line">    dev_display (EdgeSecond)</span><br><span class="line">    dev_set_color (<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">        set_tposition (WindowID, RowEdgeFirst[i] + <span class="number">5</span>, ColumnEdgeFirst[i] + <span class="number">20</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        set_tposition (WindowID, RowEdgeFirst[i] - <span class="number">40</span>, ColumnEdgeFirst[i] + <span class="number">20</span>)</span><br><span class="line">    <span class="function">endif</span></span><br><span class="line"><span class="function">    <span class="title">write_string</span> (<span class="params">WindowID, <span class="string">&#x27;width: &#x27;</span> + IntraDistance[i] + <span class="string">&#x27; pix&#x27;</span></span>)</span></span><br><span class="line"><span class="function">endfor</span></span><br><span class="line"><span class="function"><span class="title">disp_continue_message</span> (<span class="params">WindowID, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">stop</span> ()</span></span><br><span class="line"><span class="function">* ****</span></span><br><span class="line"><span class="function">* step: destroy measure <span class="built_in">object</span></span></span><br><span class="line"><span class="function">* ****</span></span><br><span class="line"><span class="function"><span class="title">close_measure</span> (<span class="params">MeasureHandle</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_update_window</span> (<span class="params"><span class="string">&#x27;on&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_clear_window</span> ()</span></span><br></pre></td></tr></table></figure><h3 id="②measure助手"><a href="#②measure助手" class="headerlink" title="②measure助手"></a>②measure助手</h3><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240714110713319.png" alt="image-20240714110713319"><h3 id="③定位测量的思路（先做模板匹配定位-然后-再进行测量）"><a href="#③定位测量的思路（先做模板匹配定位-然后-再进行测量）" class="headerlink" title="③定位测量的思路（先做模板匹配定位 然后 再进行测量）"></a>③定位测量的思路（先做模板匹配定位 然后 再进行测量）</h3><p>例程：<code>pm_measure_board.hdev</code></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240714115307174.png" alt="image-20240714115307174"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">dev_update_pc (<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">dev_update_window (<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">dev_update_var (<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">open_framegrabber (<span class="string">&#x27;File&#x27;</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;default&#x27;</span>, <span class="number">-1</span>, <span class="string">&#x27;default&#x27;</span>, <span class="number">-1</span>, <span class="string">&#x27;default&#x27;</span>, <span class="string">&#x27;board/board.seq&#x27;</span>, <span class="string">&#x27;default&#x27;</span>, <span class="number">-1</span>, <span class="number">1</span>, FGHandle)</span><br><span class="line">grab_image (Image, FGHandle)</span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line">dev_close_window ()</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line">dev_open_window (Height + <span class="number">70</span>, <span class="number">0</span>, Width, <span class="number">120</span>, <span class="string">&#x27;black&#x27;</span>, WindowHandleText)</span><br><span class="line">dev_set_window (WindowHandle)</span><br><span class="line">set_display_font (WindowHandle, <span class="number">16</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">set_display_font (WindowHandleText, <span class="number">16</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">dev_display (Image)</span><br><span class="line">Row1 := <span class="number">188</span></span><br><span class="line">Column1 := <span class="number">182</span></span><br><span class="line">Row2 := <span class="number">298</span></span><br><span class="line">Column2 := <span class="number">412</span></span><br><span class="line">gen_rectangle1 (Rectangle, Row1, Column1, Row2, Column2)</span><br><span class="line">area_center (Rectangle, Area, Row, Column)</span><br><span class="line">Rect1Row := <span class="number">-102</span></span><br><span class="line">Rect1Col := <span class="number">5</span></span><br><span class="line">Rect2Row := <span class="number">107</span></span><br><span class="line">Rect2Col := <span class="number">5</span></span><br><span class="line">RectPhi := <span class="number">0</span></span><br><span class="line">RectLength1 := <span class="number">170</span></span><br><span class="line">RectLength2 := <span class="number">5</span></span><br><span class="line">gen_rectangle2 (Rectangle1, Row + Rect1Row, Column + Rect1Col, RectPhi, RectLength1, RectLength2)</span><br><span class="line">gen_rectangle2 (Rectangle2, Row + Rect2Row, Column + Rect2Col, RectPhi, RectLength1, RectLength2)</span><br><span class="line">reduce_domain (Image, Rectangle, ImageReduced)</span><br><span class="line">create_shape_model (ImageReduced, <span class="number">4</span>, <span class="number">0</span>, rad(<span class="number">360</span>), rad(<span class="number">1</span>), <span class="string">&#x27;none&#x27;</span>, <span class="string">&#x27;use_polarity&#x27;</span>, <span class="number">30</span>, <span class="number">10</span>, ModelID)</span><br><span class="line">get_shape_model_contours (ShapeModel, ModelID, <span class="number">1</span>)</span><br><span class="line">hom_mat2d_identity (HomMat2DIdentity)</span><br><span class="line">hom_mat2d_translate (HomMat2DIdentity, Row, Column, HomMat2DTranslate)</span><br><span class="line">affine_trans_contour_xld (ShapeModel, ShapeModelTrans, HomMat2DTranslate)</span><br><span class="line">dev_display (Image)</span><br><span class="line">dev_set_color (<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">dev_display (ShapeModelTrans)</span><br><span class="line">dev_set_color (<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">dev_set_draw (<span class="string">&#x27;margin&#x27;</span>)</span><br><span class="line">dev_set_line_width (<span class="number">3</span>)</span><br><span class="line">dev_display (Rectangle1)</span><br><span class="line">dev_display (Rectangle2)</span><br><span class="line">dev_set_draw (<span class="string">&#x27;fill&#x27;</span>)</span><br><span class="line">dev_set_line_width (<span class="number">1</span>)</span><br><span class="line">dev_set_color (<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">disp_message (WindowHandle, [<span class="string">&#x27;Press left button to start&#x27;</span>,<span class="string">&#x27;and stop the demo&#x27;</span>], <span class="string">&#x27;image&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">get_mbutton (WindowHandle, Row3, Column3, Button1)</span><br><span class="line">wait_seconds (<span class="number">0.5</span>)</span><br><span class="line">Button := <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (Button != <span class="number">1</span>)</span><br><span class="line">    dev_set_window (WindowHandle)</span><br><span class="line">    dev_set_part (<span class="number">0</span>, <span class="number">0</span>, Height - <span class="number">1</span>, Width - <span class="number">1</span>)</span><br><span class="line">    grab_image (ImageCheck, FGHandle)</span><br><span class="line">    dev_display (ImageCheck)</span><br><span class="line">    count_seconds (S1)</span><br><span class="line">    find_shape_model (ImageCheck, ModelID, <span class="number">0</span>, rad(<span class="number">360</span>), <span class="number">0.7</span>, <span class="number">1</span>, <span class="number">0.5</span>, <span class="string">&#x27;least_squares&#x27;</span>, <span class="number">4</span>, <span class="number">0.7</span>, RowCheck, ColumnCheck, AngleCheck, Score)</span><br><span class="line">    count_seconds (S2)</span><br><span class="line">    dev_display (ImageCheck)</span><br><span class="line">    <span class="keyword">if</span> (|Score| &gt; <span class="number">0</span>)</span><br><span class="line">        dev_set_color (<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">        hom_mat2d_identity (HomMat2DIdentity)</span><br><span class="line">        hom_mat2d_translate (HomMat2DIdentity, RowCheck, ColumnCheck, HomMat2DTranslate)</span><br><span class="line">        hom_mat2d_rotate (HomMat2DTranslate, AngleCheck, RowCheck, ColumnCheck, HomMat2DRotate)</span><br><span class="line">        affine_trans_contour_xld (ShapeModel, ShapeModelTrans, HomMat2DRotate)</span><br><span class="line">        dev_display (ShapeModelTrans)</span><br><span class="line">        affine_trans_pixel (HomMat2DRotate, Rect1Row, Rect1Col, Rect1RowCheck, Rect1ColCheck)</span><br><span class="line">        affine_trans_pixel (HomMat2DRotate, Rect2Row, Rect2Col, Rect2RowCheck, Rect2ColCheck)</span><br><span class="line">        gen_rectangle2 (Rectangle1Check, Rect1RowCheck, Rect1ColCheck, AngleCheck, RectLength1, RectLength2)</span><br><span class="line">        gen_rectangle2 (Rectangle2Check, Rect2RowCheck, Rect2ColCheck, AngleCheck, RectLength1, RectLength2)</span><br><span class="line">        dev_set_color (<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">        dev_set_draw (<span class="string">&#x27;margin&#x27;</span>)</span><br><span class="line">        dev_set_line_width (<span class="number">3</span>)</span><br><span class="line">        dev_display (Rectangle1Check)</span><br><span class="line">        dev_display (Rectangle2Check)</span><br><span class="line">        dev_set_draw (<span class="string">&#x27;fill&#x27;</span>)</span><br><span class="line">        count_seconds (S3)</span><br><span class="line">        gen_measure_rectangle2 (Rect1RowCheck, Rect1ColCheck, AngleCheck, RectLength1, RectLength2, Width, Height, <span class="string">&#x27;bilinear&#x27;</span>, MeasureHandle1)</span><br><span class="line">        gen_measure_rectangle2 (Rect2RowCheck, Rect2ColCheck, AngleCheck, RectLength1, RectLength2, Width, Height, <span class="string">&#x27;bilinear&#x27;</span>, MeasureHandle2)</span><br><span class="line">        measure_pairs (ImageCheck, MeasureHandle1, <span class="number">2</span>, <span class="number">90</span>, <span class="string">&#x27;positive&#x27;</span>, <span class="string">&#x27;all&#x27;</span>, RowEdgeFirst1, ColumnEdgeFirst1, AmplitudeFirst1, RowEdgeSecond1, ColumnEdgeSecond1, AmplitudeSecond1, IntraDistance1, InterDistance1)</span><br><span class="line">        measure_pairs (ImageCheck, MeasureHandle2, <span class="number">2</span>, <span class="number">90</span>, <span class="string">&#x27;positive&#x27;</span>, <span class="string">&#x27;all&#x27;</span>, RowEdgeFirst2, ColumnEdgeFirst2, AmplitudeFirst2, RowEdgeSecond2, ColumnEdgeSecond2, AmplitudeSecond2, IntraDistance2, InterDistance2)</span><br><span class="line">        close_measure (MeasureHandle1)</span><br><span class="line">        close_measure (MeasureHandle2)</span><br><span class="line">        count_seconds (S4)</span><br><span class="line">        dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">        disp_line (WindowHandle, RowEdgeFirst1 - RectLength2 * cos(AngleCheck), ColumnEdgeFirst1 - RectLength2 * sin(AngleCheck), RowEdgeFirst1 + RectLength2 * cos(AngleCheck), ColumnEdgeFirst1 + RectLength2 * sin(AngleCheck))</span><br><span class="line">        disp_line (WindowHandle, RowEdgeSecond1 - RectLength2 * cos(AngleCheck), ColumnEdgeSecond1 - RectLength2 * sin(AngleCheck), RowEdgeSecond1 + RectLength2 * cos(AngleCheck), ColumnEdgeSecond1 + RectLength2 * sin(AngleCheck))</span><br><span class="line">        disp_line (WindowHandle, RowEdgeFirst2 - RectLength2 * cos(AngleCheck), ColumnEdgeFirst2 - RectLength2 * sin(AngleCheck), RowEdgeFirst2 + RectLength2 * cos(AngleCheck), ColumnEdgeFirst2 + RectLength2 * sin(AngleCheck))</span><br><span class="line">        disp_line (WindowHandle, RowEdgeSecond2 - RectLength2 * cos(AngleCheck), ColumnEdgeSecond2 - RectLength2 * sin(AngleCheck), RowEdgeSecond2 + RectLength2 * cos(AngleCheck), ColumnEdgeSecond2 + RectLength2 * sin(AngleCheck))</span><br><span class="line">        dev_set_line_width (<span class="number">1</span>)</span><br><span class="line">        NumLeads := |IntraDistance1| + |IntraDistance2|</span><br><span class="line">        MinDistance := min([InterDistance1,InterDistance2])</span><br><span class="line">        dev_set_window (WindowHandleText)</span><br><span class="line">        dev_set_part (<span class="number">0</span>, <span class="number">0</span>, <span class="number">119</span>, Width - <span class="number">1</span>)</span><br><span class="line">        dev_clear_window ()</span><br><span class="line">        disp_message (WindowHandleText, <span class="string">&#x27;Matching: Time: &#x27;</span> + ((S2 - S1) * <span class="number">1000</span>)$<span class="string">&#x27;5.2f&#x27;</span> + <span class="string">&#x27;ms , Score: &#x27;</span> + Score$<span class="string">&#x27;7.5f&#x27;</span>, <span class="string">&#x27;image&#x27;</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">        disp_message (WindowHandleText, <span class="string">&#x27;Measure:  Time: &#x27;</span> + ((S4 - S3) * <span class="number">1000</span>)$<span class="string">&#x27;5.2f&#x27;</span> + <span class="string">&#x27; ms, Num. leads: &#x27;</span> + NumLeads$<span class="string">&#x27;2d&#x27;</span>, <span class="string">&#x27;image&#x27;</span>, <span class="number">50</span>, <span class="number">20</span>, <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">        disp_message (WindowHandleText, <span class="string">&#x27;          Min. lead dist: &#x27;</span> + MinDistance$<span class="string">&#x27;6.3f&#x27;</span>, <span class="string">&#x27;image&#x27;</span>, <span class="number">80</span>, <span class="number">20</span>, <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">    <span class="function">endif</span></span><br><span class="line"><span class="function">    <span class="title">dev_error_var</span> (<span class="params">Error, <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_set_check</span> (<span class="params"><span class="string">&#x27;~give_error&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">get_mposition</span> (<span class="params">WindowHandle, R, C, Button</span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_error_var</span> (<span class="params">Error, <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_set_check</span> (<span class="params"><span class="string">&#x27;give_error&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> (<span class="params">Error != H_MSG_TRUE</span>)</span></span><br><span class="line"><span class="function">        Button :</span>= <span class="number">0</span></span><br><span class="line">    <span class="function">endif</span></span><br><span class="line"><span class="function">endwhile</span></span><br><span class="line"><span class="function"><span class="title">dev_set_window</span> (<span class="params">WindowHandleText</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_close_window</span> ()</span></span><br><span class="line"><span class="function"><span class="title">clear_shape_model</span> (<span class="params">ModelID</span>)</span></span><br><span class="line"><span class="function"><span class="title">close_framegrabber</span> (<span class="params">FGHandle</span>)</span></span><br></pre></td></tr></table></figure><h3 id="④测量弧形边缘宽度的过程"><a href="#④测量弧形边缘宽度的过程" class="headerlink" title="④测量弧形边缘宽度的过程"></a>④测量弧形边缘宽度的过程</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240714122503803.png" alt="image-20240714122503803"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*形成测量弧形</span><br><span class="line">disp_arc (WindowHandle, Row, Column, AngleExtent, RowPoint, ColPoint)</span><br><span class="line">gen_measure_arc( : : CenterRow, CenterCol, Radius, AngleStart, AngleExtent, AnnulusRadius, Width, Height, Interpolation : MeasureHandle)</span><br><span class="line"></span><br><span class="line">*进行边缘测量</span><br><span class="line">measure_pos(Image : : MeasureHandle, Sigma, Threshold, Transition, Select : RowEdge, ColumnEdge, Amplitude, Distance)</span><br><span class="line">    </span><br><span class="line">*释放测量弧形</span><br><span class="line">close_measure(MeasureHandle)</span><br></pre></td></tr></table></figure><p>例程：<code>measure_arc.hdev</code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">*  Example <span class="keyword">for</span> the application of the measure package</span><br><span class="line">* including a lot of visualization operators</span><br><span class="line">* </span><br><span class="line">read_image (Zeiss1, <span class="string">&#x27;zeiss1&#x27;</span>)</span><br><span class="line">get_image_size (Zeiss1, Width, Height)</span><br><span class="line">dev_close_window ()</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, Width / <span class="number">2</span>, Height / <span class="number">2</span>, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line">set_display_font (WindowHandle, <span class="number">14</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">dev_display (Zeiss1)</span><br><span class="line">disp_continue_message (WindowHandle, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">stop ()</span><br><span class="line">* draw_circle (WindowHandle, Row, Column, Radius)</span><br><span class="line">Row := <span class="number">275</span></span><br><span class="line">Column := <span class="number">335</span></span><br><span class="line">Radius := <span class="number">107</span></span><br><span class="line">AngleStart := -rad(<span class="number">55</span>)</span><br><span class="line">AngleExtent := rad(<span class="number">170</span>)</span><br><span class="line">dev_set_draw (<span class="string">&#x27;fill&#x27;</span>)</span><br><span class="line">dev_set_color (<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">dev_set_line_width (<span class="number">1</span>)</span><br><span class="line">get_points_ellipse (AngleStart + AngleExtent, Row, Column, <span class="number">0</span>, Radius, Radius, RowPoint, ColPoint)</span><br><span class="line">disp_arc (WindowHandle, Row, Column, AngleExtent, RowPoint, ColPoint)</span><br><span class="line">dev_set_line_width (<span class="number">3</span>)</span><br><span class="line">gen_measure_arc (Row, Column, Radius, AngleStart, AngleExtent, <span class="number">10</span>, Width, Height, <span class="string">&#x27;nearest_neighbor&#x27;</span>, MeasureHandle)</span><br><span class="line">disp_continue_message (WindowHandle, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">stop ()</span><br><span class="line">count_seconds (Seconds1)</span><br><span class="line">n := <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span> to n <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">    measure_pos (Zeiss1, MeasureHandle, <span class="number">1</span>, <span class="number">10</span>, <span class="string">&#x27;all&#x27;</span>, <span class="string">&#x27;all&#x27;</span>, RowEdge, ColumnEdge, Amplitude, Distance)</span><br><span class="line"><span class="function">endfor</span></span><br><span class="line"><span class="function"><span class="title">count_seconds</span> (<span class="params">Seconds2</span>)</span></span><br><span class="line"><span class="function">Time :</span>= (Seconds2 - Seconds1) / <span class="function">n</span></span><br><span class="line"><span class="function"><span class="title">disp_continue_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">* <span class="title">stop</span> ()</span></span><br><span class="line"><span class="function"><span class="title">distance_pp</span> (<span class="params">RowEdge[<span class="number">1</span>], ColumnEdge[<span class="number">1</span>], RowEdge[<span class="number">2</span>], ColumnEdge[<span class="number">2</span>], IntermedDist</span>)</span></span><br><span class="line"><span class="function">* <span class="title">dev_display</span> (<span class="params">Zeiss1</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_set_color</span> (<span class="params"><span class="string">&#x27;red&#x27;</span></span>)</span></span><br><span class="line"><span class="function">* <span class="title">disp_circle</span> (<span class="params">WindowHandle, RowEdge, ColumnEdge, RowEdge - RowEdge + <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">disp_line</span> (<span class="params">WindowHandle, RowEdge[<span class="number">1</span>], ColumnEdge[<span class="number">1</span>], RowEdge[<span class="number">2</span>], ColumnEdge[<span class="number">2</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_set_color</span> (<span class="params"><span class="string">&#x27;yellow&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">disp_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;Distance: &#x27;</span> + IntermedDist, <span class="string">&#x27;image&#x27;</span>, <span class="number">250</span>, <span class="number">80</span>, <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;false&#x27;</span></span>)</span></span><br><span class="line"><span class="function">* <span class="title">dump_window</span> (<span class="params">WindowHandle, <span class="string">&#x27;tiff_rgb&#x27;</span>, <span class="string">&#x27;C:\\Temp\\zeiss_result&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">close_measure</span> (<span class="params">MeasureHandle</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_set_line_width</span> (<span class="params"><span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">* <span class="title">disp_continue_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">stop</span> ()</span></span><br><span class="line"><span class="function"><span class="title">dev_clear_window</span> ()</span></span><br></pre></td></tr></table></figure><h3 id="⑤边缘轮廓拟合的方法"><a href="#⑤边缘轮廓拟合的方法" class="headerlink" title="⑤边缘轮廓拟合的方法"></a>⑤边缘轮廓拟合的方法</h3><p><strong>拟合就是为了得到各种想要的参数</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">*读入图像并且预处理</span><br><span class="line"></span><br><span class="line">*亚像素边缘提取</span><br><span class="line">edges_sub_pix(Image : Edges : Filter, Alpha, Low, High : )</span><br><span class="line">*从输入图像Image中以亚像素精度提取阈值为Threshold的水平交叉线</span><br><span class="line">*提取的水平交叉线以XLD轮廓的形式返回到Border中</span><br><span class="line">*threshold_sub_pix不返回区域</span><br><span class="line">*而是返回将灰度值低于Threshold的区域与灰度值高于Threshold的区域分隔开的线条。</span><br><span class="line">threshold_sub_pix(Image : Border : Threshold : )</span><br><span class="line"></span><br><span class="line">*根据具体需求对轮廓进行处理</span><br><span class="line">*例如：分割轮廓</span><br><span class="line">segment_contours_xld(Contours : ContoursSplit : Mode, SmoothCont, MaxLineDist1, MaxLineDist2 : )</span><br><span class="line">*例如：联合轮廓</span><br><span class="line">*联合共圆的轮廓</span><br><span class="line">union_cocircular_contours_xld(Contours : UnionContours : MaxArcAngleDiff, MaxArcOverlap, MaxTangentAngle, MaxDist, MaxRadiusDiff, MaxCenterDist, MergeSmallContours, Iterations : )</span><br><span class="line">*联合临近的轮廓</span><br><span class="line">union_adjacent_contours_xld(Contours : UnionContours : MaxDistAbs, MaxDistRel, Mode : )</span><br><span class="line">*联合直线的轮廓</span><br><span class="line">union_collinear_contours_xld(Contours : UnionContours : MaxDistAbs, MaxDistRel, MaxShift, MaxAngle, Mode : )</span><br><span class="line"></span><br><span class="line">*拟合轮廓（其实就是用一条边缘 拟合出最符合的形状）（校正形状）</span><br><span class="line">*圆形拟合</span><br><span class="line">fit_circle_contour_xld(Contours : : Algorithm, MaxNumPoints, MaxClosureDist, ClippingEndPoints, Iterations, ClippingFactor : Row, Column, Radius, StartPhi, EndPhi, PointOrder)</span><br><span class="line">*椭圆拟合</span><br><span class="line">fit_ellipse_contour_xld(Contours : : Algorithm, MaxNumPoints, MaxClosureDist, ClippingEndPoints, VossTabSize, Iterations, ClippingFactor : Row, Column, Phi, Radius1, Radius2, StartPhi, EndPhi, PointOrder)</span><br><span class="line">    </span><br><span class="line">*根据得到的参数画出图形</span><br><span class="line">gen_circle_contour_xld</span><br><span class="line">gen_ellipse_contour_xld</span><br><span class="line"></span><br><span class="line">*距离计算</span><br></pre></td></tr></table></figure><p>例程：<code>circles.hdev</code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">read_image (Image, <span class="string">&#x27;double_circle&#x27;</span>)</span><br><span class="line">* </span><br><span class="line">* <span class="function">Init window</span></span><br><span class="line"><span class="function"><span class="title">dev_close_window</span> ()</span></span><br><span class="line"><span class="function"><span class="title">get_image_size</span> (<span class="params">Image, Width, Height</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_open_window</span> (<span class="params"><span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle</span>)</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* Segment a region containing the edges</span></span><br><span class="line"><span class="function"><span class="title">fast_threshold</span> (<span class="params">Image, Region, <span class="number">0</span>, <span class="number">120</span>, <span class="number">7</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">boundary</span> (<span class="params">Region, RegionBorder, <span class="string">&#x27;inner&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">clip_region_rel</span> (<span class="params">RegionBorder, RegionClipped, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">dilation_circle</span> (<span class="params">RegionClipped, RegionDilation, <span class="number">2.5</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">reduce_domain</span> (<span class="params">Image, RegionDilation, ImageReduced</span>)</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* In the subdomain of the image containing the edges,</span></span><br><span class="line"><span class="function">* extract subpixel precise edges.</span></span><br><span class="line"><span class="function"><span class="title">edges_sub_pix</span> (<span class="params">ImageReduced, Edges, <span class="string">&#x27;canny&#x27;</span>, <span class="number">2</span>, <span class="number">20</span>, <span class="number">60</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">segment_contours_xld</span> (<span class="params">Edges, ContoursSplit, <span class="string">&#x27;lines_circles&#x27;</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">count_obj</span> (<span class="params">ContoursSplit, Number</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">Image</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_set_draw</span> (<span class="params"><span class="string">&#x27;margin&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_set_color</span> (<span class="params"><span class="string">&#x27;white&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_update_window</span> (<span class="params"><span class="string">&#x27;off&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">for</span> I :</span>= <span class="number">1</span> to Number <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">    select_obj (ContoursSplit, ObjectSelected, I)</span><br><span class="line">    get_contour_global_attrib_xld (ObjectSelected, <span class="string">&#x27;cont_approx&#x27;</span>, Attrib)</span><br><span class="line">    * <span class="function">Fit a circle to the line segment that are arcs of a circle</span></span><br><span class="line"><span class="function">    <span class="title">if</span> (<span class="params">Attrib &gt; <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">fit_circle_contour_xld</span> (<span class="params">ObjectSelected, <span class="string">&#x27;ahuber&#x27;</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>, Row, Column, Radius, StartPhi, EndPhi, PointOrder</span>)</span></span><br><span class="line"><span class="function">        <span class="title">gen_circle_contour_xld</span> (<span class="params">ContCircle, Row, Column, Radius, <span class="number">0</span>, rad(<span class="number">360</span></span>), &#x27;positive&#x27;, 1.0)</span></span><br><span class="line"><span class="function">        <span class="title">dev_display</span> (<span class="params">ContCircle</span>)</span></span><br><span class="line"><span class="function">    endif</span></span><br><span class="line"><span class="function">endfor</span></span><br><span class="line"><span class="function"><span class="title">dev_set_colored</span> (<span class="params"><span class="number">12</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_set_line_width</span> (<span class="params"><span class="number">3</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">ContoursSplit</span>)</span></span><br></pre></td></tr></table></figure><h3 id="⑥边缘联合"><a href="#⑥边缘联合" class="headerlink" title="⑥边缘联合"></a>⑥边缘联合</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*联合共圆的轮廓</span><br><span class="line">union_cocircular_contours_xld(Contours : UnionContours : MaxArcAngleDiff, MaxArcOverlap, MaxTangentAngle, MaxDist, MaxRadiusDiff, MaxCenterDist, MergeSmallContours, Iterations : )</span><br><span class="line">*联合临近的轮廓</span><br><span class="line">union_adjacent_contours_xld(Contours : UnionContours : MaxDistAbs, MaxDistRel, Mode : )</span><br><span class="line">*联合直线的轮廓</span><br><span class="line">union_collinear_contours_xld(Contours : UnionContours : MaxDistAbs, MaxDistRel, MaxShift, MaxAngle, Mode : )</span><br></pre></td></tr></table></figure><p>例程：<code>close_contour_gaps.hdev</code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">dev_close_window ()</span><br><span class="line">dev_update_window (<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">* ****</span><br><span class="line">* step: create synthetic image</span><br><span class="line">* ****</span><br><span class="line">gen_rectangle1 (Rectangle, <span class="number">30</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">region_to_bin (Rectangle, BinImage, <span class="number">130</span>, <span class="number">100</span>, <span class="number">120</span>, <span class="number">130</span>)</span><br><span class="line">rectangle1_domain (BinImage, ImageReduced, <span class="number">20</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">52</span>)</span><br><span class="line">mean_image (ImageReduced, SmoothedImage, <span class="number">15</span>, <span class="number">15</span>)</span><br><span class="line">paint_gray (SmoothedImage, BinImage, Image)</span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line">dev_open_window_fit_image (Image, <span class="number">0</span>, <span class="number">0</span>, Width, Height, WindowID)</span><br><span class="line">dev_set_draw (<span class="string">&#x27;margin&#x27;</span>)</span><br><span class="line">dev_set_line_width (<span class="number">3</span>)</span><br><span class="line">dev_display (Image)</span><br><span class="line">stop ()</span><br><span class="line">* ****</span><br><span class="line">* step: create contours</span><br><span class="line">* ****</span><br><span class="line">rectangle1_domain (Image, ImageReduced, <span class="number">5</span>, <span class="number">5</span>, <span class="number">125</span>, <span class="number">115</span>)</span><br><span class="line">edges_sub_pix (ImageReduced, Edges, <span class="string">&#x27;lanser2&#x27;</span>, <span class="number">1.1</span>, <span class="number">22</span>, <span class="number">30</span>)</span><br><span class="line">dev_display (Image)</span><br><span class="line">dev_display (Edges)</span><br><span class="line">stop ()</span><br><span class="line">* ****</span><br><span class="line">* step: process contours</span><br><span class="line">* ****</span><br><span class="line">segment_contours_xld (Edges, LineSegments, <span class="string">&#x27;lines&#x27;</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>)</span><br><span class="line">* LineSegments 是用于表示线段的数据类型 </span><br><span class="line">* regress_contours_xld 函数用于将线段进行线性回归，得到最佳拟合的直线</span><br><span class="line">* 返回的结果是一个轮廓对象 <span class="function">RegressContours</span></span><br><span class="line"><span class="function"><span class="title">regress_contours_xld</span> (<span class="params">LineSegments, RegressContours, <span class="string">&#x27;no&#x27;</span>, <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">union_collinear_contours_xld</span> (<span class="params">RegressContours, UnionContours, <span class="number">10</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0.1</span>, <span class="string">&#x27;attr_keep&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">sort_contours_xld</span> (<span class="params">UnionContours, SortedContours, <span class="string">&#x27;upper_left&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;column&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">Image</span>)</span></span><br><span class="line"><span class="function"><span class="title">colored_display</span> (<span class="params">SortedContours, [<span class="string">&#x27;yellow&#x27;</span>,<span class="string">&#x27;white&#x27;</span>,<span class="string">&#x27;white&#x27;</span>,<span class="string">&#x27;yellow&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_update_window</span> (<span class="params"><span class="string">&#x27;on&#x27;</span></span>)</span></span><br></pre></td></tr></table></figure><h3 id="⑦预处理"><a href="#⑦预处理" class="headerlink" title="⑦预处理"></a>⑦预处理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">预处理方法有：</span><br><span class="line">1.去噪声</span><br><span class="line"></span><br><span class="line">2.增强</span><br><span class="line">对灰度进行缩放</span><br><span class="line">对图像灰度进行腐蚀</span><br></pre></td></tr></table></figure><h3 id="⑧同心度"><a href="#⑧同心度" class="headerlink" title="⑧同心度"></a>⑧同心度</h3><p><a href="https://www.baidu.com/s?wd=%E5%90%8C%E5%BF%83%E5%BA%A6&tn=15007414_5_dg&usm=1&ie=utf-8&rsv_pq=d062dccf034035f9&oq=%E5%90%8C%E5%BF%83%E5%BA%A6%E6%98%AF%E4%BB%80%E4%B9%88&rsv_t=8408LTBWcCinLnPchVIsiPVKt5MCTtX00veggCco6X4gXiSKi+h33qrxU6cJvfNkPcwVXg&sa=re_dqa_zy">同心度</a>是评价‌<a href="https://www.baidu.com/s?wd=%E5%9C%86%E6%9F%B1%E5%BD%A2%E5%B7%A5%E4%BB%B6&tn=15007414_5_dg&usm=1&ie=utf-8&rsv_pq=d062dccf034035f9&oq=%E5%90%8C%E5%BF%83%E5%BA%A6%E6%98%AF%E4%BB%80%E4%B9%88&rsv_t=8408LTBWcCinLnPchVIsiPVKt5MCTtX00veggCco6X4gXiSKi+h33qrxU6cJvfNkPcwVXg&sa=re_dqa_zy">圆柱形工件</a>的一项重要技术指标，它指的是圆心的偏移程度，是同轴度的特殊形式。</p><h2 id="30、一维码"><a href="#30、一维码" class="headerlink" title="30、一维码"></a>30、一维码</h2><h3 id="①理论介绍"><a href="#①理论介绍" class="headerlink" title="①理论介绍"></a>①理论介绍</h3><p>窄单元（条纹或间隔）表示逻辑值“0”</p><p>宽单元（条纹或间隔）表示逻辑值“1”</p><p>宽单元通常是窄单元的2~3倍。</p><p>条码码制即指条码条和空的排列规则</p><p>常用的一维码的码制包括：EAN码、39码、交叉25码、UPC码、128码、93码，及Codabar（库德巴码）等。</p><p>不同的码制有它们各自的应用领域</p><ol><li><p>EAN 码：是国际通用的符号体系，是一种长度固定、无含意的条码，所表达的信息全部为数字，主要应用于商品标识</p></li><li><p>39码和128码：为目前国内企业内部自定义码制，可以根据需要确定条码的长度和信息，它编码的信息可以是数字，也可以包含字母，主要应用于工业生产线领域、图书管理等　　</p></li><li><p>93码：是一种类似于39码的条码，它的密度较高，能够替代39码　　</p></li><li><p>25码：只要应用于包装、运输以及国际航空系统的机票顺序编号等　　</p></li><li><p>Codabar码：应用于血库、图书馆、包裹等的跟踪管理</p></li></ol><p>将 Code 39 条形码转换为 Code 32 条形码可以扩展可编码的字符范围，使得条形码可以包含更多类型的数据</p><p><code>convert_decoded_string_code39_to_code32( : : DecodedDataStringCode39 : ConvertedDataStringCode32)</code></p><h3 id="②识别的过程"><a href="#②识别的过程" class="headerlink" title="②识别的过程"></a>②识别的过程</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">*创建一维码识别模板</span><br><span class="line">create_bar_code_model( : : GenParamNames, GenParamValues : BarCodeHandle)</span><br><span class="line"></span><br><span class="line">*设置一维码识别模板选择的参数</span><br><span class="line">set_bar_code_param( : : BarCodeHandle, GenParamNames, GenParamValues : )</span><br><span class="line"></span><br><span class="line">*在图像中检测和读取条形码符号</span><br><span class="line">find_bar_code(Image : SymbolRegions : BarCodeHandle, CodeType : DecodedDataStrings)</span><br><span class="line"></span><br><span class="line">*获得条形码的信息</span><br><span class="line">*得到条码符号的解码过程中的信息</span><br><span class="line">get_bar_code_result( : : BarCodeHandle, CandidateHandle, ResultName : BarCodeResults)</span><br><span class="line">*得到条码符号的解码过程中的对象</span><br><span class="line">get_bar_code_object( : BarCodeObjects : BarCodeHandle, CandidateHandle, ObjectName : )</span><br><span class="line">*得到条码符号的解码过程中的参数</span><br><span class="line">get_bar_code_param( : : BarCodeHandle, GenParamNames : GenParamValues)</span><br></pre></td></tr></table></figure><h3 id="③一维码识别算子的一些参数的解释"><a href="#③一维码识别算子的一些参数的解释" class="headerlink" title="③一维码识别算子的一些参数的解释"></a>③一维码识别算子的一些参数的解释</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240716112143489.png" alt="image-20240716112143489"></p><p>（1） 在Halcon中，<code>set_bar_code_param</code>函数用于设置条形码参数。具体而言，<code>&#39;check_char&#39;</code>参数用于设置条形码中的校验字符（Check Character）的要求。</p><ol><li><code>set_bar_code_param(BarCodeHandle, &#39;check_char&#39;, &#39;absent&#39;)</code>：这行代码将<code>BarCodeHandle</code>对应的条形码对象的校验字符要求设置为“absent”（缺失）。这意味着条形码中的校验字符可以被省略，即不强制要求存在校验字符。</li><li><code>set_bar_code_param(BarCodeHandle, &#39;check_char&#39;, &#39;present&#39;)</code>：这行代码将<code>BarCodeHandle</code>对应的条形码对象的校验字符要求设置为“present”（存在）。这意味着条形码中的校验字符是必需的，即要求条形码中包含校验字符。</li></ol><p>（2）<code> element_size_variable</code>它用于控制条形码读取器在处理某些具有形变的条形码图像时的行为。</p><p>这些形变可能是由于透视投影或条形码所打印的表面的形变（例如瓶子上的桶形畸变）引起的。</p><p>默认情况下，条形码读取器无法处理此类形变。</p><p>然而，如果将 <code> element_size_variable</code>设置为 <code>true</code>，条形码读取器会尝试对这些形变进行补偿。</p><p>（3） <code>majority_voting</code> 的参数，它控制解码结果的选择模式。</p><p>如果该参数的值为 <code>false</code>，那么当找到最小数量的相同解码扫描线时，将返回一个成功的解码结果。</p><p>如果将该参数设置为<code>true</code>，将使用多数投票方案来在不同的扫描线结果之间进行选择，由大多数扫描线解码的结果将被选为最终结果。</p><p>请注意，将该参数设置为 <code>true</code> 会导致运行时间略微增加，因为需要考虑几乎所有的扫描线，而不仅仅是最小相同的扫描线。该参数仅对非堆叠条形码类型支持。</p><p>为了减少错误的解码结果，建议启用该参数。</p><p>（4） <code>persistence</code> 是一个控制条形码模型是否在解码过程中存储一些中间结果的参数。</p><p>当将  <code>persistence</code> 设置为 1 时，模型会存储一些中间结果，以便进行条形码打印质量评估（使用 ‘get_bar_code_result’ 和 ‘quality_isoiec15416’）或检查解码扫描线（使用 ‘get_bar_code_object’ 和 ‘scanlines_all’ 或 ‘scanlines_valid’）。启用<code>persistence</code>  模式会增加条形码模型结构的内存需求。</p><p>默认情况下，它的值是 0，这意味着模型不会存储中间结果。</p><p>（5）<code>meas_param_estimation</code> 是一个控制条形码阅读器是否使用参数估计来处理候选区域的参数。</p><p>当 <code>meas_param_estimation</code>设置为 <code>false</code> 时，扫描线上的灰度值会根据参数 <code>element_size_min</code> 的值进行平滑处理。简单来说，灰度值的变化会被平滑处理，以减少噪声对解码的影响。这在处理大多数情况下是有效的。</p><p>当 <code>meas_param_estimation</code>设置为 <code>true</code>  时，条形码阅读器会使用不同的方法。它会估计每个条形码候选区域的元素大小，并在候选处理过程中使用该估计值。<strong>这对于条形码元素非常小（小于1.5个像素）的情况特别有用</strong>。通过估计元素大小，可以更好地适应小尺寸的条形码，提高解码的准确性。</p><p>默认情况下，<code>meas_param_estimation</code>的值是 <code>false</code>，这意味着条形码阅读器将使用平滑处理的方法。如果您的条形码具有非常小的元素大小，并且您希望利用参数估计的方法来处理候选区域，您可以将 <code>meas_param_estimation</code>设置为 <code>true</code> 。</p><p>注意，启用参数估计的方法会稍微增加运行时间，因为需要进行更复杂的处理步骤来估计元素大小。</p><p>（6）<code>meas_thresh_abs</code> 是一个用于防止在图像区域中没有或只有非常小的灰度值动态范围（例如，在所有灰度值接近255的白色区域）时，基于<code>meas_thresh</code> 计算出不合理小的边缘检测阈值的参数。</p><p><strong>就是为了把边缘变化明显的才提取出来，不明显的就不提取</strong></p><p>通常情况下，如果基于 <code>meas_thresh</code> 计算出的阈值比 <code>meas_thresh_abs</code> 的值更小，那么将使用 <code>meas_thresh_abs</code> 作为阈值。这是为了防止误检测，因为在上述情况下，使用较小的阈值可能会导致大量错误的边缘检测结果。</p><p>默认情况下，<code>meas_thresh_abs</code> 的值为 5.0。对于噪声水平较高的图像，可能需要使用更大的值。</p><p>在无噪声且对比度非常弱的图像中，该参数可能会干扰对真实边缘的检测，因此可能需要减小或完全禁用它，将其设置为 0.0</p><p><code>meas_thresh_abs</code>  值范围是 [0.0 … 10.0]。您可以根据图像的噪声水平和对比度情况来调整该值，以获得准确的边缘检测结果。</p><p>（7）<code>stop_after_result_num</code> 是一个控制解码过程何时停止的参数。它表示成功解码的条形码数量达到一定值后，解码过程将停止。</p><p>通常情况下，如果预先知道期望的条形码数量，可以设置该参数。</p><p>这样，当找到一定数量的条形码后，条形码阅读器可以终止进一步的解码过程，从而减少整体的解码时间。</p><p>默认情况下，<code>stop_after_result_num</code> 的值是 0，表示不设置解码停止条件，解码过程将解码所有的候选区域。</p><p> <code>stop_after_result_num</code> 值范围是 [0, 1, 2, …]。您可以根据预期的条形码数量来设置该值，以控制解码过程的停止时机。例如，如果预期只有一个条形码，您可以将 <code>stop_after_result_num</code> 设置为 1，以在找到一个条形码后停止解码过程。</p><p>（8）<code>check_char</code> 是一个控制条形码解码过程中如何处理校验字符的参数。</p><p>某些条形码类型（例如Code 39、Codabar、2&#x2F;5 Industrial和2&#x2F;5 Interleaved）可以包含一个可选的校验字符。根据 <code>check_char</code>参数的设置，对这些条形码类型进行解释。</p><p>默认设置为 <code>absent</code>，表示假定没有校验字符。在这种情况下，不进行校验，并将<strong>所有字符</strong>作为数据返回。</p><p>当 <code>check_char</code> 设置为 <code>present</code> 时，期望存在一个校验字符，并用于验证条形码的正确性。如果校验和不匹配，将不返回条形码结果，并且从数据中<strong>去除校验字符</strong>。</p><p>如果不希望去除校验字符，可以使用 <code>preserved</code> 模式，在保留校验字符的同时验证条形码。</p><p>请注意，对于必须包含校验字符的条形码类型，始终将其视为  <code>present</code> 模式。这包括Code 128、EAN-8、EAN-13和UPC-A等类型的条形码。</p><p>该参数可以使用 ‘set_bar_code_param_specific’ 操作符针对不同类型的条形码进行特定设置。</p><p><code>check_char</code>参数的可选值列表为 [‘absent’, ‘present’, ‘preserved’]。</p><p>（9）<code>composite_code</code> 是一个用于控制是否解码附加的 2D GS1 Composite Code 组件的参数。</p><p>大多数符合 GS1 标准的条形码可以附加一个额外的 2D GS1 Composite Code 组件。</p><p>如果将 <code>composite_code</code>  设置为 ‘CC-A&#x2F;B’，则会查找和解码这个 Composite Code 组件。</p><p><code>composite_code</code>  设置为 ‘none’，即禁用这个功能。如果搜索的条形码符号没有附加的 Composite Code 组件，那么只返回条形码本身的结果。目前，Composite Code 仅适用于 GS1 DataBar 系列的条形码。</p><p>该参数可以使用 ‘set_bar_code_param_specific’ 操作符针对不同类型的条形码进行特定设置。</p><p><code>composite_code</code> 参数的可选值列表为 [‘none’, ‘CC-A&#x2F;B’]。</p><p>默认情况下，<code>composite_code</code> 的值为 ‘none’，表示不解码附加的 Composite Code 组件</p><p>（10）<code>barcode_width_min</code> 是一个用于设置最小条形码宽度的参数。</p><p>该参数用于指定条形码的最小宽度。当设置了<code>barcode_width_min</code> 参数时，将启用该参数的训练模式。</p><p>训练模式是一种用于调整和优化参数的机制。在这种情况下，通过设置<code>barcode_width_min</code> 参数并启用训练模式，系统会根据当前的条形码图像数据来自动学习并确定一个合适的最小条形码宽度。系统可能会根据训练数据中的条形码图像的特征和要求，自动调整最小宽度的阈值，以适应不同的条形码类型和应用场景。</p><p>（11）<code>barcode_height_min</code> 是一个用于设置最小条形码高度的参数。</p><p>该参数的值以像素为单位定义。默认值为 -1，表示条形码阅读器会根据其他参数自动确定一个合理的高度。只有在非常扁平或非常高的条形码情况下，可能需要手动调整该参数。</p><p>对于高度小于 16 像素的条形码，用户应该手动设置相应的高度。需要注意的是，最小值为 8 像素。如果条形码非常高，即 70 像素或更高，则手动调整到相应的高度可能会加快后续的查找和读取操作速度。</p><p><code>barcode_height_min</code> 参数允许您指定条形码图像中的最小高度。这在读取和解码条形码时非常重要，因为条形码的可靠性和准确性与条形码的高度相关。</p><p>（12）<code>orientation</code> 代表条形码方向角度的参数</p><p><code>orientation_tol</code> 代表的是条形码总的角度范围</p><p>（13）<code>contrast_min</code> 是一个用于设置条形码元素的前景与背景之间最小对比度的参数。</p><p><code>contrast_min</code> 参数用于定义条形码元素的前景（条纹）与背景之间的最小对比度。设置此参数为大于5的值将帮助操作员优化候选区域的搜索过程。find_bar_code 将拒绝所有对比度值低于<code>contrast_min</code>  的候选区域。因此，设置较高的<code>contrast_min</code>  值将提高 find_bar_code 的运行性能。</p><p>但是，请注意，所有对比度值低于 <code>contrast_min</code> 的条形码都将无法被读取。计算的对比度值是为了加快执行时间而进行的近似值。尝试将<code>contrast_min</code> 的阈值设置较低，以找到可能被拒绝的、对比度接近指定 <code>contrast_min</code> 的条形码。</p><p>可以选择在 [0, 40, 90, 120, … ] 等范围内的值来设置 ‘contrast_min’。</p><p>默认情况下，<code>contrast_min</code>参数的值为 0，表示没有设置最小对比度的要求。这意味着 find_bar_code 将接受任何对比度的条形码进行解码。</p><p>（14）<code>num_scanlines</code> 是一个用于设置在扫描（候选）条形码时使用的最大扫描线数的参数。</p><p><code>num_scanlines</code> 参数用于定义扫描（候选）条形码时使用的最大扫描线数。</p><p>如果未设置 ‘num_scanlines’（参数值为0），则最大扫描线数将在内部确定。</p><p>对于所有单行条形码，最大扫描线数为10</p><p>对于 GS1 DataBar Stacked Omnidirectional 条形码为20</p><p>对于 GS1 DataBar Expanded Stacked 条形码为55。</p><p>通过设置此参数，您可以在两种情况下提高性能：</p><p><strong>第一种情况</strong>是图像中包含许多错误的候选区域。尽管条形码本身通常在一两个扫描后解码成功（除了堆叠条形码，见下文），但默认情况下，错误的候选区域会使用默认值为10的扫描线进行扫描，这会不必要地增加运行时间。减少扫描线数可以在具有许多错误候选区域的图像中提高性能。作为经验法则，质量较高的图像需要较少的扫描线，而质量较低的图像需要更多的扫描线。对于一般图像，值在2到5之间应该足够。然而，如果减少扫描线数后无法检测到条形码，则需要增加扫描线数。</p><p><strong>第二种情况</strong>涉及堆叠条形码（目前包括 GS1 DataBar Stacked、GS1 DataBar Stacked Omnidirectional 和 GS1 DataBar Expanded Stacked）。在这种情况下，会评估所有扫描线，而不是像单行条形码（如Code 128、EAN 13或GS1 DataBar Limited）那样在成功解码后停止扫描。由于扫描扫描线实际上是 find_bar_code 算法中耗时最长的部分之一，调整 <code>num_scanlines</code>  可能会导致重要的性能改进。这对于 GS1 DataBar Expanded Stacked 尤为有效。GS1 DataBar Expanded Stacked 符号可能有多达11行，因此需要55条扫描线来稳定地检测所有行。如果预期只有较少行数的符号，则可以减少 <code>num_scanlines</code> ，保留每行1.5到5条扫描线。</p><p>可以使用 set_bar_code_param_specific 操作符针对不同类型的条形码单独设置该参数。</p><p>可以选择在 [0, 5, 10, 20 …] 等范围内的值来设置 <code>num_scanlines</code> </p><h3 id="④弯曲的条形码的识别方法"><a href="#④弯曲的条形码的识别方法" class="headerlink" title="④弯曲的条形码的识别方法"></a>④弯曲的条形码的识别方法</h3><p>例程：<code>grid_rectification.hdev</code></p><p>根据棋盘格的弯曲映射得到Map 然后对图片进行相同的Map处理即可</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">* This example illustrates how to use the operators <span class="keyword">for</span> the grid-rectification.</span><br><span class="line">* </span><br><span class="line">* The following command creates a postscript file</span><br><span class="line">* that contains the rectification grid. This grid must be</span><br><span class="line">* printed. Then it must be mounted <span class="keyword">on</span> the <span class="built_in">object</span> surface.</span><br><span class="line">WidthOfGrid := <span class="number">0.17</span></span><br><span class="line">NumSquares := <span class="number">17</span></span><br><span class="line">create_rectification_grid (WidthOfGrid, NumSquares, <span class="string">&#x27;rectification_grid.ps&#x27;</span>)</span><br><span class="line">* </span><br><span class="line">* Read the image of the <span class="built_in">object</span> wrapped <span class="keyword">by</span> the rectification grid</span><br><span class="line">* <span class="keyword">and</span> reopen the window <span class="keyword">with</span> an appropriate size.</span><br><span class="line">read_image (Image, <span class="string">&#x27;can_with_grid&#x27;</span>)</span><br><span class="line">get_image_size (Image, ImageWidth, ImageHeight)</span><br><span class="line">dev_close_window ()</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, ImageWidth * <span class="number">0.75</span>, ImageHeight * <span class="number">0.75</span>, <span class="string">&#x27;black&#x27;</span>, WindowID1)</span><br><span class="line">dev_display (Image)</span><br><span class="line">dev_update_off ()</span><br><span class="line">set_display_font (WindowID1, <span class="number">14</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">* </span><br><span class="line">* </span><br><span class="line">* Part <span class="number">1</span>: Determination of the image map</span><br><span class="line">* The surface to be rectified <span class="keyword">is</span> wrapped <span class="keyword">by</span> a checkered pattern, which</span><br><span class="line">* <span class="keyword">is</span> used to determine the mapping between the distorted image <span class="keyword">and</span></span><br><span class="line">* the rectified image. Note the orientation of the two circular marks. When</span><br><span class="line">* <span class="function"><span class="keyword">in</span> <span class="title">gen_grid_rectification_map</span>() the parameter Rotation <span class="keyword">is</span> &#x27;auto&#x27;, the rectified</span></span><br><span class="line"><span class="function">* image <span class="keyword">is</span> rotated such that the black mark <span class="keyword">is</span> left of the white mark.</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* Determine region of interest</span></span><br><span class="line"><span class="function">*确定图像映射的第一部分：确定感兴趣区域和网格点</span></span><br><span class="line"><span class="function">MinContrast :</span>= <span class="number">25</span></span><br><span class="line">Radius := <span class="number">10</span></span><br><span class="line">find_rectification_grid (Image, GridRegion, MinContrast, Radius)</span><br><span class="line">* </span><br><span class="line">dev_display (GridRegion)</span><br><span class="line">disp_message (WindowID1, <span class="string">&#x27;Grid region&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">disp_continue_message (WindowID1, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">stop ()</span><br><span class="line">reduce_domain (Image, GridRegion, ImageReduced)</span><br><span class="line">* </span><br><span class="line">* Determine grid points</span><br><span class="line">SigmaSaddlePoints := <span class="number">1.5</span></span><br><span class="line">Threshold := <span class="number">5</span></span><br><span class="line">*saddle_points_sub_pix特别适用于检测角点，即不同强度的区域如象棋棋盘上的黑白方块相接的位置。</span><br><span class="line">*由于角点具有高对比度和特定的形状，因此可以更容易地定位和确定其精确位置。</span><br><span class="line">saddle_points_sub_pix (ImageReduced, <span class="string">&#x27;facet&#x27;</span>, SigmaSaddlePoints, Threshold, Row, Col)</span><br><span class="line">* </span><br><span class="line">dev_set_color (<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">*通过指定输入点的坐标（Row，Col），可以生成一个由两条长度为Size的线段组成的轮廓</span><br><span class="line">*这两条线段在输入点处精确相交。线段的方向由Angle确定。生成的十字轮廓存储在Cross参数中。</span><br><span class="line">gen_cross_contour_xld (SaddlePoints, Row, Col, <span class="number">6</span>, <span class="number">0.785398</span>)</span><br><span class="line">dev_display (Image)</span><br><span class="line">dev_display (SaddlePoints)</span><br><span class="line">disp_message (WindowID1, <span class="string">&#x27;Grid points&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">disp_continue_message (WindowID1, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">stop ()</span><br><span class="line">* </span><br><span class="line">* Connect points to grid</span><br><span class="line">SigmaConnectGridPoints := <span class="number">0.9</span></span><br><span class="line">MaxDist := <span class="number">5.0</span></span><br><span class="line">GridSpacing := <span class="number">20</span></span><br><span class="line">dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">connect_grid_points (ImageReduced, ConnectingLines, Row, Col, SigmaConnectGridPoints, MaxDist)</span><br><span class="line">* </span><br><span class="line">dev_display (ConnectingLines)</span><br><span class="line">disp_message (WindowID1, <span class="string">&#x27;Connected grid points&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">disp_continue_message (WindowID1, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">stop ()</span><br><span class="line">* </span><br><span class="line">* Determine image map</span><br><span class="line">*用于根据规则网格上的点计算畸变图像与矫正图像之间的映射关系。</span><br><span class="line">*Map：输出的映射数据，可以是多通道图像或矢量场图像</span><br><span class="line">gen_grid_rectification_map (ImageReduced, ConnectingLines, Map, Meshes, GridSpacing, <span class="number">0</span>, Row, Col, <span class="string">&#x27;bilinear&#x27;</span>)</span><br><span class="line">map_image (ImageReduced, Map, ImageMapped)</span><br><span class="line">* </span><br><span class="line">get_image_size (Map, MapWidth, MapHeight)</span><br><span class="line">dev_open_window (<span class="number">0</span>, (ImageWidth * <span class="number">0.75</span>) + <span class="number">12</span>, MapWidth, MapHeight, <span class="string">&#x27;black&#x27;</span>, WindowID2)</span><br><span class="line">set_display_font (WindowID2, <span class="number">14</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">dev_display (ImageMapped)</span><br><span class="line">disp_message (WindowID2, <span class="string">&#x27;Rectified grid&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">stop ()</span><br><span class="line">* </span><br><span class="line">* </span><br><span class="line">* Part <span class="number">2</span>: Application of the image map</span><br><span class="line">* <span class="function">The original <span class="title">surface</span> (<span class="params">without the checkered pattern</span>) <span class="keyword">is</span> rectified</span></span><br><span class="line"><span class="function">* <span class="keyword">using</span> the previously calculated image map.</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* Read <span class="keyword">in</span> the image to be rectified</span></span><br><span class="line"><span class="function"><span class="title">read_image</span> (<span class="params">Image, <span class="string">&#x27;can&#x27;</span></span>)</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* Rectify image <span class="keyword">using</span> the previously calculated image map</span></span><br><span class="line"><span class="function"><span class="title">dev_set_window</span> (<span class="params">WindowID2</span>)</span></span><br><span class="line"><span class="function">*使用之前生成的图像映射Map对原始图像进行校正。</span></span><br><span class="line"><span class="function"><span class="title">map_image</span> (<span class="params">Image, Map, ImageMapped</span>)</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function"><span class="title">dev_set_window</span> (<span class="params">WindowID1</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">Image</span>)</span></span><br><span class="line"><span class="function"><span class="title">disp_message</span> (<span class="params">WindowID1, <span class="string">&#x27;Original image&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_set_window</span> (<span class="params">WindowID2</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">ImageMapped</span>)</span></span><br><span class="line"><span class="function"><span class="title">disp_message</span> (<span class="params">WindowID2, <span class="string">&#x27;Rectified image&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br></pre></td></tr></table></figure><h3 id="⑤Halcon联合Vs显示完整的图片区域"><a href="#⑤Halcon联合Vs显示完整的图片区域" class="headerlink" title="⑤Halcon联合Vs显示完整的图片区域"></a>⑤Halcon联合Vs显示完整的图片区域</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">GetImageSize</span>(ho_Image, &amp;hv_Width, &amp;hv_Height);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (HDevWindowStack::<span class="built_in">IsOpen</span>())</span><br><span class="line"><span class="built_in">SetPart</span>(HDevWindowStack::<span class="built_in">GetActive</span>(), <span class="number">0</span>, <span class="number">0</span>, hv_Height<span class="number">-1</span>, hv_Width<span class="number">-1</span>);</span><br></pre></td></tr></table></figure><h2 id="31、二维码"><a href="#31、二维码" class="headerlink" title="31、二维码"></a>31、二维码</h2><h3 id="①理论介绍-1"><a href="#①理论介绍-1" class="headerlink" title="①理论介绍"></a>①理论介绍</h3><p>二维条码：指在一维条码的基础上扩展出另一维具有可读性的条码，使用黑白矩形图案表示二进制数据，被设备扫描后可获取其中所包含的信息。</p><p>一维条码的宽度记载着数据，而其长度没有记载数据。<strong>二维条码的长度、宽度均记载着数据</strong>。</p><p>二维条码有一维条码没有的“<strong>定位点</strong>”和“<strong>容错机制</strong>”。容错机制在即使没有辨识到全部的条码、或是说条码有污损时，也可以正确地还原条码上的信息。</p><p>二维条码的种类很多，不同的机构开发出的二维条码具有不同的结构以及编写、读取方法。堆叠式&#x2F;行排式二维条码，如，Code 16K、Code 49、PDF417等矩阵式二维码，最流行莫过于QR CODE。</p><p>二维码存储的数据量更大；可以包含数字、字符，及中文文本等混合内容；有一定的容错性,（在部分损坏以后可以正常读取），空间利用率高等。</p><h3 id="②识别的过程-1"><a href="#②识别的过程-1" class="headerlink" title="②识别的过程"></a>②识别的过程</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">*创建二维码识别模板</span><br><span class="line">create_data_code_2d_model( : : SymbolType, GenParamNames, GenParamValues : DataCodeHandle)</span><br><span class="line"></span><br><span class="line">*设置二维码识别模板选择的参数</span><br><span class="line">set_data_code_2d_param( : : DataCodeHandle, GenParamNames, GenParamValues : )</span><br><span class="line"></span><br><span class="line">*在图像中检测和读取二维码符号</span><br><span class="line">find_data_code_2d(Image : SymbolXLDs : DataCodeHandle, GenParamNames, GenParamValues : ResultHandles, DecodedDataStrings)</span><br><span class="line"></span><br><span class="line">*获得二维码的信息</span><br><span class="line">*得到二维码的解码过程中的信息</span><br><span class="line">get_data_code_2d_results( : : DataCodeHandle, CandidateHandle, ResultNames : ResultValues)</span><br><span class="line">*得到条二维码的解码过程中的对象</span><br><span class="line">get_data_code_2d_objects( : DataCodeObjects : DataCodeHandle, CandidateHandle, ObjectName : )</span><br><span class="line">*得到条二维码的解码过程中的参数</span><br><span class="line">get_data_code_2d_param( : : DataCodeHandle, GenParamNames : GenParamValues)</span><br></pre></td></tr></table></figure><h3 id="③二维码识别算子的一些参数的解释"><a href="#③二维码识别算子的一些参数的解释" class="headerlink" title="③二维码识别算子的一些参数的解释"></a>③二维码识别算子的一些参数的解释</h3><p>（1）二维码的最小单位是模块</p><p> <code>module_gap_*</code> 参数来设置模块之间的间隙：</p><p>可以指定相邻的前景模块是否连接在一起，或者它们之间是否存在或可能存在间隙。</p><p>如果前景模块是连接在一起并完全填充模块空间的，间隙参数可以设置为 <code>no</code>（无）。</p><p>如果两个模块之间存在非常小的间隙，即&lt;模块尺寸的10%，则将该参数设置为 <code>small</code>（小）。</p><p>如果间隙较大（相对于模块尺寸而言：&lt;模块尺寸的50%），则可以将其设置为 <code>big</code>（大）。</p><p>即使前景模块是连接在一起的，但如果它们在外观上显得较细，比如由于亮光引起的绽放效果，最后两个设置也可能会有用。</p><p>如果前景模块只是非常小的点，通常需要对图像进行适当的预处理以检测或放大模块（例如，通过 <code>gray_erosion_shape 或 gray_dilation_shape</code> ）。</p><p><code>module_gap_min</code> 表示最小模块间隙，含义是将’module_gap_col_min’和’module_gap_row_min’设置为相同的值。</p><p><code>module_gap_max</code> 表示最大模块间隙，含义是将’module_gap_col_max’和’module_gap_row_max’设置为相同的值。</p><p>（2）<code>default_parameters</code> 的作用是将模型的所有参数重置为三种基本的默认设置之一：标准（standard）、增强（enhanced）或最大（maximum）。除了参数值之外，模型的训练状态也会被重置。</p><p>可选的取值为’standard_recognition’（标准识别）、’enhanced_recognition’（增强识别）和’maximum_recognition’（最大识别）。</p><p>默认值是’standard_recognition’（标准识别设置）。</p><p>需要注意的是，如果将此参数与其他参数的列表一起设置，那么此参数必须位于列表的第一个位置。</p><blockquote><p> <strong>maximum_recognition  &gt; enhanced_recognition &gt; standard_recognition</strong></p></blockquote><p>可以参考例程：<code>2d_data_codes_default_settings.hdev</code></p><p>（3）<code>module_size_min</code> 参数用于设置图像中模块的最小尺寸，单位为像素。需要注意的是，为了获得最佳的识别性能，建议将模块的尺寸设置为至少3-4个像素。</p><p>取值范围：[1 .. 100]</p><p>默认值：6（增强模式下为2，最大模式下为1）</p><p><code>module_size_max</code> 参数用于设置图像中模块的最大尺寸，单位为像素。</p><p>取值范围：[2 .. 100]</p><p>默认值：20（增强模式下为100）</p><p><code>module_size</code> 参数用于将<code>module_size_min</code> 和<code>module_size_max</code> 设置为相同的值。</p><p>这些参数的作用是控制图像中模块的尺寸范围。模块是指二维码或其他类似的矩阵形式的图像中的小方块或小元素。通过设置最小和最大尺寸，您可以限制模块的大小范围，并根据应用需求进行调整。</p><p>例如，如果您将<code>module_size</code> 参数设置为10，那么<code>module_size_min</code> 和<code>module_size_max</code> 将都被设置为10。</p><p>这样做的目的是确保模块的尺寸保持一致，以便在图像处理和识别算法中使用。</p><p>（4）<code>polarity</code> 参数描述了图像中符号的极性，即参数确定符号是在黑色背景上显示为亮色还是在亮色背景上显示为暗色。</p><p>取值：<code>dark_on_light</code>（暗色在亮色背景上）、<code>light_on_dark</code>（亮色在暗色背景上）、<code>any</code>（任意）。</p><p>默认值：<code>dark_on_light</code>（增强模式下为’any’）。</p><p>这个参数用于指定符号在图像中的颜色对比度。例如，如果您将<code>polarity</code> 参数设置为<code>dark_on_light</code>，那么符号将被假设为在亮色背景上显示为暗色。相反，如果将其设置为<code>light_on_dark</code>，则符号将被假设为在暗色背景上显示为亮色。而选择<code>any</code>选项则表示符号的颜色对比度可以是任意的，即无论背景颜色如何，都能正确处理。</p><p>默认情况下，推荐使用<code>dark_on_light</code>作为常规设置，因为大多数二维码和条形码通常在白色背景上显示为黑色。在增强模式下，<code>any</code>选项可以更灵活地处理不同颜色对比度的符号。</p><p>（5）<code>mirrored</code> 参数描述了符号是否或可能是镜像的（即交换符号的行和列）。</p><p>取值：<code>no</code>（不是镜像）、<code>yes</code>（是镜像）、<code>any</code>（任意）。</p><p>默认值：<code>any</code>。</p><p>这个参数用于指定符号是否允许镜像或是否可能存在镜像的情况。</p><p>如果将<code>mirrored</code>参数设置为<code>no</code>，则表示符号不是镜像的，不允许进行镜像操作。</p><p>如果将其设置为<code>yes</code>，则表示符号是镜像的，可以进行镜像操作。</p><p>选择<code>any</code>选项则表示符号可能是镜像的，无论是否镜像都可以进行处理。</p><p>默认情况下，<code>any</code>选项是推荐设置，因为在某些情况下，符号可能会出现镜像的情况。通过设置为<code>any</code>，可以灵活地处理符号是否镜像的情况。</p><p>（6）<code>contrast_min</code> 参数用于设置符号的前景与背景之间的最小对比度（即符号的前景与背景之间的最小梯度）。</p><p>取值范围：[1 .. 100]</p><p>默认值：30（增强模式下为10）</p><p>这个参数用于控制符号前景和背景之间的对比度，即前景元素与背景之间的明暗差异。通过设置最小对比度，可以限制符号的清晰度和可识别性。</p><p>取较高的对比度值（例如设置为100），意味着要求前景和背景之间的明暗差异非常明显，符号的清晰度要求更高。</p><p>取较低的对比度值（例如设置为1），则意味着允许前景和背景之间的明暗差异非常微弱，符号的清晰度要求较低。</p><p>默认情况下，推荐使用较高的对比度值（30）作为常规设置，以确保符号的清晰度和可识别性。在增强模式下，可以使用较低的对比度值（10）以适应更宽范围的图像条件。</p><p>（7）<code>symbol_size</code> 是控制整个二维码的大小的</p><p>（8）<code>small_modules_robustness</code> 参数用于控制对具有非常小模块尺寸的数据码的解码鲁棒性。</p><p>当将参数<code>small_modules_robustness</code> 设置为<code>high</code> 时，增加了解码具有非常小模块尺寸的数据码的可能性。在这种情况下，还应相应地调整最小模块尺寸，即将<code>module_size_min</code> 和 <code>module_width_min</code>（对于PDF417）设置为预期的最小模块尺寸和宽度。</p><p>将<code>small_modules_robustness</code> 设置为 <code>high</code> 可能会显著增加find_data_code_2d函数的内存使用量。</p><p>参数取值范围：<code>low</code>（低）、<code>high</code> （高）</p><p>默认情况下，在常规设置中，推荐将<code>small_modules_robustness</code> 设置为<code>low</code>（低）。这意味着默认情况下，函数将使用较少的内存，并对非常小的模块尺寸的数据码的解码鲁棒性较低。</p><p>在增强模式下，也建议将<code>small_modules_robustness</code> 设置为<code>low</code>（低）。</p><p>而在最大模式下，可以将<code>small_modules_robustness</code> 设置为<code>high</code> （高）以提高对非常小模块尺寸数据码的解码鲁棒性，但需要注意这会增加内存使用量。</p><p>（9）<code>finder_pattern_tolerance</code> 参数用于控制对于有缺陷或部分遮挡的查找图案的容忍度。</p><p>查找图案包括L形边和相对的交替边。取决于该参数，在 <code>find_data_code_2d</code> 函数中的符号搜索过程中使用不同的算法。</p><p>在一种情况下（ <code>low</code> ），假设查找图案存在且几乎没有任何扰动。</p><p>在另一种情况下（<code>high</code>），查找图案可能存在缺陷或部分遮挡，但不会影响符号的识别和读取。</p><p>然而，请注意，在这种模式下，应通过使用 <code>set_data_code_2d_param</code> 来尽可能限制符号搜索的参数范围，否则<code>find_data_code_2d</code> 函数的运行时间可能会显著增加。</p><p>注意，这两种算法在鲁棒性方面略有差异。这可能会导致不同的结果，具体取决于<code>finder_pattern_tolerance</code> 的值，即使符号的查找图案没有受到干扰。例如，如果选择了<code>high</code>，则只能找到具有等距模块网格的符号，因此对于透视畸变的鲁棒性会降低。最后，如果将<code>finder_pattern_tolerance</code> 设置为<code>any</code>，则两种算法都会应用。</p><p>参数取值范围： <code>low</code> （低）、<code>high</code>（高）、<code>any</code>（任意）</p><p>默认情况下，在常规设置中，推荐将<code>finder_pattern_tolerance</code> 设置为 <code>low</code> （低）。这意味着默认情况下，假设查找图案存在且几乎没有扰动。</p><p>在增强模式下，也建议将<code>finder_pattern_tolerance</code> 设置为 <code>low</code> （低）。</p><p>而在最大模式下，可以将<code>finder_pattern_tolerance</code> 设置为<code>any</code>（任意），以应用两种算法并提高对于有缺陷或部分遮挡的查找图案的容忍度。</p><p>（10）<code>contrast_tolerance</code> 参数用于描述对于局部对比度变化（例如，光晕或反射）的搜索容忍度。</p><p>如果将<code>contrast_tolerance</code>设置为<code>high</code>，则在存在强烈的局部对比度变化时可以提高鲁棒性。</p><p>如果将<code>contrast_tolerance</code>设置为<code>low</code>，则算法在存在强烈的局部对比度变化时的鲁棒性较低，但速度较快，并且仍然能够在正常情况下处理对比度变化，因此在大多数情况下应使用该选项。</p><p>如果将<code>contrast_tolerance</code>设置为<code>any</code>，则会应用两种算法。</p><p>参数取值范围：<code>low</code>（低）、<code>high</code>（高）、<code>any</code>（任意）</p><p>默认情况下，在常规设置中，推荐将<code>contrast_tolerance</code>设置为<code>low</code>（低）。这意味着默认情况下，算法在强烈的局部对比度变化下的鲁棒性较低，但速度较快，并且仍然能够处理正常情况下的对比度变化。</p><p>在增强模式下，也建议将<code>contrast_tolerance</code>设置为<code>low</code>（低）。</p><p>而在最大模式下，可以将<code>contrast_tolerance</code>设置为<code>any</code>（任意），以应用两种算法并提高在存在强烈的局部对比度变化时的鲁棒性。</p><p>（11）<code>strict_quiet_zone</code> 参数用于控制 <code>find_data_code_2d</code> 函数在检测到可能可读但在其静默区域中显示缺陷的符号时的行为。</p><p>如果将<code>strict_quiet_zone</code> 设置为<code>yes</code>，则会对所有解码的符号的静默区域进行验证，类似于用于打印质量检查的方法。静默区域评分较低的符号不会作为结果返回。它们的 <code>status</code> 将设置为 <code>quiet zone is missing</code>（静默区域缺失）。</p><p>如果将<code>strict_quiet_zone</code> 设置为<code>no</code>（默认情况），则所有可读的符号将作为结果返回。</p><p>参数取值范围：<code>yes</code>（是）、<code>no</code>（否）</p><p>默认情况下，在常规设置中，<code>strict_quiet_zone</code> 参数的默认值为<code>no</code>（否）。这意味着默认情况下，所有可读的符号都将作为结果返回，而不管其静默区域的质量如何。</p><h2 id="32、联合相机的sdk开发"><a href="#32、联合相机的sdk开发" class="headerlink" title="32、联合相机的sdk开发"></a>32、联合相机的sdk开发</h2><p>需要拷贝的文件有头文件（include）、链接文件（lib）、dll文件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*根据RGB创建一个halcon的三通道图像对象</span><br><span class="line">gen_image3_extern( : Image : Type, Width, Height, PointerRed, PointerGreen, PointerBlue, ClearProc : )</span><br><span class="line">Image（输出对象）：创建的HALCON图像。</span><br><span class="line">Type（输入控制）：像素类型。</span><br><span class="line">Width（输入控制）：图像的宽度。</span><br><span class="line">Height（输入控制）：图像的高度。</span><br><span class="line">PointerRed（输入控制）：指向第一个通道的第一个灰度值的指针。</span><br><span class="line">PointerGreen（输入控制）：指向第二个通道的第一个灰度值的指针。</span><br><span class="line">PointerBlue（输入控制）：指向第三个通道的第一个灰度值的指针。</span><br><span class="line">ClearProc（输入控制）：用于在删除图像对象时释放图像内存的过程。</span><br></pre></td></tr></table></figure><h3 id="①vc-图像转为halcon图像"><a href="#①vc-图像转为halcon图像" class="headerlink" title="①vc++图像转为halcon图像"></a>①vc++图像转为halcon图像</h3><p>（1）初始化相机</p><p>（2）枚举相机类</p><p>（3）设置回调函数</p><p>（4）定义回调函数</p><p>（5） 基于RGB或者Gray转为halcon图像（ <code>gen_image1_extern</code> 或者 <code>gen_image3_extern</code>  ）</p><h3 id="②halcon图像转vc-图像"><a href="#②halcon图像转vc-图像" class="headerlink" title="②halcon图像转vc++图像"></a>②halcon图像转vc++图像</h3><p>（1）在halcon中利用相机助手导出c++代码</p><p>（2）使用 <code>GetImagePointer1</code> 或 <code>GetImagePointer3</code> 得到halcon中图像的指针</p><p>（3）进行一系列的转换和赋值</p><p>（将halcon的 height 和 width转为vc++的数据 并且将 RGB三通道指针 转为 vc++的指针 ）</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240718122325576.png" alt="image-20240718122325576"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240718122308301.png" alt="image-20240718122308301"></p><h2 id="33、Vs2022配置Halcon环境"><a href="#33、Vs2022配置Halcon环境" class="headerlink" title="33、Vs2022配置Halcon环境"></a>33、Vs2022配置Halcon环境</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>选择 <strong>C&#x2F;C++</strong> 下的 <strong>常规</strong> 选项</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240718113714621.png" alt="image-20240718113714621"></p><p>将</p><p><code>C:\Program Files\MVTec\HALCON-12.0\include</code></p><p><code>C:\Program Files\MVTec\HALCON-12.0\include\halconcpp</code></p><p>两个目录添加到 <strong>附加包含目录</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240718113839855.png" alt="image-20240718113839855"></p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>选择 <strong>链接器</strong> 下的 <strong>常规</strong> 选项</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240718114006833.png" alt="image-20240718114006833"></p><p>将</p><p><code>C:\Program Files\MVTec\HALCON-12.0\lib\x64-win64</code></p><p>添加到<strong>附加库目录</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240718114124693.png" alt="image-20240718114124693"></p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>选择 <strong>链接器</strong> 下的 <strong>输入</strong> 选项</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240718114240903.png" alt="image-20240718114240903"></p><p>将</p><p><code>halconcpp.lib</code></p><p>添加到 <strong>附加依赖项</strong></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240718114444247.png" alt="image-20240718114444247"></p><h3 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h3><p>在  **文件名+Dlg.h ** 的最上方加上</p><p><code>#include&quot;HalconCpp.h&quot; using namespace HalconCpp;</code></p><h2 id="34、串口通信"><a href="#34、串口通信" class="headerlink" title="34、串口通信"></a>34、串口通信</h2><h3 id="①理论"><a href="#①理论" class="headerlink" title="①理论"></a>①理论</h3><p>（1）串口和并口</p><p>串口就是我们的数据是一位一位传输出去的 串口传输效率低，但是传输距离长</p><p>并口就是我们的数据通过多条数据线同时传输出去  并口传输的速度快，效率快缺点是长距离传输有困难</p><p>（2）同步通信和异步通信</p><p>同步通信（SYNC :synchronous data communication)是指在约定的通信速率下，发送端和接收端的时钟信号频率和相位始终保持一致（同步)，这样就保证了通信双方在发送和接收数据时具有完全一致的定时关系。同步通信把许多字符组成一个信息组（信息帧)，每帧的开始用同步字符来指示，一次通信只传送一帧信息。在传输数据的同时还需要传输时钟信号,以便接收方可以用时针信号来确定每个信息位。</p><blockquote><p>同步通信的<strong>优点</strong>是：</p><p>传送信息的位数几乎不受限制，一次通信传输的数据有几十到几千个字节，通信效率较高。</p></blockquote><blockquote><p>同步通信的<strong>缺点</strong>是：</p><p>要求在通信中始终保持精确的同步时钟，即发送时钟和接收时钟要严格的同步（常用的做法是两个设备使用同一个时钟源)。打个比喻，同步通信就像两个人实时打电话一样，必须同时实时保搏通话沟通，整个节奏是一致的，就像两个人在同一个指挥棒下通话。</p></blockquote><p>异步通信（ASYNC:asynchronous data communication)，又称为起止式异步通信,是以字符为单位进行传输的,字符之间没有固定的时间间隔要求，而每个字符中的各位则以固定的时间传送。在异步通信中，收发双方取得同步是通过在字符格式中设置起始位和停止位的方法来实现的。具体来说就是，在一个有效字符正式发送之前，发送器先发送一个起始位，然后发送有效字符位，在字符结束时再发送一个停止位，起始位至停止位构成一帧。停止位至下一个起始位之间是不定长的空闲位，并且规定起始位为低电平（逻辑值为0)，停止位和空闲位都是高电平（逻辑值为1)，这样就保证了起始位开始处一定会有一个下跳沿，由此就可以标志一个字符传输的起始。而根据起始位和停止位也就很容易的实现了字符的界定和同步。</p><p>显然，采用异步通信时，发送端和接收端可以由各自的时钟来控制数据的发送和接收，这两个时钟源彼此独立，可以互不同步。再来打个比喻，异步通信就像两个人玩微信语音一样，各自一套自己的机制发送和接收机制，两个人在不同的指挥棒下通话。</p><h3 id="②串口通信一般调用步骤"><a href="#②串口通信一般调用步骤" class="headerlink" title="②串口通信一般调用步骤"></a>②串口通信一般调用步骤</h3><p>（1）初始化串口（配置波特率，数据位，校验位，停止位等）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">CString temp;</span><br><span class="line">CString m_bote=<span class="string">&quot;2400&quot;</span>;</span><br><span class="line">CString m_data=<span class="string">&quot;8&quot;</span>;</span><br><span class="line">CString m_jiaoyan=<span class="string">&quot;None“;</span></span><br><span class="line"><span class="string">CString m_stop=&quot;</span><span class="number">1</span><span class="string">&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">int SelPortNo,SelBaudRate,SelDataBits,SelStopBits;</span></span><br><span class="line"><span class="string">char SelParity;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">temp = &quot;</span>COM6<span class="string">&quot;;</span></span><br><span class="line"><span class="string">temp.Delete(0,3);</span></span><br><span class="line"><span class="string">SelPortNo=atoi(temp);</span></span><br><span class="line"><span class="string">SelBaudRate=atoi(m_bote);</span></span><br><span class="line"><span class="string">SelDataBits=atoi(m_data);</span></span><br><span class="line"><span class="string">SelStopBits=atoi(m_stop);</span></span><br><span class="line"><span class="string">SelParity=m_jiaoyan.GetAt(0);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if(m_SerialPort.InitPort(this,SelPortNo,SelBaudRate,SelDataBits,SelStopBits,EV_RXCHAR|EV_CTS，512))</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    m_SerialPort.StartMonitoring();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    AfxMessageBox(&quot;</span>该串口已经被占用！<span class="string">&quot;)</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>（2）发送 或 接受 数据</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CString data;</span><br><span class="line">data = <span class="string">&quot;FF 01 00 02 40 00 43&quot;</span>;</span><br><span class="line"><span class="comment">//如果发送的数据是16进制 那么需要进行数据转换</span></span><br><span class="line">data=pMainFrame-&gt;<span class="built_in">ChangeCharstr2Hexstr</span>(data);</span><br><span class="line"><span class="comment">//发送数据</span></span><br><span class="line">PmainFrame-&gt;m_SerialPort.<span class="built_in">WriteToPort</span>(data.<span class="built_in">GetBuffer</span>(data.<span class="built_in">GetLength</span>()),data.<span class="built_in">GetLength</span>());</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CString str;</span><br><span class="line">str.<span class="built_in">Format</span>(<span class="string">&quot;%c&quot;</span>,ch);</span><br><span class="line"><span class="comment">//16进制转换</span></span><br><span class="line">str.<span class="built_in">Format</span>(<span class="string">&quot;%02X&quot;</span>,ch);</span><br><span class="line"></span><br><span class="line">m_ReceiveData+=str;</span><br></pre></td></tr></table></figure><p>（3）关闭串口</p><h3 id="③halcon串口通信例程"><a href="#③halcon串口通信例程" class="headerlink" title="③halcon串口通信例程"></a>③halcon串口通信例程</h3><p><code>serial.hdev</code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">*初始化串口</span><br><span class="line">OpSystem := environment(<span class="string">&#x27;OS&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> (OpSystem == <span class="string">&#x27;Windows_NT&#x27;</span>)</span><br><span class="line">    open_serial (<span class="string">&#x27;COM1&#x27;</span>, SerialHandle)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    open_serial (<span class="string">&#x27;/dev/tty&#x27;</span>, SerialHandle)</span><br><span class="line">endif</span><br><span class="line">    </span><br><span class="line">*设置各种参数</span><br><span class="line">set_serial_param (SerialHandle, <span class="number">9600</span>, <span class="number">8</span>, <span class="string">&#x27;none&#x27;</span>, <span class="string">&#x27;none&#x27;</span>, <span class="number">1</span>, <span class="number">1000</span>, <span class="string">&#x27;unchanged&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*发送数据</span><br><span class="line">write_serial (SerialHandle, ords(<span class="string">&#x27;Hello world!\n\r&#x27;</span>))</span><br><span class="line"></span><br><span class="line">*接受数据</span><br><span class="line">read_serial (SerialHandle, <span class="number">10</span>, Data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (|Data| &gt; <span class="number">0</span>)</span><br><span class="line">    Read := chrt(Data)</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">*关闭串口</span><br><span class="line">close_serial (SerialHandle)</span><br></pre></td></tr></table></figure><h2 id="35、网络通信"><a href="#35、网络通信" class="headerlink" title="35、网络通信"></a>35、网络通信</h2><h3 id="①理论-1"><a href="#①理论-1" class="headerlink" title="①理论"></a>①理论</h3><p>（1）UDP全称为<strong>用户数据报协议</strong>。UDP 为应用程序提供了一种<strong>无需建立连接</strong>就可以发送封装的 IP 数据包的方法</p><blockquote><p>特点：</p><p><strong>无连接</strong>：只知道对端的IP和端口号就可以发送，不需要实现建立连接。(就像寄信)。<br><strong>不可靠</strong>：没有确认机制， 没有重传机制。如果因为网络故障该段无法发到对方， UDP协议层也不会给应用层返回任何错误信息。<br><strong>面向数据报</strong>： 应用层交给UDP多长的报文， UDP原样发送既不会拆分，也不会合并。所以UDP不能够灵活的控制读写数据的次数和数量。<br><strong>UDP存在接收缓冲区，但不存在发送缓冲区</strong>。UDP没有发送缓冲区，在调用send to时会直接将数据交给内核，由内核将数据传给网络层协议进行后续的传输动作。UDP具有接收缓冲区，但是这个接收缓冲区不能保证收到的UDP报文的顺序和发送UDP报的顺序一致，如果缓冲区满了再到达的UDP数据报就会被丢弃。</p></blockquote><p>（2）TCP全称传输控制协议，必须对数据的传输进行控制</p><blockquote><p>特点：</p><p><strong>面向连接</strong>：必须建立连接</p><p><strong>可靠</strong>：可靠传输的话就像你在淘宝跟客服小姐姐聊天，你发出的信息下面会有一个状态就是<strong>未读</strong>或者<strong>已读</strong>这么两个状态，这就代表我发出的消息是已经传输到对方那的，不存在说我消息没有发送过去，在聊天框中会出现这条消息标识为&lt;已读&gt;状态，就是能够感知到消息是否传输过去了（传输失败的时候软件会提醒你的），这就是可靠传输</p><p><strong>面向字节流</strong>： TCP和文件操作类型，都是“流”式的（由于这里传输的都是字节，所以称为字节流）</p></blockquote><h3 id="②TCP服务器端和客户端编写流程"><a href="#②TCP服务器端和客户端编写流程" class="headerlink" title="②TCP服务器端和客户端编写流程"></a>②TCP服务器端和客户端编写流程</h3><blockquote><p>服务器端：</p><p>1、进行版本协商（WSAStartup）</p><p>2、创建一个套接字（socket）</p><p>3、将套接字设置为监听状态(listen)</p><p>4、接受客户端的发送请求( accept )</p><p>5、发送或者接受数据 ( send &#x2F; recv )</p><p>6、关闭套接字 ( closesocket ),一次通信结束</p><p>7、继续等待接受客户端的发送请求</p></blockquote><blockquote><p>客户端</p><p>1、进行版本协商（WSAStartup）</p><p>2、创建一个套接字（socket）</p><p>3、连接到服务器 （connect）</p><p>4、发送或者接受消息 ( send &#x2F; recv )</p><p>5、关闭套接字 ( closesocket )</p><p>6、释放资源( WSACleanup)</p></blockquote><h3 id="③UDP服务器端和客户端编写流程"><a href="#③UDP服务器端和客户端编写流程" class="headerlink" title="③UDP服务器端和客户端编写流程"></a>③UDP服务器端和客户端编写流程</h3><blockquote><p>服务器端：</p><p>1、进行版本协商（WSAStartup）</p><p>2、创建一个套接字（socket）</p><p>3、绑定套接字（bind）</p><p>4、发送或者接受数据 ( sendto &#x2F; recvfrom )</p><p>5、关闭套接字 ( closesocket )</p><p>6、释放资源（WSACleanup）</p></blockquote><blockquote><p>客户端</p><p>1、进行版本协商（WSAStartup）</p><p>2、创建一个套接字（socket）</p><p>3、发送或者接受消息 ( sendto &#x2F; recvfrom )</p><p>4、关闭套接字 ( closesocket )</p><p>5、释放资源( WSACleanup)</p></blockquote><h2 id="36、缺陷检测"><a href="#36、缺陷检测" class="headerlink" title="36、缺陷检测"></a>36、缺陷检测</h2><h3 id="①常见的缺陷"><a href="#①常见的缺陷" class="headerlink" title="①常见的缺陷"></a>①常见的缺陷</h3><p>凹凸、污点、瑕疵、孔洞、破损、划痕</p><h3 id="②处理的方法"><a href="#②处理的方法" class="headerlink" title="②处理的方法"></a>②处理的方法</h3><h4 id="1、blob分析-特征检测"><a href="#1、blob分析-特征检测" class="headerlink" title="1、blob分析+特征检测"></a>1、blob分析+特征检测</h4><p>例程：<code>check_hazelnut_wafers.hdev </code></p><p>例程：<code>inspect_bottle_mouth.hdev</code>（极坐标转换）</p><p>例程：<code>novelty_detection_dyn_threshold.hdev </code>（动态&#x2F;局部 二值化dyn_threshold）</p><p>例程：<code>check_blister.hdev</code>（定位）</p><h4 id="2、blob分析-特征检测-差分"><a href="#2、blob分析-特征检测-差分" class="headerlink" title="2、blob分析+特征检测+差分"></a>2、blob分析+特征检测+差分</h4><p>例程：<code>fin.hdev </code></p><p>例程：<code>pcb_inspection.hdev </code>（灰度开运算和灰度闭运算）</p><p>例程：<code>novelty_detection_dyn_threshold.hdev </code></p><h4 id="3、频域-空间域"><a href="#3、频域-空间域" class="headerlink" title="3、频域+空间域"></a>3、频域+空间域</h4><p>例程：<code>detect_indent_fft.hdev </code> (检测缺陷随机，缺陷较小)</p><p>例程：<code>detect_mura_blur.hdev</code>(频域+空间域+差分)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 测图像中的线条及其宽度的操作符</span><br><span class="line">* 用高斯平滑核的偏导数来提取线条，并将线条以亚像素精度的XLD轮廓形式返回</span><br><span class="line">lines_gauss(Image : Lines : Sigma, Low, High, LightDark, ExtractWidth, LineModel, CompleteJunctions : )</span><br></pre></td></tr></table></figure><h4 id="4、光度立体法"><a href="#4、光度立体法" class="headerlink" title="4、光度立体法"></a>4、光度立体法</h4><h4 id="5、测量-拟合"><a href="#5、测量-拟合" class="headerlink" title="5、测量+拟合"></a>5、测量+拟合</h4><p>例程：<code>measure_fill_level.hdev </code></p><p>例程：<code>fit_rectangle2_contour_xld.hdev </code></p><h4 id="6、特征训练的过程"><a href="#6、特征训练的过程" class="headerlink" title="6、特征训练的过程"></a>6、特征训练的过程</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">*创建 MLP 分类器</span><br><span class="line">create_class_mlp( : : NumInput, NumHidden, NumOutput, OutputFunction, Preprocessing, NumComponents, RandSeed : MLPHandle)</span><br><span class="line"></span><br><span class="line">*将图像Image中的训练样本添加到 MLP 的训练数据中</span><br><span class="line">add_samples_image_class_mlp(Image, ClassRegions : : MLPHandle : )</span><br><span class="line"></span><br><span class="line">*设置 MLP 分类器的参数</span><br><span class="line">set_rejection_params_class_mlp( : : MLPHandle, GenParamName, GenParamValue : )</span><br><span class="line"></span><br><span class="line">*训练分类器</span><br><span class="line">train_class_mlp( : : MLPHandle, MaxIterations, WeightTolerance, ErrorTolerance : Error, ErrorLog)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*进行识别分类</span><br><span class="line">classify_image_class_mlp(Image : ClassRegions : MLPHandle, RejectionThreshold : )</span><br></pre></td></tr></table></figure><p>例程：<code>novelty_detection_mlp.hdev </code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">* This example program shows how to use the MLP classifier <span class="keyword">for</span> novelty</span><br><span class="line">* detection to perform a web inspection task.  To perform the novelty detection,</span><br><span class="line">* a rejection <span class="keyword">class</span> <span class="title">is</span> <span class="title">trained</span> <span class="title">internally</span>.</span><br><span class="line">* <span class="title">For</span> <span class="title">the</span> <span class="title">web</span> <span class="title">inspection</span> <span class="title">task</span>, <span class="title">the</span> <span class="title">MLP</span> <span class="title">can</span> <span class="title">subsequently</span> <span class="title">be</span> <span class="title">used</span> <span class="title">to</span> <span class="title">detect</span></span><br><span class="line">* <span class="title">textures</span> <span class="title">that</span> <span class="title">do</span> <span class="title">not</span> <span class="title">correspond</span> <span class="title">to</span> <span class="title">the</span> <span class="title">texture</span> <span class="title">of</span> <span class="title">the</span> <span class="title">trained</span> <span class="title">good</span> <span class="title">objects</span>.</span><br><span class="line">* </span><br><span class="line"><span class="title">dev_update_off</span> ()</span><br><span class="line">* </span><br><span class="line"><span class="title">ReadPretrainedClassifier</span> := <span class="literal">false</span></span><br><span class="line">* Uncomment the following line to read the pretrained classifier <span class="keyword">from</span></span><br><span class="line">* disk. The training may last up to half a minute.</span><br><span class="line">* ReadPretrainedClassifier := <span class="literal">true</span></span><br><span class="line">SaveClassifier := <span class="literal">false</span></span><br><span class="line">* Uncomment the following line to write the MLP classifier to disk after training.</span><br><span class="line">* SaveClassifier := <span class="literal">true</span></span><br><span class="line">* </span><br><span class="line">read_image (Image, <span class="string">&#x27;plastic_mesh/plastic_mesh_01&#x27;</span>)</span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line">dev_close_window ()</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line">dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">set_display_font (WindowHandle, <span class="number">16</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">get_system (<span class="string">&#x27;example_dir&#x27;</span>, HalconExamples)</span><br><span class="line">* The texture filters used <span class="keyword">for</span> the classification will <span class="keyword">return</span> artifacts at the image</span><br><span class="line">* borders because the images of the plastic mesh to be inspected <span class="keyword">do</span> <span class="keyword">not</span></span><br><span class="line">* contain an integer number of mesh cells.  Because <span class="keyword">this</span> would lead to wrongly</span><br><span class="line">* detected errors at the image borders, we must exclude the area close to the</span><br><span class="line">* image border <span class="keyword">from</span> the training <span class="keyword">and</span> classification.  This <span class="keyword">is</span> done <span class="keyword">with</span> the following</span><br><span class="line">* rectangle.  Note that the image <span class="keyword">is</span> later scaled down <span class="keyword">by</span> a factor of two.</span><br><span class="line">gen_rectangle1 (Rectangle, <span class="number">10</span>, <span class="number">10</span>, Height / <span class="number">2</span> - <span class="number">11</span>, Width / <span class="number">2</span> - <span class="number">11</span>)</span><br><span class="line"><span class="keyword">if</span> (ReadPretrainedClassifier)</span><br><span class="line">    * Read the pretrained classifier <span class="keyword">from</span> disk.</span><br><span class="line">    dev_display (Image)</span><br><span class="line">    disp_message (WindowHandle, <span class="string">&#x27;Reading classifier from disk...&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">    read_class_mlp (HalconExamples + <span class="string">&#x27;/hdevelop/Segmentation/Classification/novelty_detection.gmc&#x27;</span>, MLPHandle)</span><br><span class="line">    wait_seconds (<span class="number">1.5</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    * Create the MLP classifier.</span><br><span class="line">    create_class_mlp (<span class="number">5</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="string">&#x27;softmax&#x27;</span>, <span class="string">&#x27;principal_components&#x27;</span>, <span class="number">3</span>, <span class="number">42</span>, MLPHandle)</span><br><span class="line">    * The training <span class="keyword">is</span> based <span class="keyword">on</span> five images that contain no errors.</span><br><span class="line">    gen_empty_region (EmptyRegion)</span><br><span class="line">    concat_obj (Rectangle, EmptyRegion, ObjectsConcat)</span><br><span class="line">    <span class="keyword">for</span> J := <span class="number">1</span> to <span class="number">5</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">        read_image (Image, <span class="string">&#x27;plastic_mesh/plastic_mesh_&#x27;</span> + J$<span class="string">&#x27;02&#x27;</span>)</span><br><span class="line">        * The images are zoomed down because the resolution of the mesh <span class="keyword">is</span> very</span><br><span class="line">        * high.  This saves a large amount of processing time.</span><br><span class="line">        zoom_image_factor (Image, ImageZoomed, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="string">&#x27;constant&#x27;</span>)</span><br><span class="line">        dev_display (ImageZoomed)</span><br><span class="line">        disp_message (WindowHandle, <span class="string">&#x27;Adding training samples...&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">        * Generate the texture image.</span><br><span class="line">        gen_texture_image (ImageZoomed, ImageTexture)</span><br><span class="line">        * Add the samples to the classifier.</span><br><span class="line">        add_samples_image_class_mlp (ImageTexture, ObjectsConcat, MLPHandle)</span><br><span class="line">    <span class="function">endfor</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">ImageZoomed</span>)</span></span><br><span class="line"><span class="function">    * Now configure the MLP that a rejection <span class="keyword">class</span> will be added during training.</span></span><br><span class="line"><span class="function">    <span class="title">set_rejection_params_class_mlp</span> (<span class="params">MLPHandle, <span class="string">&#x27;sampling_strategy&#x27;</span>, <span class="string">&#x27;hyperbox_ring_around_each_class&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">set_rejection_params_class_mlp</span> (<span class="params">MLPHandle, <span class="string">&#x27;rejection_sample_factor&#x27;</span>, <span class="number">.3</span></span>)</span></span><br><span class="line"><span class="function">    * Train the MLP.</span></span><br><span class="line"><span class="function">    <span class="title">disp_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;Training MLP...&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">train_class_mlp</span> (<span class="params">MLPHandle, <span class="number">200</span>, <span class="number">1</span>, <span class="number">0.01</span>, Error, ErrorLog</span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> (<span class="params">SaveClassifier</span>)</span></span><br><span class="line"><span class="function">        <span class="title">write_class_mlp</span> (<span class="params">MLPHandle, HalconExamples + <span class="string">&#x27;/hdevelop/Segmentation/Classification/novelty_detection.gmc&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    endif</span></span><br><span class="line"><span class="function">endif</span></span><br><span class="line"><span class="function">* Now detect errors <span class="keyword">in</span> the plastic meshes.</span></span><br><span class="line"><span class="function"><span class="keyword">for</span> J :</span>= <span class="number">1</span> to <span class="number">14</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">    read_image (Image, <span class="string">&#x27;plastic_mesh/plastic_mesh_&#x27;</span> + J$<span class="string">&#x27;02&#x27;</span>)</span><br><span class="line">    zoom_image_factor (Image, ImageZoomed, <span class="number">0.5</span>, <span class="number">0.5</span>, <span class="string">&#x27;constant&#x27;</span>)</span><br><span class="line">    dev_display (ImageZoomed)</span><br><span class="line">    *给图像添加纹理</span><br><span class="line">    gen_texture_image (ImageZoomed, ImageTexture)</span><br><span class="line">    reduce_domain (ImageTexture, Rectangle, ImageTextureReduced)</span><br><span class="line">    * Classify samples belonging to the trained <span class="keyword">class</span> <span class="title">with</span> <span class="title">the</span> <span class="title">MLP</span>.</span><br><span class="line">    <span class="title">classify_image_class_mlp</span> (<span class="title">ImageTextureReduced</span>, <span class="title">ClassRegions</span>, <span class="title">MLPHandle</span>, 0.5)</span><br><span class="line">    * <span class="title">Post</span> <span class="title">process</span> <span class="title">the</span> <span class="title">returned</span> <span class="title">raw</span> <span class="title">errors</span> <span class="title">to</span> <span class="title">remove</span> <span class="title">insignificant</span> <span class="title">parts</span> <span class="title">of</span> <span class="title">the</span></span><br><span class="line">    * <span class="title">detected</span> <span class="title">errors</span>.</span><br><span class="line">    <span class="title">select_obj</span> (<span class="title">ClassRegions</span>, <span class="title">Correct</span>, 1)</span><br><span class="line">    <span class="title">select_obj</span> (<span class="title">ClassRegions</span>, <span class="title">Errors</span>, 2)</span><br><span class="line">    <span class="title">opening_circle</span> (<span class="title">Errors</span>, <span class="title">ErrorsOpening</span>, 4.5)</span><br><span class="line">    <span class="title">closing_circle</span> (<span class="title">ErrorsOpening</span>, <span class="title">ErrorsClosing</span>, 10.5)</span><br><span class="line">    <span class="title">connection</span> (<span class="title">ErrorsClosing</span>, <span class="title">ErrorsConnected</span>)</span><br><span class="line">    <span class="title">select_shape</span> (<span class="title">ErrorsConnected</span>, <span class="title">FinalErrors</span>, &#x27;<span class="title">area</span>&#x27;, &#x27;<span class="title">and</span>&#x27;, 100, 1000000)</span><br><span class="line">    <span class="title">count_obj</span> (<span class="title">FinalErrors</span>, <span class="title">NumErrors</span>)</span><br><span class="line">    <span class="title">dev_set_color</span> (&#x27;<span class="title">red</span>&#x27;)</span><br><span class="line">    <span class="title">dev_set_draw</span> (&#x27;<span class="title">margin</span>&#x27;)</span><br><span class="line">    <span class="title">dev_set_line_width</span> (5)</span><br><span class="line">    <span class="title">dev_display</span> (<span class="title">FinalErrors</span>)</span><br><span class="line">    <span class="title">if</span> (<span class="title">NumErrors</span> &gt; 0)</span><br><span class="line">        <span class="title">disp_message</span> (<span class="title">WindowHandle</span>, &#x27;<span class="title">Mesh</span> <span class="title">not</span> <span class="title">OK</span>&#x27;, &#x27;<span class="title">window</span>&#x27;, 10, 10, &#x27;<span class="title">black</span>&#x27;, &#x27;<span class="title">true</span>&#x27;)</span><br><span class="line">    <span class="title">else</span></span><br><span class="line">        <span class="title">disp_message</span> (<span class="title">WindowHandle</span>, &#x27;<span class="title">Mesh</span> <span class="title">OK</span>&#x27;, &#x27;<span class="title">window</span>&#x27;, 10, 10, &#x27;<span class="title">black</span>&#x27;, &#x27;<span class="title">true</span>&#x27;)</span><br><span class="line">    <span class="title">endif</span></span><br><span class="line">    <span class="title">if</span> (<span class="title">J</span> &lt; 14)</span><br><span class="line">        <span class="title">disp_continue_message</span> (<span class="title">WindowHandle</span>, &#x27;<span class="title">black</span>&#x27;, &#x27;<span class="title">true</span>&#x27;)</span><br><span class="line">    <span class="title">endif</span></span><br><span class="line">    <span class="title">stop</span> ()</span><br><span class="line"><span class="title">endfor</span></span><br><span class="line"><span class="title">clear_class_mlp</span> (<span class="title">MLPHandle</span>)</span><br></pre></td></tr></table></figure><h3 id="③药品检测的代码"><a href="#③药品检测的代码" class="headerlink" title="③药品检测的代码"></a>③药品检测的代码</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">*读入图片</span><br><span class="line">dev_close_window ()</span><br><span class="line">read_image (Image, <span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/Halcon视频教程 第2套初级班+强化班/强化班视频/实战图片/药品检测.png&#x27;</span>)</span><br><span class="line">dev_open_window_fit_image (Image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle)</span><br><span class="line">dev_display (Image)</span><br><span class="line"></span><br><span class="line">*设置显示</span><br><span class="line">set_display_font (WindowHandle, <span class="number">14</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">dev_set_draw (<span class="string">&#x27;margin&#x27;</span>)</span><br><span class="line">dev_set_line_width (<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">*阈值分割 提取边界</span><br><span class="line">scale_image (Image, ImageScaled, <span class="number">2.5</span>, <span class="number">-7</span>)</span><br><span class="line">threshold (ImageScaled, Regions, <span class="number">0</span>, <span class="number">114</span>)</span><br><span class="line">connection (Regions, ConnectedRegions)</span><br><span class="line">select_shape (ConnectedRegions, SelectedRegions, <span class="string">&#x27;area&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="number">67942.9</span>, <span class="number">78903.9</span>)</span><br><span class="line">fill_up (SelectedRegions, RegionFillUp)</span><br><span class="line">*边界更加平滑</span><br><span class="line">shape_trans (RegionFillUp, Blister, <span class="string">&#x27;convex&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*校正图片</span><br><span class="line">orientation_region (Blister, Phi)</span><br><span class="line">area_center (Blister, Area1, Row, Column)</span><br><span class="line">vector_angle_to_rigid (Row, Column, Phi, Row, Column, <span class="number">0</span>, HomMat2D)</span><br><span class="line">affine_trans_image (Image, Image2, HomMat2D, <span class="string">&#x27;constant&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*挨个画圆</span><br><span class="line">gen_empty_obj (Chambers)</span><br><span class="line"><span class="keyword">for</span> I := <span class="number">0</span> to <span class="number">1</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">    Row := <span class="number">190</span> + I * <span class="number">110</span></span><br><span class="line">    <span class="keyword">for</span> J := <span class="number">0</span> to <span class="number">5</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">        Column := <span class="number">165</span> + J * <span class="number">80</span></span><br><span class="line">        gen_circle (Circle, Row, Column, <span class="number">35</span>)</span><br><span class="line">        concat_obj (Chambers, Circle, Chambers)</span><br><span class="line">    endfor</span><br><span class="line">endfor</span><br><span class="line"></span><br><span class="line">*得到扣除圆圈的图像</span><br><span class="line">affine_trans_region (Blister, Blister, HomMat2D, <span class="string">&#x27;nearest_neighbor&#x27;</span>)</span><br><span class="line">difference (Blister, Chambers, Pattern)</span><br><span class="line">union1 (Chambers, ChambersUnion)</span><br><span class="line"></span><br><span class="line">*得到变换的角度</span><br><span class="line">orientation_region (Blister, PhiRef)</span><br><span class="line">PhiRef := rad(<span class="number">180</span>) + <span class="function">PhiRef</span></span><br><span class="line"><span class="function"><span class="title">area_center</span> (<span class="params">Blister, Area2, RowRef, ColumnRef</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">*重新读入图像</span></span><br><span class="line"><span class="function"><span class="title">dev_close_window</span> ()</span></span><br><span class="line"><span class="function"><span class="title">dev_open_window_fit_image</span> (<span class="params">Image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">Image2</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">*抠出图像</span></span><br><span class="line"><span class="function"><span class="title">reduce_domain</span> (<span class="params">Image2, ChambersUnion, ImageReduced</span>)</span></span><br><span class="line"><span class="function"><span class="title">threshold</span> (<span class="params">ImageReduced, Regions1, <span class="number">0</span>, <span class="number">125</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">connection</span> (<span class="params">Regions1, ConnectedRegions1</span>)</span></span><br><span class="line"><span class="function"><span class="title">select_shape</span> (<span class="params">ConnectedRegions1, SelectedRegions1, <span class="string">&#x27;area&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="number">1346.85</span>, <span class="number">2000</span></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">dev_set_draw</span> (<span class="params"><span class="string">&#x27;margin&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">Image2</span>)</span></span><br><span class="line"><span class="function"><span class="title">dev_display</span> (<span class="params">SelectedRegions1</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">*进行检测</span></span><br><span class="line"><span class="function"><span class="title">count_obj</span> (<span class="params">Chambers, Number</span>)</span></span><br><span class="line"><span class="function"><span class="title">gen_empty_obj</span> (<span class="params">WrongPill</span>)</span></span><br><span class="line"><span class="function"><span class="title">gen_empty_obj</span> (<span class="params">MissingPill</span>)</span></span><br><span class="line"><span class="function"><span class="title">gen_empty_obj</span> (<span class="params">CrackPill</span>)</span></span><br><span class="line"><span class="function">    <span class="keyword">for</span> I :</span>= <span class="number">1</span> to Number <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">        select_obj (Chambers, Chamber, I)</span><br><span class="line">        intersection (Chamber, SelectedRegions1, Pill)</span><br><span class="line">        area_center (Pill, Area, Row1, Column1)</span><br><span class="line">        *如果存在裂缝 就会存在孔洞面积</span><br><span class="line">        area_holes (Pill, AreaHole)</span><br><span class="line">        <span class="keyword">if</span>(AreaHole &gt; <span class="number">0</span>)</span><br><span class="line">            concat_obj (CrackPill, Pill, CrackPill)</span><br><span class="line">        <span class="function">endif</span></span><br><span class="line"><span class="function">        <span class="title">if</span> (<span class="params">Area &gt; <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">            <span class="title">min_max_gray</span> (<span class="params">Pill, Image2, <span class="number">0</span>, Min, Max, Range</span>)</span></span><br><span class="line"><span class="function">            <span class="title">if</span> (<span class="params">Area &lt; <span class="number">1400</span> <span class="keyword">or</span> Min &gt; <span class="number">40</span></span>)</span></span><br><span class="line"><span class="function">                <span class="title">concat_obj</span> (<span class="params">WrongPill, Pill, WrongPill</span>)</span></span><br><span class="line"><span class="function">            endif</span></span><br><span class="line"><span class="function">        <span class="keyword">else</span></span></span><br><span class="line"><span class="function">            <span class="title">concat_obj</span> (<span class="params">MissingPill, Chamber, MissingPill</span>)</span></span><br><span class="line"><span class="function">        endif</span></span><br><span class="line"><span class="function">        <span class="title">dev_clear_window</span> ()</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">Image2</span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_set_color</span> (<span class="params"><span class="string">&#x27;forest green&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">count_obj</span> (<span class="params">SelectedRegions1, NumberP</span>)</span></span><br><span class="line"><span class="function">    <span class="title">count_obj</span> (<span class="params">WrongPill, NumberWP</span>)</span></span><br><span class="line"><span class="function">    <span class="title">count_obj</span> (<span class="params">MissingPill, NumberMP</span>)</span></span><br><span class="line"><span class="function">    <span class="title">count_obj</span> (<span class="params">CrackPill, NumberCp</span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">SelectedRegions1</span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> (<span class="params">NumberMP &gt; <span class="number">0</span> <span class="keyword">or</span> NumberWP &gt; <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">disp_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;Not OK&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span>, <span class="number">10</span> + <span class="number">600</span>, <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="keyword">else</span></span></span><br><span class="line"><span class="function">        <span class="title">disp_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;OK&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span>, <span class="number">10</span> + <span class="number">600</span>, <span class="string">&#x27;forest green&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    endif</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    <span class="title">disp_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;# correct pills: &#x27;</span> + (NumberP - NumberWP - NumberCp</span>), &#x27;window&#x27;, 10, 10, &#x27;black&#x27;, &#x27;<span class="literal">true</span>&#x27;)</span></span><br><span class="line"><span class="function">    <span class="title">disp_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;# wrong pills  :  &#x27;</span> + NumberWP, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span> + <span class="number">25</span>, <span class="number">10</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> (<span class="params">NumberWP &gt; <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">disp_message</span> (<span class="params">WindowHandle, NumberWP, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span> + <span class="number">25</span>, <span class="number">10</span> + <span class="number">180</span>, <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    endif</span></span><br><span class="line"><span class="function">    <span class="title">disp_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;# missing pills:  &#x27;</span> + NumberMP, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span> + <span class="number">50</span>, <span class="number">10</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">disp_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;# crack pills:  &#x27;</span> + NumberCp, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span> + <span class="number">75</span>, <span class="number">10</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> (<span class="params">NumberMP &gt; <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">disp_message</span> (<span class="params">WindowHandle, NumberMP, <span class="string">&#x27;window&#x27;</span>, <span class="number">10</span> + <span class="number">50</span>, <span class="number">10</span> + <span class="number">180</span>, <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    endif</span></span><br><span class="line"><span class="function">    <span class="title">dev_set_color</span> (<span class="params"><span class="string">&#x27;red&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">WrongPill</span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">MissingPill</span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">CrackPill</span>)</span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">    endfor</span></span><br></pre></td></tr></table></figure><h2 id="37、OCV（光学字符检测）"><a href="#37、OCV（光学字符检测）" class="headerlink" title="37、OCV（光学字符检测）"></a>37、OCV（光学字符检测）</h2><p>例程：<code>write_ocv.hdev</code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">* <span class="number">1</span>、采集图像</span><br><span class="line">read_image (Image, <span class="string">&#x27;a01&#x27;</span>)</span><br><span class="line">* <span class="number">2</span>、提取字符</span><br><span class="line">threshold (Image, Region, <span class="number">0</span>, <span class="number">100</span>)</span><br><span class="line">* <span class="number">3</span>、抠出图像</span><br><span class="line">shape_trans (Region, RegionTrans, <span class="string">&#x27;rectangle1&#x27;</span>)</span><br><span class="line">dilation_rectangle1 (RegionTrans, RegionDilation, <span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">* Reduce the domain of an image.</span><br><span class="line">reduce_domain (Image, RegionDilation, ImageReduced)</span><br><span class="line"></span><br><span class="line">* <span class="number">3</span>、创建模型 进行训练</span><br><span class="line">* <span class="function">Create a <span class="keyword">new</span> OCV tool based <span class="keyword">on</span> gray <span class="keyword">value</span> projections</span></span><br><span class="line"><span class="function"><span class="title">create_ocv_proj</span> (<span class="params"><span class="string">&#x27;A&#x27;</span>, OCVHandle</span>)</span></span><br><span class="line"><span class="function"><span class="title">traind_ocv_proj</span> (<span class="params">ImageReduced, OCVHandle, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;single&#x27;</span></span>)</span></span><br><span class="line"><span class="function">* 4、保存训练好的模型</span></span><br><span class="line"><span class="function"><span class="title">write_ocv</span> (<span class="params">OCVHandle, <span class="string">&#x27;test_ocv.ocv&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="title">close_ocv</span> (<span class="params">OCVHandle</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* 下次使用时读出训练好的模型</span></span><br><span class="line"><span class="function"><span class="title">read_ocv</span> (<span class="params"><span class="string">&#x27;test_ocv.ocv&#x27;</span>, OCVHandle</span>)</span></span><br><span class="line"><span class="function"><span class="title">close_ocv</span> (<span class="params">OCVHandle</span>)</span></span><br></pre></td></tr></table></figure><p>例程：<code>print_quality.hdev</code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">read_image (Image, <span class="string">&#x27;fonts/arial_a1&#x27;</span>)</span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line">dev_close_window ()</span><br><span class="line">dev_open_window (<span class="number">0</span>, <span class="number">0</span>, Width / <span class="number">2</span>, Height / <span class="number">2</span>, <span class="string">&#x27;black&#x27;</span>, WindowHandle)</span><br><span class="line">dev_display (Image)</span><br><span class="line">dev_set_draw (<span class="string">&#x27;margin&#x27;</span>)</span><br><span class="line">gen_rectangle1 (Rectangle, <span class="number">37</span>, <span class="number">69</span>, <span class="number">115</span>, <span class="number">141</span>)</span><br><span class="line">reduce_domain (Image, Rectangle, ImageReduced)</span><br><span class="line">*创建模型 进行训练</span><br><span class="line">create_ocv_proj (<span class="string">&#x27;A&#x27;</span>, OCVHandle)</span><br><span class="line">traind_ocv_proj (ImageReduced, OCVHandle, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;single&#x27;</span>)</span><br><span class="line">dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> I := <span class="number">1</span> to <span class="number">9</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">    read_image (Image, <span class="string">&#x27;fonts/arial_a&#x27;</span> + I)</span><br><span class="line">    binary_threshold (Image, Region, <span class="string">&#x27;max_separability&#x27;</span>, <span class="string">&#x27;dark&#x27;</span>, UsedThreshold)</span><br><span class="line">    connection (Region, ConnectedRegions)</span><br><span class="line">    select_shape (ConnectedRegions, SelectedRegions, <span class="string">&#x27;area&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="number">150</span>, <span class="number">99999</span>)</span><br><span class="line">    sort_region (SelectedRegions, SortedRegions, <span class="string">&#x27;character&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;row&#x27;</span>)</span><br><span class="line">    select_obj (SortedRegions, ObjectSelected, <span class="number">1</span>)</span><br><span class="line">    shape_trans (ObjectSelected, RegionTrans, <span class="string">&#x27;rectangle1&#x27;</span>)</span><br><span class="line">    dilation_rectangle1 (RegionTrans, RegionDilation, <span class="number">15</span>, <span class="number">15</span>)</span><br><span class="line">    reduce_domain (Image, RegionDilation, ImageReduced)</span><br><span class="line">    *识别函数 do_ocv_simple</span><br><span class="line">    * Quality的值越大 识别的正确率越高</span><br><span class="line">    * <span class="number">5</span>代表阈值 值越大要求越高</span><br><span class="line">    do_ocv_simple (ImageReduced, OCVHandle, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="number">5</span>, Quality)</span><br><span class="line">    set_tposition (WindowHandle, <span class="number">15</span>, <span class="number">12</span>)</span><br><span class="line">    write_string (WindowHandle, <span class="string">&#x27;Quality = &#x27;</span> + Quality)</span><br><span class="line">    stop ()</span><br><span class="line"><span class="function">endfor</span></span><br><span class="line"><span class="function"><span class="title">close_ocv</span> (<span class="params">OCVHandle</span>)</span></span><br></pre></td></tr></table></figure><h2 id="38、频域-空间域"><a href="#38、频域-空间域" class="headerlink" title="38、频域+空间域"></a>38、频域+空间域</h2><h3 id="①理论-2"><a href="#①理论-2" class="headerlink" title="①理论"></a>①理论</h3><p><strong>频率图像中心一般是低频成分，从中心往外频率是逐渐增加的</strong></p><p><strong>每一点亮度值越高表示这个频率的特征很突出。亮点越多表示该频率的成分越多</strong></p><p><strong>一幅图像灰度均匀的区域，变化不剧烈的部分对应低频部分——频谱图中较亮部分</strong></p><p><strong>图像中的噪声、边缘、细节，变化剧烈的部分对应高频部分——频谱图中较暗部分</strong></p><p>整个图像区域中一般最多的就是背景图</p><p>去除掉较亮的区域（成分多的内容） 就是去除了背景图</p><p>留下了较暗的区域 就是留下了细节内容</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705161740305.png" alt="image-20240705161740305"></p><h3 id="②傅里叶变换的算子"><a href="#②傅里叶变换的算子" class="headerlink" title="②傅里叶变换的算子"></a>②傅里叶变换的算子</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*fft_image函数计算输入图像（Image）的傅里叶变换，将图像转换到频率域</span><br><span class="line">*采用的算法是快速傅里叶变换（FFT）。该函数对整个图像进行变换，忽略图像的域</span><br><span class="line">fft_image(Image : ImageFFT : : )</span><br><span class="line"></span><br><span class="line">*fft_generic提供了更灵活的选项，可以选择傅里叶变换的方向、指数符号、归一化因子和直流分量位置等</span><br><span class="line">fft_generic(Image : ImageFFT : Direction, Exponent, Norm, Mode, ResultType : )</span><br><span class="line">    </span><br><span class="line">* 傅里叶反变换 频率图变为灰度图</span><br><span class="line">fft_image_inv(Image : ImageFFTInv : : )</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240705161340906.png" alt="image-20240705161340906"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240706115211531.png" alt="image-20240706115211531"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*进行快速傅里叶变换</span><br><span class="line">*其中<span class="string">&#x27;to_freq&#x27;</span>代表正向 ‘from_freq’代表反向</span><br><span class="line">*ResultType表示结果类型（傅里叶变换得到的结果有实部和虚部 默认为complex复数形式）</span><br><span class="line"><span class="built_in">fft_generic</span>(Image:ImageFFT:<span class="string">&#x27;to_freq&#x27;</span>,Exponent,Norm,Mode,ResultType:)</span><br></pre></td></tr></table></figure><ol><li><p><strong>低通滤波器（Low-pass Filter）：</strong><br>低通滤波器<strong>允许低频信号通过</strong>，<strong>抑制高频信号</strong>。它的作用是<strong>平滑图像、去除高频噪声、模糊图像的细节，使图像变得更加平滑</strong>。低通滤波器通常用于图像模糊、降噪和图像压缩等应用。</p><p>常见的低通滤波器包括：</p><ul><li>均值滤波器（平均滤波器）：用邻域像素的平均值替代中心像素的值。</li><li>高斯滤波器：使用高斯函数作为权重来平滑图像，具有更好的平滑效果和较好的边缘保留性能。</li><li>中值滤波器：用邻域像素的中值替代中心像素的值，对于去除椒盐噪声等非常有效。</li></ul><p>低通滤波器可以通过控制滤波器的大小或频率响应来调整平滑程度。较大的滤波器将导致更强的平滑效果，但可能会损失图像的细节。</p></li><li><p><strong>高通滤波器（High-pass Filter）：</strong><br>高通滤波器<strong>允许高频信号通过</strong>，<strong>抑制低频信号</strong>。它的作用是<strong>突出图像中的细节、边缘和纹理，增强图像的锐度和边缘信息</strong>。高通滤波器通常用于图像增强、边缘检测和纹理分析等应用。</p><p>常见的高通滤波器包括：</p><ul><li>拉普拉斯滤波器：用于增强图像的高频部分，使边缘更加明显。</li><li>Sobel滤波器：用于检测图像中的边缘，通过计算梯度来突出边缘。</li><li>Prewitt滤波器：类似于Sobel滤波器，用于检测图像中的边缘。</li></ul><p>高通滤波器可以通过控制滤波器的大小或频率响应来调整增强效果。较小的滤波器将突出较细的边缘和细节，而较大的滤波器将突出更粗的边缘和纹理。</p></li></ol><h3 id="③喷图处理（除滤波器外）"><a href="#③喷图处理（除滤波器外）" class="headerlink" title="③喷图处理（除滤波器外）"></a>③喷图处理（除滤波器外）</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240721125908603.png" alt="image-20240721125908603"></p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240721125923423.png" alt="image-20240721125923423"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">read_image (Image11, <span class="string">&#x27;C:/Users/ZW/Desktop/机器视觉/Halcon视频教程 第2套初级班+强化班/强化班视频/实战图片/11.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">rgb1_to_gray (Image11, GrayImage)</span><br><span class="line">*傅里叶变换</span><br><span class="line">fft_image (GrayImage, ImageFFT)</span><br><span class="line"></span><br><span class="line">gen_rectangle1 (ROI_0, <span class="number">-0.5</span>, <span class="number">399.311</span>, <span class="number">169.691</span>, <span class="number">423.571</span>)</span><br><span class="line">gen_rectangle1 (TMP_Region, <span class="number">158.828</span>, <span class="number">313.914</span>, <span class="number">225.215</span>, <span class="number">455.595</span>)</span><br><span class="line">union2 (ROI_0, TMP_Region, ROI_0)</span><br><span class="line">gen_rectangle1 (TMP_Region, <span class="number">220.387</span>, <span class="number">397.37</span>, <span class="number">298.844</span>, <span class="number">421.63</span>)</span><br><span class="line">union2 (ROI_0, TMP_Region, ROI_0)</span><br><span class="line">gen_rectangle1 (TMP_Region, <span class="number">291.602</span>, <span class="number">399.311</span>, <span class="number">303.672</span>, <span class="number">421.63</span>)</span><br><span class="line">union2 (ROI_0, TMP_Region, ROI_0)</span><br><span class="line">gen_rectangle1 (TMP_Region, <span class="number">313.328</span>, <span class="number">404.163</span>, <span class="number">616.293</span>, <span class="number">418.719</span>)</span><br><span class="line">union2 (ROI_0, TMP_Region, ROI_0)</span><br><span class="line">paint_region (ROI_0, ImageFFT, ImageResult, <span class="number">0</span>, <span class="string">&#x27;fill&#x27;</span>)</span><br><span class="line"></span><br><span class="line">*傅里叶反变换</span><br><span class="line">fft_image_inv (ImageResult, ImageFFTInv)</span><br></pre></td></tr></table></figure><h3 id="④转为功率图"><a href="#④转为功率图" class="headerlink" title="④转为功率图"></a>④转为功率图</h3><p>转为功率图之前</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240721145430944.png" alt="image-20240721145430944"></p><p>转为功率图之后</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240721145509730.png" alt="image-20240721145509730"></p><p>例程：<code>remove_textture_fft.hdev</code></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">dev_update_off ()</span><br><span class="line">dev_close_window ()</span><br><span class="line">Scale := [<span class="number">1.0</span>,<span class="number">.65</span>]</span><br><span class="line">MinGray := [<span class="number">50</span>,<span class="number">100</span>]</span><br><span class="line"><span class="keyword">for</span> Index := <span class="number">0</span> to <span class="number">1</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">    * </span><br><span class="line">    * <span class="function">Read <span class="keyword">and</span> display the image</span></span><br><span class="line"><span class="function">    <span class="title">read_image</span> (<span class="params">Image, <span class="string">&#x27;plan_&#x27;</span> + (Index + <span class="number">1</span></span>)$&#x27;02&#x27;)</span></span><br><span class="line"><span class="function">    <span class="title">get_image_size</span> (<span class="params">Image, Width, Height</span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_open_window</span> (<span class="params"><span class="number">0</span>, <span class="number">0</span>, Width * Scale[Index], Height * Scale[Index], <span class="string">&#x27;black&#x27;</span>, WindowHandle</span>)</span></span><br><span class="line"><span class="function">    <span class="title">set_display_font</span> (<span class="params">WindowHandle, <span class="number">14</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_set_part</span> (<span class="params"><span class="number">0</span>, <span class="number">0</span>, Height - <span class="number">1</span>, Width - <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">Image</span>)</span></span><br><span class="line"><span class="function">    <span class="title">disp_message</span> (<span class="params">WindowHandle, <span class="string">&#x27;Original image&#x27;</span>, <span class="string">&#x27;image&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    * </span></span><br><span class="line"><span class="function">    * Perform fft <span class="keyword">and</span> display spectrum</span></span><br><span class="line"><span class="function">    <span class="title">optimize_fft_speed</span> (<span class="params">Width, Height, <span class="string">&#x27;standard&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    * </span></span><br><span class="line"><span class="function">    * We used &#x27;fft_generic&#x27; &#x27;sqrt&#x27; <span class="keyword">and</span> &#x27;dc_center&#x27; mainly</span></span><br><span class="line"><span class="function">    * <span class="keyword">for</span> visualization purposes.</span></span><br><span class="line"><span class="function">    * To speed up the program, rft_generic should be used</span>;</span><br><span class="line">    * but of course, the peak detection algorithm has to be</span><br><span class="line">    * adjusted <span class="keyword">in</span> <span class="keyword">this</span> <span class="keyword">case</span>.</span><br><span class="line">    fft_generic (Image, ImageFFT, <span class="string">&#x27;to_freq&#x27;</span>, <span class="number">-1</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;dc_center&#x27;</span>, <span class="string">&#x27;complex&#x27;</span>)</span><br><span class="line">    dev_open_window (<span class="number">0</span>, Width * Scale[Index] + <span class="number">7</span>, Width * Scale[Index], Height * Scale[Index], <span class="string">&#x27;black&#x27;</span>, WindowHandle1)</span><br><span class="line">    dev_set_color (<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    dev_set_draw (<span class="string">&#x27;margin&#x27;</span>)</span><br><span class="line">    set_display_font (WindowHandle1, <span class="number">14</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span>)</span><br><span class="line">    dev_set_part (<span class="number">0</span>, <span class="number">0</span>, Height - <span class="number">1</span>, Width - <span class="number">1</span>)</span><br><span class="line">    dev_display (ImageFFT)</span><br><span class="line">    disp_message (WindowHandle1, <span class="string">&#x27;Fourier spectrum&#x27;</span>, <span class="string">&#x27;image&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">    disp_cont_message (WindowHandle1, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span>)</span><br><span class="line">    stop ()</span><br><span class="line">    * </span><br><span class="line">    * Detect the eight most significant peaks <span class="keyword">in</span> the spectrum</span><br><span class="line">    *重点函数</span><br><span class="line">    power_real (ImageFFT, PowerSpectrum)</span><br><span class="line">    binomial_filter (PowerSpectrum, ImageSmooth, <span class="number">9</span>, <span class="number">9</span>)</span><br><span class="line">    threshold (ImageSmooth, Region, MinGray[Index], <span class="number">100000</span>)</span><br><span class="line">    connection (Region, ConnectedRegions)</span><br><span class="line">    select_shape (ConnectedRegions, SelectedRegions, <span class="string">&#x27;area&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="number">5</span>, <span class="number">200</span>)</span><br><span class="line">    union1 (SelectedRegions, RegionUnion)</span><br><span class="line">    reduce_domain (ImageSmooth, RegionUnion, ImageReduced)</span><br><span class="line">    local_max (ImageReduced, LocalMaxima)</span><br><span class="line">    * </span><br><span class="line">    * Next, detect peaks one octave higher, i.e., at twice</span><br><span class="line">    * <span class="function">the frequency of the most significant peaks</span></span><br><span class="line"><span class="function">    <span class="title">shape_trans</span> (<span class="params">LocalMaxima, RegionTrans, <span class="string">&#x27;convex&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    * Construct ROI band at twice the frequency</span></span><br><span class="line"><span class="function">    <span class="title">hom_mat2d_identity</span> (<span class="params">HomMat2DIdentity</span>)</span></span><br><span class="line"><span class="function">    <span class="title">hom_mat2d_scale</span> (<span class="params">HomMat2DIdentity, <span class="number">2.1</span>, <span class="number">2.1</span>, Height / <span class="number">2</span>, Width / <span class="number">2</span>, HomMat2DScale</span>)</span></span><br><span class="line"><span class="function">    <span class="title">affine_trans_region</span> (<span class="params">RegionTrans, RegionTrans1, HomMat2DScale, <span class="string">&#x27;nearest_neighbor&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">hom_mat2d_scale</span> (<span class="params">HomMat2DIdentity, <span class="number">1.9</span>, <span class="number">1.9</span>, Height / <span class="number">2</span>, Width / <span class="number">2</span>, HomMat2DScale</span>)</span></span><br><span class="line"><span class="function">    <span class="title">affine_trans_region</span> (<span class="params">RegionTrans, RegionTrans2, HomMat2DScale, <span class="string">&#x27;nearest_neighbor&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">difference</span> (<span class="params">RegionTrans1, RegionTrans2, RegionDifference</span>)</span></span><br><span class="line"><span class="function">    * Extract the peaks at twice the frequency</span></span><br><span class="line"><span class="function">    <span class="title">reduce_domain</span> (<span class="params">ImageSmooth, RegionDifference, ImageReduced</span>)</span></span><br><span class="line"><span class="function">    <span class="title">threshold</span> (<span class="params">ImageReduced, Region, <span class="number">15</span>, <span class="number">100000</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">reduce_domain</span> (<span class="params">ImageSmooth, Region, ImageReduced</span>)</span></span><br><span class="line"><span class="function">    <span class="title">local_max</span> (<span class="params">ImageReduced, LocalMaxima2</span>)</span></span><br><span class="line"><span class="function">    * </span></span><br><span class="line"><span class="function">    * Merge the peaks of both octaves <span class="keyword">and</span> enlarge them to</span></span><br><span class="line"><span class="function">    * integrate the relevant frequencies <span class="keyword">into</span> the filter</span></span><br><span class="line"><span class="function">    <span class="title">union2</span> (<span class="params">LocalMaxima, LocalMaxima2, RegionUnion</span>)</span></span><br><span class="line"><span class="function">    <span class="title">dilation_circle</span> (<span class="params">RegionUnion, RegionDilation, <span class="number">15.5</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">paint_region</span> (<span class="params">RegionDilation, ImageFFT, ImageFFTFiltered, <span class="number">0</span>, <span class="string">&#x27;fill&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">ImageFFT</span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">RegionDilation</span>)</span></span><br><span class="line"><span class="function">    <span class="title">disp_message</span> (<span class="params">WindowHandle1, <span class="string">&#x27;Frequencies of the\nbackground texture&#x27;</span>, <span class="string">&#x27;image&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">disp_cont_message</span> (<span class="params">WindowHandle1, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">stop</span> ()</span></span><br><span class="line"><span class="function">    * </span></span><br><span class="line"><span class="function">    * Apply the filter <span class="keyword">and</span> display the results</span></span><br><span class="line"><span class="function">    <span class="title">fft_generic</span> (<span class="params">ImageFFTFiltered, ImageFiltered, <span class="string">&#x27;from_freq&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;dc_center&#x27;</span>, <span class="string">&#x27;byte&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">ImageFiltered</span>)</span></span><br><span class="line"><span class="function">    <span class="title">disp_message</span> (<span class="params">WindowHandle1, <span class="string">&#x27;Filtered image&#x27;</span>, <span class="string">&#x27;image&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    * </span></span><br><span class="line"><span class="function">    <span class="title">dev_open_window</span> (<span class="params"><span class="number">0</span>, <span class="number">2</span> * (Width * Scale[Index]</span>) + 14, Width * Scale[Index], Height * Scale[Index], &#x27;black&#x27;, WindowHandle2)</span></span><br><span class="line"><span class="function">    <span class="title">set_display_font</span> (<span class="params">WindowHandle2, <span class="number">14</span>, <span class="string">&#x27;mono&#x27;</span>, <span class="string">&#x27;true&#x27;</span>, <span class="string">&#x27;false&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_set_part</span> (<span class="params"><span class="number">0</span>, <span class="number">0</span>, Height - <span class="number">1</span>, Width - <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">sub_image</span> (<span class="params">Image, ImageFiltered, ImageTexture, <span class="number">1</span>, <span class="number">128</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">dev_display</span> (<span class="params">ImageTexture</span>)</span></span><br><span class="line"><span class="function">    <span class="title">disp_message</span> (<span class="params">WindowHandle2, <span class="string">&#x27;Removed texture&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> (<span class="params">Index &lt; <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">disp_cont_message</span> (<span class="params">WindowHandle2, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;true&#x27;</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">stop</span> ()</span></span><br><span class="line"><span class="function">        <span class="title">dev_close_window</span> ()</span></span><br><span class="line"><span class="function">        <span class="title">dev_close_window</span> ()</span></span><br><span class="line"><span class="function">        <span class="title">dev_close_window</span> ()</span></span><br><span class="line"><span class="function">    endif</span></span><br><span class="line"><span class="function">endfor</span></span><br></pre></td></tr></table></figure><h2 id="39、标定助手进行标定"><a href="#39、标定助手进行标定" class="headerlink" title="39、标定助手进行标定"></a>39、标定助手进行标定</h2><h3 id="创建描述文件"><a href="#创建描述文件" class="headerlink" title="创建描述文件"></a>创建描述文件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*用于生成校准板描述文件和相应的PostScript文件的算子</span><br><span class="line"><span class="built_in">gen_caltab</span>( : : XNum, YNum, MarkDist, DiameterRatio, CalPlateDescr, CalPlatePSFile : )</span><br><span class="line">    </span><br><span class="line">XNum（输入控制）：校准板在x方向上的标记数量，默认值为<span class="number">7</span>。</span><br><span class="line">YNum（输入控制）：校准板在y方向上的标记数量，默认值为<span class="number">7</span>。</span><br><span class="line">MarkDist（输入控制）：标记之间的距离（以米为单位），默认值为<span class="number">0.0125</span>。</span><br><span class="line">DiameterRatio（输入控制）：标记直径与标记距离的比率，默认值为<span class="number">0.5</span>。</span><br><span class="line">CalPlateDescr（输入控制）：校准板描述文件的文件名，默认为<span class="string">&#x27;caltab.descr&#x27;</span>。</span><br><span class="line">CalPlatePSFile（输入控制）：PostScript文件的文件名，默认为<span class="string">&#x27;caltab.ps&#x27;</span>。</span><br></pre></td></tr></table></figure><h3 id="标定助手"><a href="#标定助手" class="headerlink" title="标定助手"></a>标定助手</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240722110943149.png" alt="image-20240722110943149"></p><h3 id="标定过程"><a href="#标定过程" class="headerlink" title="标定过程"></a>标定过程</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240722111747747.png" alt="image-20240722111747747"></p><h3 id="得到的结果"><a href="#得到的结果" class="headerlink" title="得到的结果"></a>得到的结果</h3><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240722112200664.png" alt="image-20240722112200664"></p><h2 id="40、单相机标定—畸形矫正"><a href="#40、单相机标定—畸形矫正" class="headerlink" title="40、单相机标定—畸形矫正"></a>40、单相机标定—畸形矫正</h2><p>标定完成后插入代码中的插入数据得到两个参数</p><p><strong>CameraParameters</strong>（内参数） 和 <strong>CameraPose</strong>（外参数）</p><p>一般只会使用内参数</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/image-20240722120754472.png" alt="image-20240722120754472"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* 根据指定的径向畸变系数来确定新的相机参数</span><br><span class="line">* CamParamIn是得到的初始参数</span><br><span class="line">change_radial_distortion_cam_par( : : Mode, CamParamIn, DistortionCoeffs : CamParamOut)</span><br><span class="line"></span><br><span class="line">* 根据内部相机参数CamParamIn（原始参数）和计算得到的CamParamOut（新参数）计算与径向畸变变化相对应的图像映射</span><br><span class="line">gen_radial_distortion_map( : Map : CamParamIn, CamParamOut, MapType : )</span><br><span class="line"></span><br><span class="line">*使用一个任意的转换Map来转换图像<span class="function">Image</span></span><br><span class="line"><span class="function"><span class="title">map_image</span>(<span class="params">Image, Map : ImageMapped : : </span>)</span></span><br></pre></td></tr></table></figure><h2 id="41、VS一些操作"><a href="#41、VS一些操作" class="headerlink" title="41、VS一些操作"></a>41、VS一些操作</h2><h3 id="①上锁"><a href="#①上锁" class="headerlink" title="①上锁"></a>①上锁</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 上锁</span></span><br><span class="line">::<span class="built_in">EnableWindow</span>(<span class="built_in">GetDlgItem</span>(IDC_MATH)-&gt;<span class="built_in">GetSafeHwnd</span>(), FALSE);</span><br><span class="line"><span class="comment">// 解锁</span></span><br><span class="line">::<span class="built_in">EnableWindow</span>(<span class="built_in">GetDlgItem</span>(IDC_DRAW)-&gt;<span class="built_in">GetSafeHwnd</span>(), TRUE);</span><br></pre></td></tr></table></figure><h3 id="②滑动条的设置"><a href="#②滑动条的设置" class="headerlink" title="②滑动条的设置"></a>②滑动条的设置</h3><p>先增加控件</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/ad8dfa3f370a640bc6980a5716129d06.png" alt="img"></p><p>再进行设置（在 <code>OnInitDialog()</code> 进行设置 ）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置范围</span></span><br><span class="line">m_yuzhi_cabin.<span class="built_in">SetRange</span>(<span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line"><span class="comment">//设置初始位置</span></span><br><span class="line">m_yuzhi_cabin.<span class="built_in">SetPos</span>(<span class="number">141</span>);</span><br><span class="line"><span class="comment">//设置显示刻度的间隔</span></span><br><span class="line">m_yuzhi_cabin.<span class="built_in">SetTicFreq</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="③绑定窗口设置（在-OnInitDialog-进行设置-）"><a href="#③绑定窗口设置（在-OnInitDialog-进行设置-）" class="headerlink" title="③绑定窗口设置（在 OnInitDialog() 进行设置 ）"></a>③绑定窗口设置（在 <code>OnInitDialog()</code> 进行设置 ）</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启第一个窗口---hv_WindowHandle</span></span><br><span class="line">HWND hwnd;</span><br><span class="line">CRect rect;</span><br><span class="line"><span class="built_in">GetDlgItem</span>(IDC_IMAGE1)-&gt;<span class="built_in">GetWindowRect</span>(&amp;rect);</span><br><span class="line">hwnd = <span class="built_in">GetDlgItem</span>(IDC_IMAGE1)-&gt;m_hWnd;</span><br><span class="line">Hlong WWindowID = (Hlong)hwnd;</span><br><span class="line"><span class="built_in">OpenWindow</span>(<span class="number">0</span>, <span class="number">0</span>, rect.<span class="built_in">Width</span>(), rect.<span class="built_in">Height</span>(), WWindowID, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, &amp;hv_WindowHandle);</span><br><span class="line"><span class="comment">//SetWindowAttr(&quot;background_color&quot;, &quot;white&quot;);</span></span><br><span class="line">HDevWindowStack::<span class="built_in">Push</span>(hv_WindowHandle);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启第二个窗口------hv_WindowHandle1</span></span><br><span class="line">HWND hwnd1;</span><br><span class="line">CRect rect1;</span><br><span class="line"><span class="built_in">GetDlgItem</span>(IDC_IMAGE2)-&gt;<span class="built_in">GetWindowRect</span>(&amp;rect1);</span><br><span class="line">hwnd1 = <span class="built_in">GetDlgItem</span>(IDC_IMAGE2)-&gt;m_hWnd;</span><br><span class="line">Hlong WWindowID1 = (Hlong)hwnd1;</span><br><span class="line"><span class="built_in">OpenWindow</span>(<span class="number">0</span>, <span class="number">0</span>, rect1.<span class="built_in">Width</span>(), rect1.<span class="built_in">Height</span>(), WWindowID1, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, &amp;hv_WindowHandle1);</span><br><span class="line"><span class="built_in">SetWindowAttr</span>(<span class="string">&quot;background_color&quot;</span>, <span class="string">&quot;black&quot;</span>);</span><br><span class="line">HDevWindowStack::<span class="built_in">Push</span>(hv_WindowHandle1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//激活其中某个窗口</span></span><br><span class="line">HDevWindowStack::<span class="built_in">SetActive</span>(hv_WindowHandle);</span><br></pre></td></tr></table></figure><h3 id="④列表控件ListControl"><a href="#④列表控件ListControl" class="headerlink" title="④列表控件ListControl"></a>④列表控件ListControl</h3><p>添加ListControl</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/4e181a6e6f4d40432aa3b5c2bb68c752.png" alt="img"></p><p>设置view变量 让ListControl竖着或者横着</p><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/9d4abf9d7433cace21c978147532c46e.png" alt="img"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CString head[] = &#123; <span class="built_in">TEXT</span>(<span class="string">&quot;姓名&quot;</span>),<span class="built_in">TEXT</span>(<span class="string">&quot;年龄&quot;</span>),<span class="built_in">TEXT</span>(<span class="string">&quot;性别&quot;</span>) &#125;;</span><br><span class="line">CString name[] = &#123; <span class="built_in">TEXT</span>(<span class="string">&quot;小赵&quot;</span>),<span class="built_in">TEXT</span>(<span class="string">&quot;小凡&quot;</span>),<span class="built_in">TEXT</span>(<span class="string">&quot;小夏&quot;</span>),</span><br><span class="line">                  <span class="built_in">TEXT</span>(<span class="string">&quot;小川&quot;</span>),<span class="built_in">TEXT</span>(<span class="string">&quot;小卉&quot;</span>),<span class="built_in">TEXT</span>(<span class="string">&quot;小余&quot;</span>) &#125;;</span><br><span class="line"><span class="comment">//设置主题</span></span><br><span class="line">m_List.<span class="built_in">SetExtendedStyle</span>(LVS_EX_FULLROWSELECT | LVS_EX_GRIDLINES | LVS_EX_DOUBLEBUFFER);</span><br><span class="line"><span class="comment">//插入列标题</span></span><br><span class="line">m_List.<span class="built_in">InsertColumn</span>(<span class="number">0</span>, head[<span class="number">0</span>], LVCFMT_LEFT, <span class="number">100</span>);</span><br><span class="line">m_List.<span class="built_in">InsertColumn</span>(<span class="number">1</span>, head[<span class="number">1</span>], LVCFMT_LEFT, <span class="number">100</span>);</span><br><span class="line">m_List.<span class="built_in">InsertColumn</span>(<span class="number">2</span>, head[<span class="number">2</span>], LVCFMT_LEFT, <span class="number">100</span>);</span><br><span class="line"><span class="comment">//插入正文内容</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//确定行数</span></span><br><span class="line">    m_List.<span class="built_in">InsertItem</span>(i, name[i]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置列内容</span></span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">23</span>;</span><br><span class="line">    m_List.<span class="built_in">SetItemText</span>(i, ++j, <span class="built_in">TEXT</span>(<span class="string">&quot;18&quot;</span>));</span><br><span class="line">    m_List.<span class="built_in">SetItemText</span>(i, ++j, <span class="built_in">TEXT</span>(<span class="string">&quot;女&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="/2024/07/24/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89/97c89826774839f4b52eb18f1bff503a.png" alt="img"></p><h2 id="42、VS与Halcon变量的转换"><a href="#42、VS与Halcon变量的转换" class="headerlink" title="42、VS与Halcon变量的转换"></a>42、VS与Halcon变量的转换</h2><h3 id="①-Halcon中的HTuple-→-VS-数据类型"><a href="#①-Halcon中的HTuple-→-VS-数据类型" class="headerlink" title="① Halcon中的HTuple → VS 数据类型"></a>① Halcon中的HTuple → VS 数据类型</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTuple hTuple = <span class="number">1234</span>;</span><br><span class="line"><span class="type">int</span> i = hTuple[<span class="number">0</span>].<span class="built_in">I</span>(); <span class="comment">// i=1234</span></span><br><span class="line"><span class="type">long</span> l = hTuple[<span class="number">0</span>].<span class="built_in">L</span>(); <span class="comment">// l=1234</span></span><br><span class="line"><span class="type">long</span> lNumber = hTuple.<span class="built_in">Num</span>(); <span class="comment">// lNumber=1，数据个数</span></span><br><span class="line"><span class="type">double</span> d = hTuple[<span class="number">0</span>].<span class="built_in">D</span>(); <span class="comment">// d=1234.0000</span></span><br><span class="line"></span><br><span class="line">hTuple = “<span class="number">1234</span>”;</span><br><span class="line">CString strBuffer = hTuple[<span class="number">0</span>].<span class="built_in">S</span>(); <span class="comment">// strBuffer=“1234”</span></span><br></pre></td></tr></table></figure><h3 id="②VS-数据类型-→-Halcon中的数据类型"><a href="#②VS-数据类型-→-Halcon中的数据类型" class="headerlink" title="②VS 数据类型 → Halcon中的数据类型"></a>②VS 数据类型 → Halcon中的数据类型</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> ii = <span class="number">1234</span>;</span><br><span class="line"><span class="type">double</span> dd = <span class="number">1234.1234</span>;</span><br><span class="line">CString strTemp = “Halcon”;</span><br><span class="line"></span><br><span class="line">HTuple hTuple2;</span><br><span class="line">hTuple2[<span class="number">0</span>] = ii; <span class="comment">// hTuple2[0].I() = 1234</span></span><br><span class="line">hTuple2[<span class="number">1</span>] = dd; <span class="comment">// hTuple2[1].D() = 1234.1234</span></span><br><span class="line">hTuple2[<span class="number">2</span>] = strTemp.<span class="built_in">GetBuffer</span>(); <span class="comment">// hTuple2[2].S() = “Halcon”</span></span><br><span class="line"></span><br><span class="line">i = hTuple2[<span class="number">0</span>].<span class="built_in">I</span>(); <span class="comment">// i = 1234</span></span><br><span class="line">d = hTuple2[<span class="number">1</span>].<span class="built_in">D</span>(); <span class="comment">// d = 1234.1234</span></span><br><span class="line">str = hTuple2[<span class="number">2</span>].<span class="built_in">S</span>(); <span class="comment">// str = “Halcon”</span></span><br><span class="line">lNumber = hTuple2.<span class="built_in">Num</span>(); <span class="comment">// lNumber = 3，数据个数</span></span><br></pre></td></tr></table></figure><h3 id="③如果Halcon的数据类型中有多个数据"><a href="#③如果Halcon的数据类型中有多个数据" class="headerlink" title="③如果Halcon的数据类型中有多个数据"></a>③如果Halcon的数据类型中有多个数据</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义vs中的CString类型</span></span><br><span class="line">CString str1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将HTuple → VS 中 double类型</span></span><br><span class="line"><span class="type">double</span> m_mianji = hv_UserArea[i].<span class="built_in">D</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//CString 类型 的格式化</span></span><br><span class="line">str1.<span class="built_in">Format</span>(<span class="string">&quot;%0.2f&quot;</span>, m_mianji);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OS--经典同步与互斥问题</title>
      <link href="/2024/06/22/OS-%E7%BB%8F%E5%85%B8%E5%90%8C%E6%AD%A5%E4%B8%8E%E4%BA%92%E6%96%A5%E9%97%AE%E9%A2%98/"/>
      <url>/2024/06/22/OS-%E7%BB%8F%E5%85%B8%E5%90%8C%E6%AD%A5%E4%B8%8E%E4%BA%92%E6%96%A5%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="操作系统–经典进程同步与互斥问题"><a href="#操作系统–经典进程同步与互斥问题" class="headerlink" title="操作系统–经典进程同步与互斥问题"></a>操作系统–经典进程同步与互斥问题</h1><p>我以下所写的算法都是基于我所学习的书籍《计算机操作系统–第4版》的第84页 所写</p><p><strong>仅供参考 如有错误 烦请指出</strong></p><h2 id="1-生产者消费者算法"><a href="#1-生产者消费者算法" class="headerlink" title="1.生产者消费者算法"></a>1.生产者消费者算法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">semaphore mutex = <span class="number">1</span>; <span class="comment">// 用于互斥访问</span></span><br><span class="line">semaphore empty = n; <span class="comment">//空闲区的数量 </span></span><br><span class="line">semaphore full = <span class="number">0</span>;  <span class="comment">//有数据的缓冲区数量（也就是产品的数量）</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 生产者()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       ---生产产品---</span><br><span class="line">       P(empty); <span class="comment">// 生产完产品需要申请空闲区 如果没有空闲区则需要等待</span></span><br><span class="line">       P(mutex);</span><br><span class="line">       ---放入缓冲区---</span><br><span class="line">       V(mutex);</span><br><span class="line">       V(full);  <span class="comment">// 缓冲区新增一个产品</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 消费者()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       P(full); <span class="comment">// 需要申请产品 如果没有产品则需要等待</span></span><br><span class="line">       P(mutex);</span><br><span class="line">       ---拿出产品---</span><br><span class="line">       V(mutex);</span><br><span class="line">       V(empty);   <span class="comment">// 使用完产品则空出一个空闲区</span></span><br><span class="line">       ---使用产品---</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-读者写者问题"><a href="#2-读者写者问题" class="headerlink" title="2.读者写者问题"></a>2.读者写者问题</h2><h3 id="①-读者优先"><a href="#①-读者优先" class="headerlink" title="① 读者优先"></a>① 读者优先</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">semaphore Rmutex = <span class="number">1</span>; <span class="comment">// 用于实现对互斥变量Rcount的互斥访问访问</span></span><br><span class="line">semaphore Wmutex = <span class="number">1</span>; <span class="comment">// 用于实现对临界资源的互斥访问访问</span></span><br><span class="line"><span class="type">int</span> Rcount = <span class="number">0</span>; <span class="comment">// 记录正在读取数据的读者的数量</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 读者()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      P(Rmutex);</span><br><span class="line">      <span class="keyword">if</span>(Rcount == <span class="number">0</span>) P(Wmutex);</span><br><span class="line">      Rcount++;</span><br><span class="line">      V(Rmutex);</span><br><span class="line">      ---读操作---</span><br><span class="line">      P(Rmutex);</span><br><span class="line">      Rcount--;</span><br><span class="line">      <span class="keyword">if</span>(Rcount == <span class="number">0</span>) V(Wmutex);</span><br><span class="line">      V(Rmutex);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 写者()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">  &#123;</span><br><span class="line">     P(Wmutex);</span><br><span class="line">     ---写操作---</span><br><span class="line">     V(Wmutex);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="②读写公平（先来先服务）"><a href="#②读写公平（先来先服务）" class="headerlink" title="②读写公平（先来先服务）"></a>②读写公平（先来先服务）</h3><p>这个算法是在读者优先的基础上进行修改得来的</p><p>（增加一个互斥变量mutex 实现读写公平 实现了先来先服务）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">semaphore Rmutex = <span class="number">1</span>; <span class="comment">// 用于实现对互斥变量Rcount的互斥访问访问</span></span><br><span class="line">semaphore Wmutex = <span class="number">1</span>; <span class="comment">// 用于实现对临界资源的互斥访问访问</span></span><br><span class="line">semaphore mutex = <span class="number">1</span>; </span><br><span class="line"><span class="type">int</span> Rcount = <span class="number">0</span>; <span class="comment">// 记录正在读取数据的读者的数量</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 读者()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      P(mutex);</span><br><span class="line">      P(Rmutex);</span><br><span class="line">      <span class="keyword">if</span>(Rcount == <span class="number">0</span>) P(Wmutex);</span><br><span class="line">      Rcount++;</span><br><span class="line">      V(Rmutex);</span><br><span class="line">      V(mutex;)</span><br><span class="line">      ---读操作---</span><br><span class="line">      P(Rmutex);</span><br><span class="line">      Rcount--;</span><br><span class="line">      <span class="keyword">if</span>(Rcount == <span class="number">0</span>) V(Wmutex);</span><br><span class="line">      V(Rmutex);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 写者()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">  &#123;</span><br><span class="line">     P(mutex);</span><br><span class="line">     P(Wmutex);</span><br><span class="line">     ---写操作---</span><br><span class="line">     V(Wmutex);</span><br><span class="line">     V(mutex);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="③写者优先"><a href="#③写者优先" class="headerlink" title="③写者优先"></a>③写者优先</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">semaphore read = <span class="number">1</span>;</span><br><span class="line">semaphore mutex = <span class="number">1</span>; <span class="comment">// 用于实现对临界资源的互斥访问访问</span></span><br><span class="line">semaphore RC = <span class="number">1</span>; <span class="comment">// 用于实现对互斥变量Rcount的互斥访问访问</span></span><br><span class="line">semaphore WC = <span class="number">1</span>; <span class="comment">// 用于实现对互斥变量Wcount的互斥访问访问</span></span><br><span class="line"><span class="type">int</span> Wcount = <span class="number">0</span>; <span class="comment">// 记录正在写数据的写者的数量</span></span><br><span class="line"><span class="type">int</span> Rcount = <span class="number">0</span>; <span class="comment">// 记录正在读取数据的读者的数量</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 读者()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P(read);</span><br><span class="line">        P(RC);</span><br><span class="line">        <span class="keyword">if</span>(Rcount == <span class="number">0</span>) P(mutex);</span><br><span class="line">        Rcount++;</span><br><span class="line">        V(RC);</span><br><span class="line">        V(read);</span><br><span class="line">        ---读操作---</span><br><span class="line">        P(RC);</span><br><span class="line">        Rcount--;</span><br><span class="line">        <span class="keyword">if</span>(Rcount == <span class="number">0</span>) V(mutex);</span><br><span class="line">        V(RC);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 写者()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P(WC);</span><br><span class="line">        <span class="keyword">if</span>(Wcount == <span class="number">0</span>) P(read);</span><br><span class="line">        Wcount++;</span><br><span class="line">        V(WC);</span><br><span class="line">        P(mutex);</span><br><span class="line">        ---写操作---</span><br><span class="line">        V(mutex);</span><br><span class="line">        P(WC);</span><br><span class="line">        Wcount--;</span><br><span class="line">        <span class="keyword">if</span>(Wcount == <span class="number">0</span>) V(read);</span><br><span class="line">        V(WC);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-哲学家进餐问题"><a href="#3-哲学家进餐问题" class="headerlink" title="3.哲学家进餐问题"></a>3.哲学家进餐问题</h2><h3 id="①课本上的算法（会发生死锁）"><a href="#①课本上的算法（会发生死锁）" class="headerlink" title="①课本上的算法（会发生死锁）"></a>①课本上的算法（会发生死锁）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">semaphore chopstick[<span class="number">5</span>] = &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 哲学家()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P(chopstick[i]); <span class="comment">//申请左边的筷子</span></span><br><span class="line">        P(chopstick[i + <span class="number">1</span>]);<span class="comment">//申请右边的筷子</span></span><br><span class="line">        ---进餐---</span><br><span class="line">        V(chopstick[i]);</span><br><span class="line">        V(chopstick[i + <span class="number">1</span>]);</span><br><span class="line">        ---思考---</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="②改进后-只允许一个人吃饭"><a href="#②改进后-只允许一个人吃饭" class="headerlink" title="②改进后(只允许一个人吃饭)"></a>②改进后(只允许一个人吃饭)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">semaphore chopstick[<span class="number">5</span>] = &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">semaphore mutex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 哲学家()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        P(mutex);</span><br><span class="line">        P(chopstick[i]); <span class="comment">//申请左边的筷子</span></span><br><span class="line">        P(chopstick[i + <span class="number">1</span>]);<span class="comment">//申请右边的筷子</span></span><br><span class="line">        V(mutex);</span><br><span class="line">        ---进餐---</span><br><span class="line">        V(chopstick[i]);</span><br><span class="line">        V(chopstick[i + <span class="number">1</span>]);</span><br><span class="line">        ---思考---</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-打瞌睡的理发师问题"><a href="#4-打瞌睡的理发师问题" class="headerlink" title="4.打瞌睡的理发师问题"></a>4.打瞌睡的理发师问题</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> CHAIRS = 5;</span></span><br><span class="line">semaphore customer = <span class="number">0</span>; <span class="comment">//等待理发师的顾客数</span></span><br><span class="line">semaphore barners = <span class="number">0</span>; <span class="comment">//等待顾客的理发师</span></span><br><span class="line">semaphore mutex = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> waiting = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 理发师()</span><br><span class="line">&#123;</span><br><span class="line">    P(customer);</span><br><span class="line">    P(mutex);</span><br><span class="line">    waiting--;</span><br><span class="line">    V(barners);</span><br><span class="line">    V(mutex);</span><br><span class="line">    cut_hair();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> 顾客()</span><br><span class="line">&#123;</span><br><span class="line">    P(mutex);</span><br><span class="line">    <span class="keyword">if</span>(waiting &lt; CHAIRS)</span><br><span class="line">    &#123;</span><br><span class="line">        waiting++;</span><br><span class="line">        V(customers);</span><br><span class="line">        V(mutex);</span><br><span class="line">        P(barners);</span><br><span class="line">        get_haircut();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        V(mutex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-补充：103页-售票大厅"><a href="#5-补充：103页-售票大厅" class="headerlink" title="5.补充：103页 售票大厅"></a>5.补充：103页 售票大厅</h2><p>购票者的工作过程</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">semaphore empty = <span class="number">200</span>;</span><br><span class="line">semaphore wait = <span class="number">0</span>;</span><br><span class="line">semaphore mutex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">wait</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    P(empty);</span><br><span class="line">    V(wait);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">buy</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    P(wait);</span><br><span class="line">    P(mutex);</span><br><span class="line">    ---买票---</span><br><span class="line">    V(mutex);</span><br><span class="line">    V(empty);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb开发---图书管理系统</title>
      <link href="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/"/>
      <url>/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="一、设计题目"><a href="#一、设计题目" class="headerlink" title="一、设计题目"></a>一、设计题目</h1><p>基于SpringBoot和Vue2的图书管理系统</p><h1 id="二、-设计目的"><a href="#二、-设计目的" class="headerlink" title="二、 设计目的"></a>二、 设计目的</h1><p>当今世界是信息化的时代，随着互联网的飞速发展，人们对于服务的便利性有着较高的要求，各行各业都被网络化的社会所影响。在信息化的巨大浪潮中，对于传统图书管理方式也需要得到相应改变，传统纸质图书管理方式给图书馆和读者提供了许多不便，同时也需要消耗较多的资源。所以近年来，图书管理模式逐渐由传统的手动管理向基于互联网的系统化管理发展。</p><p>基于Spring Boot的图书管理系统是一个通过对信息化进步的研究，旨在解决图书馆图书管理等问题的系统。该系统主要实现以下功能：用户登录注册：包括读者和图书馆管理员的注册和登录功能；图书管理：包括图书的分类管理、图书信息的录入和编辑、图书状态的更新等；借阅管理：包括读者借书、还书、续借等操作，以及图书馆管理员对借阅情况的管理；图书查询：提供读者和管理员对图书进行检索、查询和浏览的功能；系统管理：包括对用户权限的管理、系统设置的配置等功能。</p><p>该系统采用前后端分离模式进行开发，前端使用Vue2框架进行开发，后端使用Spring Boot框架作为服务器端，利用Mybatis进行数据库操作，通过RESTful API实现前后端的数据交互。</p><h1 id="三、设计原理及方案"><a href="#三、设计原理及方案" class="headerlink" title="三、设计原理及方案"></a>三、设计原理及方案</h1><h2 id="1-使用的软件工具和环境"><a href="#1-使用的软件工具和环境" class="headerlink" title="1 使用的软件工具和环境"></a>1 使用的软件工具和环境</h2><p>Java版本：jdk11</p><p>数据库版本：Mysql 8.0.26</p><p>数据库操作软件：DataGrip</p><p>后端开发工具：Intelij IDEA 2023.1.2</p><p>前端开发工具：Vs Code</p><h2 id="2-需求分析与概要设计"><a href="#2-需求分析与概要设计" class="headerlink" title="2 需求分析与概要设计"></a>2 需求分析与概要设计</h2><h3 id="（一）系统架构设计"><a href="#（一）系统架构设计" class="headerlink" title="（一）系统架构设计"></a>（一）系统架构设计</h3><p>图书管理系统由登录端，管理端、用户端组成（如图1.1所示）。</p><p>采用web技术开发管理系统的优点是开发成本较低，用户使用门槛低。图书管理系统登录端主要实现了下列几个模块，用户登录模块、用户注册模块、用户找回密码模块。管理端主要实现了下列几个模块，图书管理模块、用户管理模块、图书信息可视化分析模块等。用户端作为整个供水系统的核心组件，其内部开发了图书借阅模块，图书还书模块，图书信息可视化分析模块，个人信息模块。</p><p>由于本系统需管理大量图书信息，因此本系统支持Excel表格数据的导入导出，并且可以通过网络爬虫对相关网站的图书信息进行爬取并进行数据清洗存入数据库。</p><p>基于用户账号安全上的考虑，本系统采用邮箱验证的原则，用户的注册和找回密码必须通过邮箱的验证码验证，保证个人信息的安全性。</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps1-1717733496071-3.jpg" alt="img"> </p><p>图1 图书管理系统架构图</p><h3 id="（二）功能模块设计"><a href="#（二）功能模块设计" class="headerlink" title="（二）功能模块设计"></a>（二）功能模块设计</h3><p>需求分析设计出的系统功能可大致分以下几个模块，如图1.2所示，分别为：</p><ol><li>登录端</li></ol><p>(1) 登录模块：根据数据库的存储信息判断是用户登录还是管理员登录并进入到相应的界面</p><p>(2) 注册用户模块：注册图书管理系统的新用户信息</p><p>(3) 找回密码模块：根据账号、电话号码、邮箱和邮箱验证码可重设密码</p><ol start="2"><li>用户端</li></ol><p>(1) 图书借阅模块：可以查询图书、借阅图书、归还图书</p><p>(2) 个人信息模块：对个人信息进行修改、注销用户、更新个人信息、退出登录</p><p>(3) 图书数据可视化展示模块：可以查看图书出版社信息的图形分析</p><p>(4) 退出模块：退出系统并对相应数据库数据进行修改</p><ol start="3"><li>管理端</li></ol><p>(1) 图书管理模块：可以查询图书信息、添加单本书籍、导入导出书籍数据、更新图书信息、批量删除图书</p><p>(2) 数据可视化化模块：展示图书出版社信息的分布情况</p><p>(3) 用户管理模块：可以更新用户信息、删除用户信息、增加新用户</p><p>(4) 个人信息模块：对个人信息进行修改，注销用户，更新信息</p><p>(5) 退出模块：退出系统并对相应数据库数据进行修改</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps2-1717733496071-4.png" alt="img"> </p><p>图2 图书管理系统模块图</p><h2 id="3-数据库设计"><a href="#3-数据库设计" class="headerlink" title="3 数据库设计"></a>3 数据库设计</h2><p>数据库名称为Java_test，图书管理系统核心表结构设计如下：</p><p>1、图书管理系统相关表设计</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps3-1717733496071-5.jpg" alt="img"> </p><p>图3 图书管理系统数据库的表设计</p><p>表1 books (图书表)</p><table><thead><tr><th>字段名</th><th>字段类型</th><th>字段长度</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>int</td><td>4</td><td>编号</td></tr><tr><td>booknumber</td><td>varchar</td><td>50</td><td>书籍编号–主键</td></tr><tr><td>bookname</td><td>varchar</td><td>50</td><td>书籍名</td></tr><tr><td>writer</td><td>varchar</td><td>50</td><td>作者</td></tr><tr><td>press</td><td>varchar</td><td>50</td><td>价格</td></tr><tr><td>use</td><td>varchar</td><td>50</td><td>0–未被借阅 1–已被借阅</td></tr><tr><td>who_use</td><td>varchar</td><td>50</td><td>借阅书籍的用户名</td></tr><tr><td>use_time</td><td>datetime</td><td>8</td><td>借阅时间</td></tr></tbody></table><p>表2 users (用户表)</p><table><thead><tr><th>字段名</th><th>字段类型</th><th>字段长度</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>int</td><td>4</td><td>编号</td></tr><tr><td>user_name</td><td>char</td><td>20</td><td>用户名</td></tr><tr><td>password</td><td>varchar</td><td>50</td><td>密码</td></tr><tr><td>email</td><td>varchar</td><td>50</td><td>邮箱</td></tr><tr><td>phone_number</td><td>varchar</td><td>50</td><td>电话号码</td></tr><tr><td>is_admin</td><td>varchar</td><td>5</td><td>1–管理员 0–普通用户</td></tr></tbody></table><p>2、图书管理系统ER图设计</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps4-1717733496071-7.png" alt="img"> </p><p>图4 图书管理系统ER图</p><h2 id="4-详细设计和关键问题"><a href="#4-详细设计和关键问题" class="headerlink" title="4 详细设计和关键问题"></a>4 详细设计和关键问题</h2><h3 id="（一）登录模块实现"><a href="#（一）登录模块实现" class="headerlink" title="（一）登录模块实现"></a>（一）登录模块实现</h3><p>登录模块是图书管理系统初始部分，主要需要实现用户登录、注册、找回密码功能。登录采用数据库查询语句，根据用户名和密码查找数据，查询到则登录成功，否则失败，然后进入相应管理员或用户界面；注册用户时，由于用户名唯一，故先检测用户名是否存在，再根据正则表达式匹配密码看是否符合规则；找回密码时，需要接受邮箱验证码并进行匹配，邮箱的验证码功能我采用的是HtmlEmail所实现的，才能重设密码。同时系统设置了验证码功能防止恶意多次发送请求，如图2.1所示。</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps5-1717733496071-8.jpg" alt="img"> </p><p>图5 登录模块实现图</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps6-1717733496071-6.jpg" alt="img"> </p><p>图6 邮箱验证码的发送展示</p><p>邮箱验证码发送的主要代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.utils;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.security.GeneralSecurityException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.mail.Authenticator;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.PasswordAuthentication;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Transport;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.mail.EmailException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.mail.HtmlEmail;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>： BruceYoung</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2023/5/11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings(&#123;&quot;all&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmailTest</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String yzm;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送QQ邮件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">sendEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">        <span class="type">HtmlEmail</span> <span class="variable">send</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HtmlEmail</span>();<span class="comment">//创建一个HtmlEmail实例对象</span></span><br><span class="line">        <span class="comment">// 获取随机验证码</span></span><br><span class="line">        yzm = random1();</span><br><span class="line">        <span class="type">String</span> <span class="variable">resultCode</span> <span class="operator">=</span> yzm;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            send.setHostName(<span class="string">&quot;smtp.qq.com&quot;</span>);</span><br><span class="line">            send.setAuthentication(<span class="string">&quot;2946473607@qq.com&quot;</span>, <span class="string">&quot;yuhdpuxabvdwdhcd&quot;</span>); <span class="comment">//第一个参数是发送者的QQEamil邮箱   第二个参数是刚刚获取的授权码</span></span><br><span class="line"> </span><br><span class="line">            send.setFrom(<span class="string">&quot;2946473607@qq.com&quot;</span>, <span class="string">&quot;名称&quot;</span>);<span class="comment">//发送人的邮箱为自己的，用户名可以随便填  记得是自己的邮箱不是qq</span></span><br><span class="line">send.setSmtpPort(<span class="number">465</span>); <span class="comment">//端口号 可以不开</span></span><br><span class="line">            send.setSSLOnConnect(<span class="literal">true</span>); <span class="comment">//开启SSL加密</span></span><br><span class="line">            send.setCharset(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            send.addTo(email);  <span class="comment">//设置收件人    email为你要发送给谁的邮箱账户</span></span><br><span class="line">            send.setSubject(<span class="string">&quot;From 图书管理系统&quot;</span>); <span class="comment">//邮箱标题</span></span><br><span class="line">            send.setMsg(<span class="string">&quot;【图书管理系统】 您的验证码为:&lt;font color=&#x27;red&#x27; &gt;   &quot;</span> + resultCode + <span class="string">&quot; &lt;/font&gt;，用于QQ邮箱身份验证,请勿泄露和转发。如非本人操作，请忽略此条短信！&quot;</span>); <span class="comment">//Eamil发送的内容</span></span><br><span class="line">            send.send();  <span class="comment">//发送</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (EmailException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> yzm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成6位数  验证码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">random1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">rd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> rd.nextInt(<span class="number">10</span>); <span class="comment">//每次随机出一个数字（0-9）</span></span><br><span class="line">            code = code + r;  <span class="comment">//把每次随机出的数字拼在一起</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(code);</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（二）用户模块实现"><a href="#（二）用户模块实现" class="headerlink" title="（二）用户模块实现"></a>（二）用户模块实现</h3><p>用户模块提供了一系列功能，包括借书、还书、修改个人信息和查看出版社信息的可视化展示。用户可以轻松地浏览图书馆的藏书目录，选择心仪的书籍进行借阅，并在进行图书归还。通过个人信息管理功能，用户能够更新自己的联系方式、修改密码和查看借阅记录，确保账户信息的准确性和安全性。此外用户模块还提供了详细的出版社信息，采用Echart工具使用户能够更直观地了解各大出版社的分布情况。这样不仅有助于用户做出更明智的借阅选择，还能帮助他们发现更多感兴趣的书籍和出版商。</p><p>Echart函数部分展示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateRandomColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> r = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">256</span>); <span class="comment">// 0-255</span></span><br><span class="line">  <span class="keyword">const</span> g = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">256</span>); <span class="comment">// 0-255</span></span><br><span class="line">  <span class="keyword">const</span> b = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">256</span>); <span class="comment">// 0-255</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`rgb(<span class="subst">$&#123;r&#125;</span>, <span class="subst">$&#123;g&#125;</span>, <span class="subst">$&#123;b&#125;</span>)`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="comment">// 这一行后续还需要放置导入代码</span></span><br><span class="line"><span class="keyword">import</span> &#123; use &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/core&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PieChart</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/charts&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">TooltipComponent</span>, <span class="title class_">LegendComponent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/components&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CanvasRenderer</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/renderers&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">use</span>([<span class="title class_">TooltipComponent</span>, <span class="title class_">LegendComponent</span>, <span class="title class_">PieChart</span>, <span class="title class_">CanvasRenderer</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VChart</span>, &#123; <span class="variable constant_">THEME_KEY</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue-echarts&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">VChart</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">provide</span>: &#123;</span><br><span class="line">    <span class="comment">// 主题颜色（white/dark）</span></span><br><span class="line">    [<span class="variable constant_">THEME_KEY</span>]: <span class="string">&quot;while&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> option = <span class="title function_">ref</span>(&#123;</span><br><span class="line">      <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span>,</span><br><span class="line">        <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125;: &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">legend</span>: &#123;</span><br><span class="line">        <span class="attr">data</span>: [</span><br><span class="line">          <span class="comment">// &#x27;Direct&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Marketing&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Search Engine&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Email&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Union Ads&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Video Ads&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Baidu&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Google&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Bing&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Others&#x27;</span></span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;出版社&#x27;</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">          <span class="attr">radius</span>: [<span class="string">&#x27;45%&#x27;</span>, <span class="string">&#x27;60%&#x27;</span>],</span><br><span class="line">          <span class="attr">labelLine</span>: &#123;</span><br><span class="line">            <span class="attr">length</span>: <span class="number">30</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">label</span>: &#123;</span><br><span class="line">            <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a|&#123;a&#125;&#125;&#123;abg|&#125;\n&#123;hr|&#125;\n  &#123;b|&#123;b&#125;：&#125;&#123;c&#125;  &#123;per|&#123;d&#125;%&#125;  &#x27;</span>,</span><br><span class="line">            <span class="attr">backgroundColor</span>: <span class="string">&#x27;#F6F8FC&#x27;</span>,</span><br><span class="line">            <span class="attr">borderColor</span>: <span class="string">&#x27;#8C8D8E&#x27;</span>,</span><br><span class="line">            <span class="attr">borderWidth</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">borderRadius</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">rich</span>: &#123;</span><br><span class="line">              <span class="attr">a</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#6E7079&#x27;</span>,</span><br><span class="line">                <span class="attr">lineHeight</span>: <span class="number">22</span>,</span><br><span class="line">                <span class="attr">align</span>: <span class="string">&#x27;center&#x27;</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">hr</span>: &#123;</span><br><span class="line">                <span class="attr">borderColor</span>: <span class="string">&#x27;#8C8D8E&#x27;</span>,</span><br><span class="line">                <span class="attr">width</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">                <span class="attr">borderWidth</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">height</span>: <span class="number">0</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">b</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#4C5058&#x27;</span>,</span><br><span class="line">                <span class="attr">fontSize</span>: <span class="number">14</span>,</span><br><span class="line">                <span class="attr">fontWeight</span>: <span class="string">&#x27;bold&#x27;</span>,</span><br><span class="line">                <span class="attr">lineHeight</span>: <span class="number">33</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">per</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">                <span class="attr">backgroundColor</span>: <span class="string">&#x27;#4C5058&#x27;</span>,</span><br><span class="line">                <span class="attr">padding</span>: [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                <span class="attr">borderRadius</span>: <span class="number">4</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">data</span>: [</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">1048</span>, <span class="attr">name</span>: <span class="string">&#x27;Baidu&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">335</span>, <span class="attr">name</span>: <span class="string">&#x27;Direct&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">310</span>, <span class="attr">name</span>: <span class="string">&#x27;Email&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">251</span>, <span class="attr">name</span>: <span class="string">&#x27;Google&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">234</span>, <span class="attr">name</span>: <span class="string">&#x27;Union Ads&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">147</span>, <span class="attr">name</span>: <span class="string">&#x27;Bing&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">135</span>, <span class="attr">name</span>: <span class="string">&#x27;Video Ads&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">102</span>, <span class="attr">name</span>: <span class="string">&#x27;Others&#x27;</span> &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123; option &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123; &#125;,</span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    axios.<span class="title function_">get</span>(<span class="string">&quot;http://127.0.0.1:5000/press_data&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> pressData = response.<span class="property">data</span>.<span class="property">data</span>;</span><br><span class="line">      <span class="keyword">const</span> seriesData = pressData.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">value</span>: item.<span class="property">bookaddress_num</span>, <span class="attr">name</span>: item.<span class="property">bookaddress</span> , <span class="attr">itemStyle</span>:&#123;<span class="attr">color</span>: <span class="title function_">generateRandomColor</span>()&#125;&#125;;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">option</span>.<span class="property">series</span>[<span class="number">0</span>].<span class="property">data</span> = seriesData;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">option</span>.<span class="property">legend</span>.<span class="property">data</span> = seriesData.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">name</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>用户功能如图2.2展示：</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps7-1717733496071-9.jpg" alt="img"> </p><p>图7 用户功能展示图</p><h3 id="（三）管理员模块实现"><a href="#（三）管理员模块实现" class="headerlink" title="（三）管理员模块实现"></a>（三）管理员模块实现</h3><p>管理员模块提供了丰富且强大的功能，包括批量导入导出书籍、修改图书信息、批量删除图书信息、修改用户信息、删除用户以及查看出版社信息的可视化展示。</p><p>通过批量导入导出书籍功能，管理员可以方便地将大量图书数据导入系统，或从系统中导出，极大地提高了图书管理的效率。这对于大型图书馆或经常更新书籍目录的机构尤为重要。<br> 导出图书数据的部分代码如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">out_data</span>(<span class="params"></span>) </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 模拟书籍数据</span></span><br><span class="line">      <span class="keyword">const</span> <span class="variable constant_">XLSX</span> = <span class="built_in">require</span>(<span class="string">&quot;xlsx&quot;</span>);</span><br><span class="line">      <span class="keyword">const</span> headers = [<span class="string">&#x27;booknumber&#x27;</span>, <span class="string">&#x27;bookname&#x27;</span>, <span class="string">&#x27;writer&#x27;</span>,<span class="string">&#x27;press&#x27;</span>,<span class="string">&#x27;price&#x27;</span>,<span class="string">&#x27;use&#x27;</span>,<span class="string">&#x27;who_use&#x27;</span>,<span class="string">&#x27;use_time&#x27;</span>]</span><br><span class="line">      <span class="keyword">const</span> data = <span class="variable language_">this</span>.<span class="property">tableData</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> [item[<span class="string">&quot;booknumber&quot;</span>], item[<span class="string">&quot;bookname&quot;</span>], item[<span class="string">&quot;writer&quot;</span>],item[<span class="string">&quot;press&quot;</span>],item[<span class="string">&quot;price&quot;</span>],item[<span class="string">&quot;use&quot;</span>],item[<span class="string">&quot;who_use&quot;</span>],item[<span class="string">&quot;use_time&quot;</span>]])</span><br><span class="line">      <span class="keyword">const</span> worksheet = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">aoa_to_sheet</span>([headers, ...data])</span><br><span class="line">      <span class="keyword">const</span> workbook = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>()</span><br><span class="line">      <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_append_sheet</span>(workbook, worksheet, <span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line">      <span class="variable constant_">XLSX</span>.<span class="title function_">writeFile</span>(workbook, <span class="string">&#x27;data.xlsx&#x27;</span>)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps8-1717733496071-10.jpg" alt="img"> </p><p>图8 管理员功能图</p><h1 id="四、实现效果"><a href="#四、实现效果" class="headerlink" title="四、实现效果"></a>四、实现效果</h1><h2 id="（一）用户登录页面"><a href="#（一）用户登录页面" class="headerlink" title="（一）用户登录页面"></a>（一）用户登录页面</h2><p>用户登录界面设计分析：用户登录输入的账号和密码须在数据库中匹配，账号和密码输入框会进行为空检测，并且验证码需要一致。</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps9-1717733496071-12.jpg" alt="img"> </p><p>图9 用户登录页面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps10-1717733496071-11.jpg" alt="img"> </p><p>图9 账号密码为空检测</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps11-1717733496071-13.jpg" alt="img"> </p><p>图10 验证码错误检测</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps12-1717733496071-14.jpg" alt="img"> </p><p>图11 用户登录检测</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps13-1717733496071-15.jpg" alt="img"> </p><p>图12 用户登录成功页面</p><h2 id="（二）用户注册页面"><a href="#（二）用户注册页面" class="headerlink" title="（二）用户注册页面"></a>（二）用户注册页面</h2><p>用户注册界面设计分析：用户登录输入的账号需要唯一，在数据库查找不到，密码须通过正则表达式的校验，密码需要同时含有大小写字母和数字，并且不少于八位，手机号须符合中国手机号正则表达式的的校验规则，邮箱也须符合正则表达式校验规则，另外邮箱需要能接收到邮箱验证码，输入的验证码和邮箱发送的验证码需要匹配，这样才能进行注册。</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps14-1717733496071-16.jpg" alt="img"> </p><p>图13 用户注册页面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps15-1717733496071-17.jpg" alt="img"> </p><p>图14 用户注册验证码接收</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps16-1717733496071-18.jpg" alt="img"> </p><p>图15 用户注册成功</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps17-1717733496071-19.jpg" alt="img"> </p><p>图16 成功插入数据库</p><h2 id="（三）用户找回密码页面"><a href="#（三）用户找回密码页面" class="headerlink" title="（三）用户找回密码页面"></a>（三）用户找回密码页面</h2><p>用户找回密码界面设计分析：用户登录输入的账号和密码需匹配，在数据库可以查询到，邮箱须符合正则表达式校验规则，邮箱需要能接收到邮箱验证码，输入的验证码需要一致，身份才能验证成功并跳转到重设密码界面。</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps18-1717733496071-20.jpg" alt="img"> </p><p>图17 用户找回密码界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps19-1717733496071-21.jpg" alt="img"> </p><p>图18 身份验证成功重设密码界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps20-1717733496071-25.jpg" alt="img"> </p><p>图19 成功重设密码界面</p><h2 id="（四）管理员图书管理页面"><a href="#（四）管理员图书管理页面" class="headerlink" title="（四）管理员图书管理页面"></a>（四）管理员图书管理页面</h2><p>管理员图书管理页面设计分析：图书管理界面可以进行数据的搜索，图书数据的导入导出，可以增加单本书籍，编辑书籍信息，批量删除图书数据。在编辑图书信息的时候，数据需要进行回显，同时编辑和删除图书的时候需要进行勾选才能进行操作，否则会弹出相应的提示。</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps21-1717733496071-22.jpg" alt="img"> </p><p>图20 管理员图书管理界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps22-1717733496071-23.jpg" alt="img"> </p><p>图21 图书数据导入界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps23-1717733496071-24.jpg" alt="img"> </p><p>图22 增加单本图书数据界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps24-1717733496071-27.jpg" alt="img"> </p><p>图23 编辑图书信息界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps25-1717733496071-29.jpg" alt="img">、</p><p>图24 删除图书信息界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps26-1717733496071-26.jpg" alt="img"> </p><p>图25 出版社图形化展示界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps27-1717733496071-28.jpg" alt="img"> </p><p>图26 用户管理界面</p><h2 id="（五）用户图书借阅页面"><a href="#（五）用户图书借阅页面" class="headerlink" title="（五）用户图书借阅页面"></a>（五）用户图书借阅页面</h2><p>用户图书借阅页面设计分析：用户可以对图书进行搜索，对图书进行批量借阅，可以查看自己的借阅信息和对图书进行批量归还，另外可以对个人账号信息进行管理，可以更新用户信息，退出登录和注销账号等操作。用户注销账户的时候，会对借阅的图书进行检测，如果有未归还的书籍则不允许进行注销。</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps28-1717733496071-30.jpg" alt="img"> </p><p>图27 图书借阅界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps29-1717733496071-32.jpg" alt="img"> </p><p>图28 出版社图形化展示界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps30-1717733496071-31.jpg" alt="img"> </p><p>图29 用户还书界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps31-1717733496071-34.jpg" alt="img"> </p><p>图30 用户个人信息展示界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps32-1717733496071-33.jpg" alt="img"> </p><p>图31 用户修改个人信息界面</p><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/wps33-1717733496071-35.jpg" alt="img"> </p><p>图32 用户注销账户界面</p><h1 id="五、-设计体会"><a href="#五、-设计体会" class="headerlink" title="五、 设计体会"></a>五、 设计体会</h1><p>本系统基于Vue 2和SpringBoot框架设计并实现了一个功能强大的图书管理系统。通过开发这个系统，我获得了宝贵的经验，深入理解了前后端开发的过程，并且掌握了SpringBoot框架和Vue 2框架的知识。</p><p>在前端方面，我使用Vue 2创建了一个用户友好的界面，通过Vue的组件化和响应式特性，实现了交互效果的优化。我学会了使用Vue的路由管理，使得页面之间的跳转更加流畅和高效。</p><p>在后端方面，我选择了SpringBoot框架作为系统的后端支持。SpringBoot提供了轻量级的、灵活的Web开发框架，我利用其简洁的API和强大的扩展库，实现了高效的数据处理和业务逻辑支持。我学会了使用SpringBoot的路由系统，处理前端请求并返回相应的数据。同时，我还学习了如何使用Mybatis进行数据库操作，更加简单方便的实现了对图书数据的增删改查功能。</p><p>这次开发经历让我更加自信和熟练地运用各种前后端技术，并提升了我对系统开发和设计的能力。我深刻体会到了系统开发的全过程，从需求分析、架构设计到具体实现，每个环节都需要仔细思考和合理规划。通过不断的学习和实践，我相信自己能够不断提高，为开发更加功能丰富、性能优越、安全可靠的系统做出贡献。</p><p>未来，我希望进一步改进这个图书管理系统，增加更多高级功能，如图书推荐、借阅统计等，以提升用户体验和系统的实用性。同时，我也将注重加强系统的安全性，采取合适的措施保护用户数据和系统的稳定性。我将继续学习和探索新的技术，不断拓展自己的知识面，以应对不断变化的技术发展和用户需求。</p><h1 id="六、代码若有需要请联系我"><a href="#六、代码若有需要请联系我" class="headerlink" title="六、代码若有需要请联系我"></a>六、代码若有需要请联系我</h1><h2 id="Q：2946473607"><a href="#Q：2946473607" class="headerlink" title="Q：2946473607"></a>Q：2946473607</h2><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/94b1d6970329ae7621627570b94ff09c.jpg" alt="94b1d6970329ae7621627570b94ff09c"></p><h2 id="V：Zw18502786548"><a href="#V：Zw18502786548" class="headerlink" title="V：Zw18502786548"></a>V：Zw18502786548</h2><p><img src="/2024/06/07/JavaWeb%E5%BC%80%E5%8F%91/325081e20abb34d7d8de3bfcdb09b83c.jpg" alt="325081e20abb34d7d8de3bfcdb09b83c"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PythonWeb---图书管理系统</title>
      <link href="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/"/>
      <url>/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="PythonWeb开发—图书管理系统"><a href="#PythonWeb开发—图书管理系统" class="headerlink" title="PythonWeb开发—图书管理系统"></a>PythonWeb开发—图书管理系统</h1><p>基于Vue2和Flask框架的图书管理系统的设计与实现</p><p>摘要：随着信息技术的不断发展，图书馆作为知识传播的重要场所，其管理方式也在不断地升级和改进。传统的图书馆管理模式已经不能满足现代人们的需求，尤其是在图书预约方面，很多时候读者需要提前排队等候，浪费了大量的时间和精力。为了提高图书馆的管理效率，方便读者的使用，本课程设计题目选择了图书馆预约管理系统的开发。该系统将利用前端技术HTML、CSS、JavaScript和Vue框架，结合后端技术Python和Flask框架，以及MySQL数据库，实现一个功能完善、操作简便的图书馆预约管理平台。通过该系统，读者可以在线借阅图书、查询图书信息、个人信息管理、查看借阅信息等；管理员可以进行图书管理、用户管理、书籍的导入导出、书籍数据的可视化分析等功能，大大提高了图书馆的管理效率和读者的使用体验；</p><p>关键词：Vue 2框架，Flask框架，图书管理系统，前端开发，后端开发</p><h2 id="一、系统总体设计"><a href="#一、系统总体设计" class="headerlink" title="一、系统总体设计"></a>一、系统总体设计</h2><h3 id="（一）系统架构设计"><a href="#（一）系统架构设计" class="headerlink" title="（一）系统架构设计"></a>（一）系统架构设计</h3><p>图书管理系统由登录端，管理端、用户端组成（如图1.1所示）。</p><p>采用web技术开发管理系统的优点是开发成本较低，用户使用门槛低。图书管理系统登录端主要实现了下列几个模块，用户登录模块、用户注册模块、用户找回密码模块。管理端主要实现了下列几个模块，图书管理模块、用户管理模块、图书信息可视化分析模块等。用户端作为整个供水系统的核心组件，其内部开发了图书借阅模块，图书还书模块，图书信息可视化分析模块，个人信息模块。</p><p>由于本系统需管理大量图书信息，因此本系统支持Excel表格数据的导入导出，并且可以通过网络爬虫对相关网站的图书信息进行爬取并进行数据清洗存入数据库。</p><p>基于用户账号安全上的考虑，本系统采用邮箱验证的原则，用户的注册和找回密码必须通过邮箱的验证码验证，保证个人信息的安全性。</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps1-1717382400712-1.jpg" alt="img"> </p><p>图1.1 图书管理系统架构图</p><h3 id="（二）功能模块设计"><a href="#（二）功能模块设计" class="headerlink" title="（二）功能模块设计"></a>（二）功能模块设计</h3><p>需求分析设计出的系统功能可大致分以下几个模块，如图1.2所示，分别为：</p><ol><li>登录端</li></ol><p>(1) 登录模块：根据数据库的存储信息判断是用户登录还是管理员登录并进入到相应的界面</p><p>(2) 注册用户模块：注册图书管理系统的新用户信息</p><p>(3) 找回密码模块：根据账号、电话号码、邮箱和邮箱验证码可重设密码</p><ol start="2"><li>用户端</li></ol><p>(1) 图书借阅模块：可以查询图书、借阅图书、归还图书</p><p>(2) 个人信息模块：对个人信息进行修改、注销用户、更新个人信息、退出登录</p><p>(3) 图书数据可视化展示模块：可以查看图书出版社信息的图形分析</p><p>(4) 退出模块：出系统并对相应数据库数据进行修改</p><ol start="3"><li>管理端</li></ol><p>(1) 图书管理模块：可以查询图书信息、添加单本书籍、导入导出书籍数据、更新图书信息、批量删除图书</p><p>(2) 数据可视化化模块：展示图书出版社信息的分布情况</p><p>(3) 用户管理模块：可以更新用户信息、删除用户信息、增加新用户</p><p>(4) 个人信息模块：对个人信息进行修改，注销用户，更新信息</p><p>(5) 退出模块：退出系统并对相应数据库数据进行修改</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps2-1717382400712-2.png" alt="img"> </p><p>图1.2 图书管理系统模块图</p><h3 id="（三）数据库设计"><a href="#（三）数据库设计" class="headerlink" title="（三）数据库设计"></a>（三）数据库设计</h3><p>​数据库名称为Python_test，图书管理系统核心表结构设计如下。</p><p>1、图书管理系统相关表设计</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps3-1717382400712-3.jpg" alt="img"> </p><p>图1.3 图书管理系统数据库的表设计</p><p>表1.1 books (图书表)</p><table><thead><tr><th>字段名</th><th>字段类型</th><th>字段长度</th><th>字段描述</th></tr></thead><tbody><tr><td>id</td><td>int</td><td>4</td><td>编号</td></tr><tr><td>booknumber</td><td>varchar</td><td>50</td><td>书籍编号–主键</td></tr><tr><td>bookname</td><td>varchar</td><td>50</td><td>书籍名</td></tr><tr><td>writer</td><td>varchar</td><td>50</td><td>作者</td></tr><tr><td>press</td><td>varchar</td><td>50</td><td>价格</td></tr><tr><td>use</td><td>varchar</td><td>50</td><td>0–未被借阅 1–已被借阅</td></tr><tr><td>who_use</td><td>varchar</td><td>50</td><td>借阅书籍的用户名</td></tr><tr><td>use_time</td><td>datetime</td><td>8</td><td>借阅时间</td></tr></tbody></table><p>表1.2 users (用户表)</p><table><thead><tr><th>字段名</th><th>字段类型</th><th>字段长度</th><th>字段描述</th></tr></thead><tbody><tr><td>Id</td><td>int</td><td>4</td><td>编号</td></tr><tr><td>user_name</td><td>char</td><td>20</td><td>用户名</td></tr><tr><td>password</td><td>varchar</td><td>50</td><td>密码</td></tr><tr><td>email</td><td>varchar</td><td>50</td><td>邮箱</td></tr><tr><td>phone_number</td><td>varchar</td><td>50</td><td>电话号码</td></tr><tr><td>is_admin</td><td>varchar</td><td>5</td><td>1–管理员 0–普通用户</td></tr></tbody></table><h2 id="二、系统模块实现"><a href="#二、系统模块实现" class="headerlink" title="二、系统模块实现"></a>二、系统模块实现</h2><h3 id="（一）登录模块实现"><a href="#（一）登录模块实现" class="headerlink" title="（一）登录模块实现"></a>（一）登录模块实现</h3><p>登录模块是图书管理系统初始部分，主要需要实现用户登录、注册、找回密码功能。登录采用数据库查询语句，根据用户名和密码查找数据，查询到则登录成功，否则失败，然后进入相应管理员或用户界面；注册用户时，由于用户名唯一，故先检测用户名是否存在，再根据正则表达式匹配密码看是否符合规则；找回密码时，需要接受邮箱验证码并进行匹配，才能重设密码。同时系统设置了验证码功能防止恶意多次发送请求，如图2.1所示。</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps4-1717382400712-6.jpg" alt="img"> </p><p>图2.1 登录模块实现图</p><h3 id="（二）用户模块实现"><a href="#（二）用户模块实现" class="headerlink" title="（二）用户模块实现"></a>（二）用户模块实现</h3><p>用户模块提供了一系列功能，包括借书、还书、修改个人信息和查看出版社信息的可视化展示。用户可以轻松地浏览图书馆的藏书目录，选择心仪的书籍进行借阅，并在进行图书归还。通过个人信息管理功能，用户能够更新自己的联系方式、修改密码和查看借阅记录，确保账户信息的准确性和安全性。此外用户模块还提供了详细的出版社信息，采用Echart工具使用户能够更直观地了解各大出版社的分布情况。这样不仅有助于用户做出更明智的借阅选择，还能帮助他们发现更多感兴趣的书籍和出版商。</p><p>Echart函数部分展示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateRandomColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> r = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">256</span>); <span class="comment">// 0-255</span></span><br><span class="line">  <span class="keyword">const</span> g = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">256</span>); <span class="comment">// 0-255</span></span><br><span class="line">  <span class="keyword">const</span> b = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">256</span>); <span class="comment">// 0-255</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`rgb(<span class="subst">$&#123;r&#125;</span>, <span class="subst">$&#123;g&#125;</span>, <span class="subst">$&#123;b&#125;</span>)`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="comment">// 这一行后续还需要放置导入代码</span></span><br><span class="line"><span class="keyword">import</span> &#123; use &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/core&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PieChart</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/charts&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">TooltipComponent</span>, <span class="title class_">LegendComponent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/components&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CanvasRenderer</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/renderers&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">use</span>([<span class="title class_">TooltipComponent</span>, <span class="title class_">LegendComponent</span>, <span class="title class_">PieChart</span>, <span class="title class_">CanvasRenderer</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VChart</span>, &#123; <span class="variable constant_">THEME_KEY</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue-echarts&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">VChart</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">provide</span>: &#123;</span><br><span class="line">    <span class="comment">// 主题颜色（white/dark）</span></span><br><span class="line">    [<span class="variable constant_">THEME_KEY</span>]: <span class="string">&quot;while&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> option = <span class="title function_">ref</span>(&#123;</span><br><span class="line">      <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span>,</span><br><span class="line">        <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125;: &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">legend</span>: &#123;</span><br><span class="line">        <span class="attr">data</span>: [</span><br><span class="line">          <span class="comment">// &#x27;Direct&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Marketing&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Search Engine&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Email&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Union Ads&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Video Ads&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Baidu&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Google&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Bing&#x27;,</span></span><br><span class="line">          <span class="comment">// &#x27;Others&#x27;</span></span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;出版社&#x27;</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">          <span class="attr">radius</span>: [<span class="string">&#x27;45%&#x27;</span>, <span class="string">&#x27;60%&#x27;</span>],</span><br><span class="line">          <span class="attr">labelLine</span>: &#123;</span><br><span class="line">            <span class="attr">length</span>: <span class="number">30</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">label</span>: &#123;</span><br><span class="line">            <span class="attr">formatter</span>: <span class="string">&#x27;&#123;a|&#123;a&#125;&#125;&#123;abg|&#125;\n&#123;hr|&#125;\n  &#123;b|&#123;b&#125;：&#125;&#123;c&#125;  &#123;per|&#123;d&#125;%&#125;  &#x27;</span>,</span><br><span class="line">            <span class="attr">backgroundColor</span>: <span class="string">&#x27;#F6F8FC&#x27;</span>,</span><br><span class="line">            <span class="attr">borderColor</span>: <span class="string">&#x27;#8C8D8E&#x27;</span>,</span><br><span class="line">            <span class="attr">borderWidth</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">borderRadius</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">rich</span>: &#123;</span><br><span class="line">              <span class="attr">a</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#6E7079&#x27;</span>,</span><br><span class="line">                <span class="attr">lineHeight</span>: <span class="number">22</span>,</span><br><span class="line">                <span class="attr">align</span>: <span class="string">&#x27;center&#x27;</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">hr</span>: &#123;</span><br><span class="line">                <span class="attr">borderColor</span>: <span class="string">&#x27;#8C8D8E&#x27;</span>,</span><br><span class="line">                <span class="attr">width</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">                <span class="attr">borderWidth</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">height</span>: <span class="number">0</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">b</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#4C5058&#x27;</span>,</span><br><span class="line">                <span class="attr">fontSize</span>: <span class="number">14</span>,</span><br><span class="line">                <span class="attr">fontWeight</span>: <span class="string">&#x27;bold&#x27;</span>,</span><br><span class="line">                <span class="attr">lineHeight</span>: <span class="number">33</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">per</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">                <span class="attr">backgroundColor</span>: <span class="string">&#x27;#4C5058&#x27;</span>,</span><br><span class="line">                <span class="attr">padding</span>: [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                <span class="attr">borderRadius</span>: <span class="number">4</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">data</span>: [</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">1048</span>, <span class="attr">name</span>: <span class="string">&#x27;Baidu&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">335</span>, <span class="attr">name</span>: <span class="string">&#x27;Direct&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">310</span>, <span class="attr">name</span>: <span class="string">&#x27;Email&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">251</span>, <span class="attr">name</span>: <span class="string">&#x27;Google&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">234</span>, <span class="attr">name</span>: <span class="string">&#x27;Union Ads&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">147</span>, <span class="attr">name</span>: <span class="string">&#x27;Bing&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">135</span>, <span class="attr">name</span>: <span class="string">&#x27;Video Ads&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">value</span>: <span class="number">102</span>, <span class="attr">name</span>: <span class="string">&#x27;Others&#x27;</span> &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123; option &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123; &#125;,</span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    axios.<span class="title function_">get</span>(<span class="string">&quot;http://127.0.0.1:5000/press_data&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> pressData = response.<span class="property">data</span>.<span class="property">data</span>;</span><br><span class="line">      <span class="keyword">const</span> seriesData = pressData.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">value</span>: item.<span class="property">bookaddress_num</span>, <span class="attr">name</span>: item.<span class="property">bookaddress</span> , <span class="attr">itemStyle</span>:&#123;<span class="attr">color</span>: <span class="title function_">generateRandomColor</span>()&#125;&#125;;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">option</span>.<span class="property">series</span>[<span class="number">0</span>].<span class="property">data</span> = seriesData;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">option</span>.<span class="property">legend</span>.<span class="property">data</span> = seriesData.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">name</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>用户功能如图2.2展示：</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps5-1717382400712-4.jpg" alt="img"> </p><p>图2.2 用户功能展示图</p><h3 id="（三）管理员模块实现"><a href="#（三）管理员模块实现" class="headerlink" title="（三）管理员模块实现"></a>（三）管理员模块实现</h3><p>管理员模块提供了丰富且强大的功能，包括批量导入导出书籍、修改图书信息、批量删除图书信息、修改用户信息、删除用户以及查看出版社信息的可视化展示。</p><p>通过批量导入导出书籍功能，管理员可以方便地将大量图书数据导入系统，或从系统中导出，极大地提高了图书管理的效率。这对于大型图书馆或经常更新书籍目录的机构尤为重要。<br> 导出图书数据的部分代码如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">out_data</span>(<span class="params"></span>) </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 模拟书籍数据</span></span><br><span class="line">      <span class="keyword">const</span> <span class="variable constant_">XLSX</span> = <span class="built_in">require</span>(<span class="string">&quot;xlsx&quot;</span>);</span><br><span class="line">      <span class="keyword">const</span> headers = [<span class="string">&#x27;booknumber&#x27;</span>, <span class="string">&#x27;bookname&#x27;</span>, <span class="string">&#x27;writer&#x27;</span>,<span class="string">&#x27;press&#x27;</span>,<span class="string">&#x27;price&#x27;</span>,<span class="string">&#x27;use&#x27;</span>,<span class="string">&#x27;who_use&#x27;</span>,<span class="string">&#x27;use_time&#x27;</span>]</span><br><span class="line">      <span class="keyword">const</span> data = <span class="variable language_">this</span>.<span class="property">tableData</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> [item[<span class="string">&quot;booknumber&quot;</span>], item[<span class="string">&quot;bookname&quot;</span>], item[<span class="string">&quot;writer&quot;</span>],item[<span class="string">&quot;press&quot;</span>],item[<span class="string">&quot;price&quot;</span>],item[<span class="string">&quot;use&quot;</span>],item[<span class="string">&quot;who_use&quot;</span>],item[<span class="string">&quot;use_time&quot;</span>]])</span><br><span class="line">      <span class="keyword">const</span> worksheet = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">aoa_to_sheet</span>([headers, ...data])</span><br><span class="line">      <span class="keyword">const</span> workbook = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_new</span>()</span><br><span class="line">      <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">book_append_sheet</span>(workbook, worksheet, <span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line">      <span class="variable constant_">XLSX</span>.<span class="title function_">writeFile</span>(workbook, <span class="string">&#x27;data.xlsx&#x27;</span>)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps6-1717382400712-7.jpg" alt="img"> </p><p>图2.3 管理员功能图</p><h2 id="三、系统模块展示"><a href="#三、系统模块展示" class="headerlink" title="三、系统模块展示"></a>三、系统模块展示</h2><h3 id="（一）用户登录页面"><a href="#（一）用户登录页面" class="headerlink" title="（一）用户登录页面"></a>（一）用户登录页面</h3><p>用户登录界面设计分析：用户登录输入的账号和密码须在数据库中匹配，账号和密码输入框会进行为空检测，并且验证码需要一致。</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps7-1717382400712-5.jpg" alt="img"> </p><p>图3.1 用户登录页面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps8-1717382400712-8.jpg" alt="img"> </p><p>图3.2 账号密码为空检测</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps9-1717382400712-9.jpg" alt="img"> </p><p>图3.3 验证码错误检测</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps10-1717382400712-10.jpg" alt="img"> </p><p>图3.4 用户登录检测</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps11-1717382400712-11.jpg" alt="img"> </p><p>图3.5 用户登录成功页面</p><h3 id="（二）用户注册页面"><a href="#（二）用户注册页面" class="headerlink" title="（二）用户注册页面"></a>（二）用户注册页面</h3><p>用户注册界面设计分析：用户登录输入的账号需要唯一，在数据库查找不到，密码须通过正则表达式的校验，密码需要同时含有大小写字母和数字，并且不少于八位，手机号须符合中国手机号正则表达式的的校验规则，邮箱也须符合正则表达式校验规则，另外邮箱需要能接收到验证码，这样才能进行注册。</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps12-1717382400712-12.jpg" alt="img"> </p><p>图3.6 用户注册页面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps13-1717382400712-13.jpg" alt="img"> </p><p>图3.7 用户注册验证码接收</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps14-1717382400712-15.jpg" alt="img"> </p><p>图3.8 用户注册成功</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps15-1717382400712-17.jpg" alt="img"> </p><p>图3.9 成功插入数据库</p><h3 id="（三）用户找回密码页面"><a href="#（三）用户找回密码页面" class="headerlink" title="（三）用户找回密码页面"></a>（三）用户找回密码页面</h3><p>用户找回密码界面设计分析：用户登录输入的账号和密码需匹配，在数据库可以查询到，邮箱须符合正则表达式校验规则，邮箱需要能接收到验证码，输入的验证码需要一致，身份才能验证成功并跳转到重设密码界面。</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps16-1717382400712-14.jpg" alt="img"> </p><p>图3.10 用户找回密码界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps17-1717382400712-16.jpg" alt="img"> </p><p>图3.11 身份验证成功重设密码界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps18-1717382400712-18.jpg" alt="img"> </p><p>图3.12 成功重设密码界面</p><p>（四）管理员图书管理页面</p><p>管理员图书管理页面设计分析：图书管理界面可以进行数据的搜索，图书数据的导入导出，可以增加单本书籍，编辑书籍信息，批量删除图书数据。在编辑图书信息的时候，数据需要进行回显，同时编辑和删除图书的时候需要进行勾选才能进行操作，否则会弹出相应的提示。</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps19-1717382400713-20.jpg" alt="img"> </p><p>图3.13 管理员图书管理界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps20-1717382400712-19.jpg" alt="img"> </p><p>图3.14 图书数据导入界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps21-1717382400713-21.jpg" alt="img"> </p><p>图3.14 增加单本图书数据界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps22-1717382400713-22.jpg" alt="img"> </p><p>图3.14 编辑图书信息界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps23-1717382400713-23.jpg" alt="img">、</p><p>图3.15 删除图书信息界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps24-1717382400713-24.jpg" alt="img"> </p><p>图3.16 出版社图形化展示界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps25-1717382400713-27.jpg" alt="img"> </p><p>图3.17 用户管理界面</p><h3 id="（四）用户图书借阅页面"><a href="#（四）用户图书借阅页面" class="headerlink" title="（四）用户图书借阅页面"></a>（四）用户图书借阅页面</h3><p>用户图书借阅页面设计分析：用户可以对图书进行搜索，对图书进行批量借阅，可以查看自己的借阅信息和对图书进行批量归还，另外可以对个人账号信息进行管理，可以更新用户信息，退出登录和注销账号等操作。用户注销账户的时候，会对借阅的图书进行检测，如果有未归还的书籍则不允许进行注销。</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps26-1717382400713-25.jpg" alt="img"> </p><p>图3.18 图书借阅界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps27-1717382400713-26.jpg" alt="img"> </p><p>图3.19 出版社图形化展示界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps28-1717382400713-30.jpg" alt="img"> </p><p>图3.20 用户还书界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps29-1717382400713-28.jpg" alt="img"> </p><p>图3.21 用户个人信息展示界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps30-1717382400713-29.jpg" alt="img"> </p><p>图3.22 用户修改个人信息界面</p><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/wps31-1717382400713-31.jpg" alt="img"> </p><p>图3.23 用户注销账户界面</p><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>本系统基于Vue 2和Flask框架设计并实现了一个功能强大的图书管理系统。通过开发这个系统，我获得了宝贵的经验，深入理解了前后端开发的过程，并且掌握了Flask框架和Vue 2框架的知识。</p><p>在前端方面，我使用Vue 2创建了一个用户友好的界面，通过Vue的组件化和响应式特性，实现了交互效果的优化。我学会了使用Vue的路由管理，使得页面之间的跳转更加流畅和高效。</p><p>在后端方面，我选择了Flask框架作为系统的后端支持。Flask提供了轻量级的、灵活的Web开发框架，我利用其简洁的API和强大的扩展库，实现了高效的数据处理和业务逻辑支持。我学会了使用Flask的路由系统，处理前端请求并返回相应的数据。同时，我还学习了如何使用Flask SQLAlchemy进行数据库操作，更加简单方便的实现了对图书数据的增删改查功能。</p><p>这次开发经历让我更加自信和熟练地运用各种前后端技术，并提升了我对系统开发和设计的能力。我深刻体会到了系统开发的全过程，从需求分析、架构设计到具体实现，每个环节都需要仔细思考和合理规划。通过不断的学习和实践，我相信自己能够不断提高，为开发更加功能丰富、性能优越、安全可靠的系统做出贡献。</p><p>未来，我希望进一步改进这个图书管理系统，增加更多高级功能，如图书推荐、借阅统计等，以提升用户体验和系统的实用性。同时，我也将注重加强系统的安全性，采取合适的措施保护用户数据和系统的稳定性。我将继续学习和探索新的技术，不断拓展自己的知识面，以应对不断变化的技术发展和用户需求。</p><h2 id="五、代码若有需要请联系我"><a href="#五、代码若有需要请联系我" class="headerlink" title="五、代码若有需要请联系我"></a>五、代码若有需要请联系我</h2><h3 id="Q：2946473607"><a href="#Q：2946473607" class="headerlink" title="Q：2946473607"></a>Q：2946473607</h3><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/94b1d6970329ae7621627570b94ff09c.jpg" alt="94b1d6970329ae7621627570b94ff09c"></p><h3 id="V：Zw18502786548"><a href="#V：Zw18502786548" class="headerlink" title="V：Zw18502786548"></a>V：Zw18502786548</h3><p><img src="/2024/06/03/PythonWeb%E5%BC%80%E5%8F%91/325081e20abb34d7d8de3bfcdb09b83c.jpg" alt="325081e20abb34d7d8de3bfcdb09b83c"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《文档聊天机器人》的开发文档</title>
      <link href="/2024/06/01/%E3%80%8A%E6%96%87%E6%A1%A3%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%8B%E7%9A%84%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/"/>
      <url>/2024/06/01/%E3%80%8A%E6%96%87%E6%A1%A3%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%8B%E7%9A%84%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="《文档聊天机器人》的开发文档"><a href="#《文档聊天机器人》的开发文档" class="headerlink" title="《文档聊天机器人》的开发文档"></a>《文档聊天机器人》的开发文档</h1><p><strong>Project ID</strong>: 16363</p><p><strong>队伍号</strong>: T202410517992812</p><p><strong>队伍名称</strong>：无敌暴龙队</p><p><strong>题目</strong>： proj225 《文档聊天机器人》</p><h2 id="1-项目作品演示"><a href="#1-项目作品演示" class="headerlink" title="1.项目作品演示"></a>1.项目作品演示</h2><p>①视频展示</p><p>链接：<a href="https://pan.baidu.com/s/1OavgKkQOAYbsvI_aA_OVsw?pwd=1het">https://pan.baidu.com/s/1OavgKkQOAYbsvI_aA_OVsw?pwd=1het</a><br>提取码：1het<br>–来自百度网盘超级会员V3的分享</p><p>②图片展示</p><p>1.qabot代码</p><p><img src="/2024/06/01/%E3%80%8A%E6%96%87%E6%A1%A3%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%8B%E7%9A%84%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20240530102809968-1717036194950-2.png"></p><p>2.api代码</p><p><img src="/2024/06/01/%E3%80%8A%E6%96%87%E6%A1%A3%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%8B%E7%9A%84%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20240530102859396.png"></p><p>3.Web页面前端代码（Web页面支持在Deepin系统上使用）</p><p><img src="/2024/06/01/%E3%80%8A%E6%96%87%E6%A1%A3%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%8B%E7%9A%84%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20240530102915950.png"></p><p>4.Web页面展示（Web页面支持在Deepin系统上使用）</p><p><img src="/2024/06/01/%E3%80%8A%E6%96%87%E6%A1%A3%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%8B%E7%9A%84%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/image-20240530102943626.png"></p><h2 id="2-项目目标"><a href="#2-项目目标" class="headerlink" title="2.项目目标"></a>2.项目目标</h2><p>在当今数字化时代，操作系统的角色变得越来越重要。它们成为我们日常生活中不可或缺的一部分，为我们提供了丰富的功能和无限的可能性。然而，有时候在使用操作系统时我们可能会遇到困惑或需要寻求帮助，特别是对于新手用户而言。这时，一个智能的文档问答机器人就能够发挥重要的作用。</p><p>我们团队在文档问答机器人的开发中，旨在利用深度科技的Deepin系统相关的中文教程和词条，构建一个能够回答用户问题的中文聊天机器人。我们深入研究了Deepin系统的特点和用户需求，从Deepin Wiki等资料中收集和整理了大量的中文文档数据，为机器人的知识库提供了坚实的基础。</p><p>在机器人的开发过程中，我们运用了深度学习和自然语言处理的技术。我们搭建了一个大语言模型，通过对输入问题进行语义理解和信息检索，能够准确地定位用户问题并给出相应的回答。我们通过训练和优化模型，提高了机器人的问答准确度和效率。</p><p>为了方便用户与机器人的交互，我们设计了一个命令行界面，用户可以通过简单的命令输入问题，机器人会迅速给出回答和相关的Deepin Wiki文档链接。这样用户可以方便地获取更多详细的信息和指导，提高了他们在Deepin系统中的使用体验。</p><p>通过这个项目，我们不仅致力于为Deepin系统的用户提供便捷的帮助，还通过深入研究和应用人工智能技术，推动了智能化操作系统的发展。我们相信，随着技术的不断进步，这个文档问答机器人将能够为用户提供更加精准和个性化的帮助，成为Deepin系统中不可或缺的一部分。</p><h2 id="3-项目开发的进展与困难"><a href="#3-项目开发的进展与困难" class="headerlink" title="3.项目开发的进展与困难"></a>3.项目开发的进展与困难</h2><p>团队开发的初期，由于我们是第一次接触LLM方面，所有我们团队在初期开发目标不明确，学习方向模糊，但在导师的帮助下我们找到了正确的道路，并一步一步的学习。</p><p>在开发文档问答机器人的过程中，我遇到了许多的挑战：</p><p>首先，数据清洗和预处理是确保机器人提供准确信息的关键。深度百科文档的数据集在<a href="https://github.com/linuxdeepin/wiki.deepin.org%E5%B7%B2%E7%BB%8F%E7%BB%99%E5%87%BA%EF%BC%8C%E8%BF%99%E5%AF%B9%E6%88%91%E4%BB%AC%E5%9B%A2%E9%98%9F%E6%9D%A5%E8%AF%B4%E6%98%AF%E5%BE%88%E9%87%8D%E8%A6%81%E7%9A%84%E5%B8%AE%E5%8A%A9%EF%BC%8C%E9%9D%9E%E5%B8%B8%E6%84%9F%E8%B0%A2%E4%BD%9C%E8%80%85%E7%9A%84%E8%B4%A1%E7%8C%AE%E3%80%82">https://github.com/linuxdeepin/wiki.deepin.org已经给出，这对我们团队来说是很重要的帮助，非常感谢作者的贡献。</a></p><p>但这初始的数据仍需要进行进一步的处理，比如通过清除噪声、处理错误和标准化数据，能够构建一个高质量的知识库，是文档问答机器人的开发的最重要的步骤。我们团队在ChatGpt的帮组下，对文档进行进一步的加工处理，将文档的无用数据和图片等杂乱的数据进行整理，为下一步的文档处理做准备。接下来进行分词、词性标注、命名实体识别等技术。这也是开发中不可避免的难题。</p><p>其次，就是自然语言的处理，比如上下文理解：在处理用户的连续性问题时，理解上下文变得至关重要。我们团队尝试了一些技术来捕捉问题之间的关联性，包括使用循环神经网络（RNN）和注意力机制。这样，机器人就能更好地理解问题的语境，并提供更准确、连贯的回答。同时，我们团队也学习并解决了对话中的指代消解和上下文跟踪等问题，以确保机器人能够正确理解用户意图。</p><p>最后，就是用户界面设计。通过友好的界面，用户可以直观地与机器人进行交互，获取想要的信息。我们团队采用了Web的方式，但我们团队是第一次见进行PythonWeb的开发，这是一次挑战，我们团队分工明确，团队中的两个人进行PythonWeb中的Flask框架进行开发与学习，另外一个人则进行前端的开发与学习，共同克服这个难题。</p><h2 id="4-收获与心得"><a href="#4-收获与心得" class="headerlink" title="4.收获与心得"></a>4.收获与心得</h2><p>通过这个项目，我们不仅获得了丰富的技术知识和实践经验，还积累了宝贵的收获和心得。首先，我们深刻理解了机器学习和自然语言处理的重要性，以及它们在文档问答机器人开发中的应用。通过学习和实践，我们掌握了深度学习算法、语义理解技术和信息检索方法，这些都为我们未来在人工智能领域的发展奠定了坚实的基础。</p><p>其次，这个项目提升了我们的编程能力和解决问题的能力。在开发过程中，我们面临了许多挑战和难题，如数据清洗和预处理、模型训练和优化、界面设计等。通过分析和解决这些问题，我们学会了灵活运用编程技巧和工具，提高了自己的代码质量和效率。</p><p>此外，这个项目让我们更加了解了Deepin系统，深入探索了其功能和特点。通过与Deepin系统百科文档的学习和交流，我们也为Deepin系统的用户体验做出了一点贡献。不仅拓宽了我们的视野，也增强了我们的团队合作和沟通能力。</p><p>最重要的是，这个项目让我们意识到人工智能技术对于改善用户体验和解决实际问题的巨大潜力。文档问答机器人是人工智能在操作系统中的应用之一，它能够为用户提供准确、实时的帮助和指导。这种技术的发展不仅可以提高用户的工作效率，还能够推动操作系统的进化和智能化。</p><h2 id="5-未来展望"><a href="#5-未来展望" class="headerlink" title="5.未来展望"></a>5.未来展望</h2><p>我相信，文档问答机器人的开发只是深度科技发展道路上的一个起点，我将继续学习和探索，为构建更智能、更人性化的系统和应用而努力。</p><p>在未来，我们期待文档问答机器人在以下方面的进一步发展：</p><ol><li>深度学习和语义理解：随着深度学习和语义理解技术的进步，文档问答机器人将能够更好地理解用户问题的含义，提供更准确、个性化的答案。</li><li>情感分析和用户情境感知：文档问答机器人可以通过情感分析技术了解用户的情感状态，并相应地调整回答的语气和态度。此外，它们还可以通过感知用户的情境信息，如位置、时间等，提供更加定制化的帮助。</li><li>多语言支持和跨文化适应：随着全球化的推进，文档问答机器人需要具备多语言支持能力，能够理解和回答来自不同语言和文化背景的用户问题。这将为用户提供更广泛的服务范围，并促进跨文化交流和合作。</li><li>智能推荐和个性化建议：文档问答机器人可以通过分析用户的历史问题和行为模式，提供智能推荐和个性化建议。它们可以根据用户的偏好和需求，推荐相关的操作系统功能、应用程序或设置，进一步提升用户体验。</li><li>社区参与和开放平台：文档问答机器人可以与操作系统的用户社区进行深度融合，允许用户共享知识、提供反馈和建议。这种开放的参与机制将推动机器人的不断改进和增强，从而更好地满足用户需求。</li></ol><p>文档问答机器人作为操作系统的智能助手，为用户提供了便捷、高效的帮助和信息获取渠道。随着技术的不断进步和创新，我们可以期待这些机器人在未来发挥更重要的作用，通过智能化的方式改善用户体验，推动操作系统的进化和发展。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb</title>
      <link href="/2024/05/13/JavaWeb/"/>
      <url>/2024/05/13/JavaWeb/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaWeb笔记"><a href="#JavaWeb笔记" class="headerlink" title="JavaWeb笔记"></a>JavaWeb笔记<br><br></h1><h2 id="0-web标准"><a href="#0-web标准" class="headerlink" title="0.web标准"></a>0.web标准</h2><p><img src="/2024/05/13/JavaWeb/image-20240411200521512-1714791835745-3.png" alt="image-20240411200521512"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[w3school 在线教程](https://www.w3school.com.cn/)</span><br><span class="line">这里面可以找到HTML/CSS/JS的所有语法</span><br></pre></td></tr></table></figure><h2 id="1-标签语法"><a href="#1-标签语法" class="headerlink" title="1.标签语法"></a>1.标签语法</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110022693-1714791835745-4.png" alt="image-20240504110022693"></p><p><em><strong>*加粗语法*</strong></em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>我是帅哥<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span> 换行</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span> 水平线</span><br></pre></td></tr></table></figure><h2 id="2-HTML基本骨架（快速生成方法：-！加Enter键或者Tab键）"><a href="#2-HTML基本骨架（快速生成方法：-！加Enter键或者Tab键）" class="headerlink" title="2.HTML基本骨架（快速生成方法： ！加Enter键或者Tab键）"></a>2.HTML基本骨架（快速生成方法： ！加Enter键或者Tab键）</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110130176-1714791835745-5.png" alt="image-20240504110130176"></p><h2 id="3-标签的关系"><a href="#3-标签的关系" class="headerlink" title="3.标签的关系"></a>3.标签的关系</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110142670-1714791835745-7.png" alt="image-20240504110142670"></p><h2 id="4-注释"><a href="#4-注释" class="headerlink" title="4.注释"></a>4.注释</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释内容--&gt;</span> 使用ctrl+/进行快速生成注释</span><br></pre></td></tr></table></figure><h2 id="5-标签标题"><a href="#5-标签标题" class="headerlink" title="5.标签标题"></a>5.标签标题</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110151765-1714791835745-6.png" alt="image-20240504110151765"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标签<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-段落标签"><a href="#7-段落标签" class="headerlink" title="7.段落标签"></a>7.段落标签</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110204450-1714791835745-9.png" alt="image-20240504110204450"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-换行与水平线标签"><a href="#8-换行与水平线标签" class="headerlink" title="8.换行与水平线标签"></a>8.换行与水平线标签</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110213687-1714791835745-8.png" alt="image-20240504110213687"></p><h2 id="9-文本格式化标签"><a href="#9-文本格式化标签" class="headerlink" title="9.文本格式化标签"></a>9.文本格式化标签</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110222378-1714791835745-15.png" alt="image-20240504110222378"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span> 这是加粗的 <span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">del</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>可以复合使用</p><h2 id="10-图片（图形）标签"><a href="#10-图片（图形）标签" class="headerlink" title="10.图片（图形）标签"></a>10.图片（图形）标签</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110230846-1714791835745-11.png" alt="image-20240504110230846"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./图片.jpg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-图片属性（alt-title）"><a href="#11-图片属性（alt-title）" class="headerlink" title="11.图片属性（alt title）"></a>11.图片属性（alt title）</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110238549-1714791835745-10.png" alt="image-20240504110238549"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./图片.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;这是一个图片&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是图片&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1000&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-相对路径和绝对路径和网络路径"><a href="#12-相对路径和绝对路径和网络路径" class="headerlink" title="12.相对路径和绝对路径和网络路径"></a>12.相对路径和绝对路径和网络路径</h2><p>（不仅可以从本地路径 也可以从在线网址找）</p><p><img src="/2024/05/13/JavaWeb/image-20240504110249885-1714791835745-12.png" alt="image-20240504110249885"></p><p><img src="/2024/05/13/JavaWeb/image-20240504110254814-1714791835745-13.png" alt="image-20240504110254814"></p><h2 id="13-超链接a-href（不仅可以跳转网址-也可以跳转本地文件）"><a href="#13-超链接a-href（不仅可以跳转网址-也可以跳转本地文件）" class="headerlink" title="13.超链接a href（不仅可以跳转网址 也可以跳转本地文件）"></a>13.超链接a href（不仅可以跳转网址 也可以跳转本地文件）</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110302537-1714791835745-14.png" alt="image-20240504110302537"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/?tn=68018901_2_oem_dg&quot;</span>&gt;</span>跳转到百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="/2024/05/13/JavaWeb/image-20240504110311952-1714791835745-17.png" alt="image-20240504110311952"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./图片.jpg&quot;</span>&gt;</span>跳转到图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实现在新窗口进行跳转</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>跳转到百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以设置超链接的样式</p><p><img src="/2024/05/13/JavaWeb/image-20240411205238752-1714791835745-18.png" alt="image-20240411205238752"></p><p><img src="/2024/05/13/JavaWeb/image-20240411205300472-1714791835745-16.png" alt="image-20240411205300472"></p><h2 id="14-音频标签-audio"><a href="#14-音频标签-audio" class="headerlink" title="14.音频标签(audio)"></a>14.音频标签(audio)</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110325702-1714791835745-20.png" alt="image-20240504110325702"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./bgm.mp3&quot;</span> <span class="attr">controls</span> <span class="attr">loop</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="15-css嵌入html语句-从而修改样式"><a href="#15-css嵌入html语句-从而修改样式" class="headerlink" title="15.css嵌入html语句 从而修改样式"></a>15.css嵌入html语句 从而修改样式</h2><p><img src="/2024/05/13/JavaWeb/image-20240411203313020-1714791835745-19.png" alt="image-20240411203313020"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:red</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css文件&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color:red&quot;</span>&gt;</span>这是一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">del</span>&gt;</span>我很高兴<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">del</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>这是加粗的<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="16-无语义标签"><a href="#16-无语义标签" class="headerlink" title="16.无语义标签"></a>16.无语义标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="17-设置样式（元素选择器-id选择器-类选择器）"><a href="#17-设置样式（元素选择器-id选择器-类选择器）" class="headerlink" title="17.设置样式（元素选择器 id选择器 类选择器）"></a>17.设置样式（元素选择器 id选择器 类选择器）</h2><p><img src="/2024/05/13/JavaWeb/image-20240411204731655-1714791835745-21.png" alt="image-20240411204731655"></p><h2 id="18-视频标签"><a href="#18-视频标签" class="headerlink" title="18.视频标签"></a>18.视频标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;video/1.mp4&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="19-css页面布局"><a href="#19-css页面布局" class="headerlink" title="19.css页面布局"></a>19.css页面布局<img src="/2024/05/13/JavaWeb/image-20240411210233298-1714791835745-23.png" alt="image-20240411210233298"></h2><p><img src="/2024/05/13/JavaWeb/image-20240411210258999-1714791835745-22.png" alt="image-20240411210258999"></p><h2 id="20-css的盒子模型"><a href="#20-css的盒子模型" class="headerlink" title="20.css的盒子模型"></a>20.css的盒子模型</h2><p><img src="/2024/05/13/JavaWeb/image-20240411211444345-1714791835745-31.png" alt="image-20240411211444345"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aquamarine;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;<span class="comment">/* 内边距 上 右 下 左*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> solid red; <span class="comment">/*边框 宽度 线条类型*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span>;<span class="comment">/*外边距 上 右 下 左*/</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        今天是个好日子 哈哈哈哈哈哈哈  啦啦啦啦啦啦</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="21-表格标签"><a href="#21-表格标签" class="headerlink" title="21.表格标签"></a>21.表格标签</h2><p><img src="/2024/05/13/JavaWeb/image-20240418115537184-1714791835745-27.png" alt="image-20240418115537184"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- #border是设置边框的 cellspacing设置单元格之间空格 width是设置宽度的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>品牌logo<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>品牌名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>企业名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img2.baidu.com/it/u=2950888892,3212136858&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=JPEG?w=608&amp;h=375&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>华为<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>华为技术有限公司<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img0.baidu.com/it/u=2101785888,821758088&amp;fm=253&amp;fmt=auto&amp;app=120&amp;f=PNG?w=500&amp;h=500&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>阿里<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>阿里巴巴有限公司<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240418120216710-1714791835745-24.png" alt="image-20240418120216710"></p><h2 id="22-表单标签"><a href="#22-表单标签" class="headerlink" title="22.表单标签"></a>22.表单标签</h2><p><img src="/2024/05/13/JavaWeb/image-20240418120536559-1714791835745-25.png" alt="image-20240418120536559"></p><h2 id="23-表单标签-表单项"><a href="#23-表单标签-表单项" class="headerlink" title="23.表单标签-表单项"></a>23.表单标签-表单项</h2><p><img src="/2024/05/13/JavaWeb/image-20240418121850409-1714791835745-26.png" alt="image-20240418121850409"></p><h2 id="23-JavaScript引入方式"><a href="#23-JavaScript引入方式" class="headerlink" title="23.JavaScript引入方式"></a>23.JavaScript引入方式</h2><p><img src="/2024/05/13/JavaWeb/image-20240418122931638-1714791835745-28.png" alt="image-20240418122931638"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        内部脚本</span></span><br><span class="line"><span class="comment">        &lt;script&gt;</span></span><br><span class="line"><span class="comment">            alert(&quot;Hello&quot;)</span></span><br><span class="line"><span class="comment">         &lt;/script&gt;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 外部脚本 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./demo.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="24-JS输出语句"><a href="#24-JS输出语句" class="headerlink" title="24.JS输出语句"></a>24.JS输出语句</h2><p><img src="/2024/05/13/JavaWeb/image-20240418123713287-1714791835745-30.png" alt="image-20240418123713287"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="title function_">alert</span>(<span class="string">&quot;你好&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello world&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;123456&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="25-JS的变量"><a href="#25-JS的变量" class="headerlink" title="25.JS的变量"></a>25.JS的变量</h2><p><img src="/2024/05/13/JavaWeb/image-20240418124349628-1714791835746-37.png" alt="image-20240418124349628"></p><p>var定义的变量的作用域较大为全局变量 并且 可以重复定义(新定义的覆盖原来的)</p><h2 id="26-JS的数据类型"><a href="#26-JS的数据类型" class="headerlink" title="26.JS的数据类型"></a>26.JS的数据类型</h2><p><img src="/2024/05/13/JavaWeb/image-20240418124720539-1714791835745-29.png" alt="image-20240418124720539"></p><h2 id="27-JS的运算符"><a href="#27-JS的运算符" class="headerlink" title="27.JS的运算符"></a>27.JS的运算符</h2><p><img src="/2024/05/13/JavaWeb/image-20240418125427010-1714791835746-32.png" alt="image-20240418125427010"></p><h2 id="28-JS的函数"><a href="#28-JS的函数" class="headerlink" title="28.JS的函数"></a>28.JS的函数</h2><p><img src="/2024/05/13/JavaWeb/image-20240418125923375-1714791835746-33.png" alt="image-20240418125923375"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//定义函数方法1</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">add1</span>(<span class="params">a, b</span>)</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> a+b;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title function_">add1</span>(<span class="number">10</span>,<span class="number">20</span>));</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//定义函数方法2</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> add2 = <span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> a+b;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title function_">add2</span>(<span class="number">30</span>,<span class="number">40</span>));</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="29-JS的对象-Array-String-JSON-BOM-DOM"><a href="#29-JS的对象-Array-String-JSON-BOM-DOM" class="headerlink" title="29.JS的对象(Array String JSON BOM DOM)"></a>29.JS的对象(Array String JSON BOM DOM)</h2><p>(<a href="https://www.w3school.com.cn/jsref/index.asp">JavaScript 和 HTML DOM 参考手册 (w3school.com.cn)</a>)</p><h3 id="①Array对象"><a href="#①Array对象" class="headerlink" title="①Array对象"></a>①Array对象</h3><p><img src="/2024/05/13/JavaWeb/image-20240418131828890-1714791835746-36.png" alt="image-20240418131828890"></p><p><img src="/2024/05/13/JavaWeb/image-20240418132631175-1714791835746-34.png" alt="image-20240418132631175"></p><h3 id="②String对象"><a href="#②String对象" class="headerlink" title="②String对象"></a>②String对象</h3><p><img src="/2024/05/13/JavaWeb/image-20240418132724807-1714791835746-35.png" alt="image-20240418132724807"></p><h3 id="③JSON对象"><a href="#③JSON对象" class="headerlink" title="③JSON对象"></a>③JSON对象</h3><p><img src="/2024/05/13/JavaWeb/image-20240418133512458-1714791835746-38.png" alt="image-20240418133512458"></p><p><img src="/2024/05/13/JavaWeb/image-20240418133725356-1714791835746-40.png" alt="image-20240418133725356"></p><h3 id="④自定义的对象"><a href="#④自定义的对象" class="headerlink" title="④自定义的对象"></a>④自定义的对象</h3><p><img src="/2024/05/13/JavaWeb/image-20240418133129420-1714791835746-39.png" alt="image-20240418133129420"></p><h3 id="⑤BOM对象"><a href="#⑤BOM对象" class="headerlink" title="⑤BOM对象"></a>⑤BOM对象</h3><p><img src="/2024/05/13/JavaWeb/image-20240418133948048-1714791835746-41.png" alt="image-20240418133948048"></p><p>BOM中的Window对象</p><p><img src="/2024/05/13/JavaWeb/image-20240418134000286-1714791835746-42.png" alt="image-20240418134000286"></p><p><img src="/2024/05/13/JavaWeb/image-20240418134135375-1714791835746-46.png" alt="image-20240418134135375"></p><p>BOM中的location对象</p><p><img src="/2024/05/13/JavaWeb/image-20240418134801636-1714791835746-44.png" alt="image-20240418134801636"></p><h3 id="⑥DOM对象"><a href="#⑥DOM对象" class="headerlink" title="⑥DOM对象"></a>⑥DOM对象</h3><p><img src="/2024/05/13/JavaWeb/image-20240418135258700-1714791835746-48.png" alt="image-20240418135258700"></p><p><img src="/2024/05/13/JavaWeb/image-20240418135759844-1714791835746-43.png" alt="image-20240418135759844"></p><p>DOM案例（属性 函数参考<a href="https://www.w3school.com.cn/jsref/dom_obj_anchor.asp">HTML DOM Anchor 对象 (w3school.com.cn)</a>）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span> = <span class="string">&#x27;h1&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;https://img0.baidu.com/it/u=3854371968,2837637628&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=610&amp;h=486&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cls&quot;</span>&gt;</span>我是大帅比<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&#x27;cls&quot;</span>&gt;</span>12345 上山打老虎<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span> =<span class="string">&#x27;hobby&#x27;</span>&gt;</span> 电影</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span> =<span class="string">&#x27;hobby&#x27;</span>&gt;</span> 游戏</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span> =<span class="string">&#x27;hobby&#x27;</span>&gt;</span> 学习</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//点亮爱心</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> img = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;h1&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    img.<span class="property">src</span> = <span class="string">&quot;https://img0.baidu.com/it/u=1848150008,1086365409&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=640&amp;h=472&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//将所有div标签的内容后面加上very good</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> divs = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; divs.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        divs[i].<span class="property">innerHTML</span>+=<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt; very good &lt;/font&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//将所有复选框都呈现选中</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> hobbys = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;hobby&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; hobbys.<span class="property">length</span>; index++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> element = hobbys[index];</span></span><br><span class="line"><span class="language-javascript">        element.<span class="property">checked</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="30-JS时间监听"><a href="#30-JS时间监听" class="headerlink" title="30.JS时间监听"></a>30.JS时间监听</h2><p><img src="/2024/05/13/JavaWeb/image-20240418141823493-1714791835746-45.png" alt="image-20240418141823493"></p><p><img src="/2024/05/13/JavaWeb/image-20240418141852252-1714791835746-47.png" alt="image-20240418141852252"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;事件绑定1&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;on1()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;事件绑定2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">on1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;按钮1被点击&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn2&#x27;</span>).<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;按钮2被点击&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JS的常见事件</p><p><img src="/2024/05/13/JavaWeb/image-20240418142521557-1714791835746-49.png" alt="image-20240418142521557"></p><p>监控事件的案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span> = <span class="string">&#x27;h1&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;https://img0.baidu.com/it/u=3854371968,2837637628&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=610&amp;h=486&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点亮&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;on()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;熄灭&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;off()&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ABCDEF&quot;</span> <span class="attr">onfocus</span>=<span class="string">&quot;onf()&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;onb()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span> =<span class="string">&#x27;hobby&#x27;</span>&gt;</span> 电影</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span> =<span class="string">&#x27;hobby&#x27;</span>&gt;</span> 游戏</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span> =<span class="string">&#x27;hobby&#x27;</span>&gt;</span> 学习</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;全选&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkall()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;反选&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;cancleall()&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//点亮爱心</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">on</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> img = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;h1&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        img.<span class="property">src</span> = <span class="string">&quot;https://img0.baidu.com/it/u=1848150008,1086365409&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=640&amp;h=472&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//熄灭爱心</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">off</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> img = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;h1&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        img.<span class="property">src</span> = <span class="string">&quot;https://img0.baidu.com/it/u=3854371968,2837637628&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=610&amp;h=486&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//输入聚焦框后 展示小写 离开后 展示大写</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//聚焦-----&gt;小写</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">onf</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tmp = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;name&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        tmp.<span class="property">value</span> = tmp.<span class="property">value</span>.<span class="title function_">toLowerCase</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//离开----&gt;大写</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">onb</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tmp = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;name&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        tmp.<span class="property">value</span> = tmp.<span class="property">value</span>.<span class="title function_">toUpperCase</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//点击全选就全选 点击反选就全部取消</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">checkall</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> array = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;hobby&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; array.<span class="property">length</span>; index++) &#123;</span></span><br><span class="line"><span class="language-javascript">           array[index].<span class="property">checked</span>=<span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">cancleall</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> array = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;hobby&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; array.<span class="property">length</span>; index++) &#123;</span></span><br><span class="line"><span class="language-javascript">            array[index].<span class="property">checked</span>=<span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="31-VUE"><a href="#31-VUE" class="headerlink" title="31.VUE"></a>31.VUE</h2><p><img src="/2024/05/13/JavaWeb/image-20240418145820809-1714791835746-53.png" alt="image-20240418145820809"></p><p><img src="/2024/05/13/JavaWeb/image-20240418145935496-1714791835746-50.png" alt="image-20240418145935496"></p><h2 id="32-vue2的导入链接-和-vue2的导入链接"><a href="#32-vue2的导入链接-和-vue2的导入链接" class="headerlink" title="32.vue2的导入链接 和 vue2的导入链接"></a>32.vue2的导入链接 和 vue2的导入链接</h2><p>vue2的导入链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>vue2的导入链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>示例代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; message &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app =<span class="keyword">new</span> <span class="title class_">Vue</span>(</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,<span class="comment">//id选择器选择的是id为app的项</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>:<span class="string">&quot;Hello World!&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  )</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240418161052438-1714791835746-52.png" alt="image-20240418161052438"></p><h2 id="33-vue的常用指令"><a href="#33-vue的常用指令" class="headerlink" title="33.vue的常用指令"></a>33.vue的常用指令</h2><p><img src="/2024/05/13/JavaWeb/image-20240418161652627-1714791835746-51.png" alt="image-20240418161652627"></p><h3 id="①v-bind指令和v-model指令"><a href="#①v-bind指令和v-model指令" class="headerlink" title="①v-bind指令和v-model指令"></a>①v-bind指令和v-model指令</h3><p><img src="/2024/05/13/JavaWeb/image-20240418161819074-1714791835746-54.png" alt="image-20240418161819074"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 根据输入的文本框的内容会导致url发生改变 因为他们发生了链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//通过v-bind和v-model所绑定的值 必须在data里面给出</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>:<span class="string">&quot;https://www.baidu.com&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="②v-on指令"><a href="#②v-on指令" class="headerlink" title="②v-on指令"></a>②v-on指令</h3><p><img src="/2024/05/13/JavaWeb/image-20240418162639506-1714791835746-55.png" alt="image-20240418162639506"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;handle()&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 省略的写法 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handle()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">handle</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;被点击了一下&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="③v-if-v-else-if-v-else-v-show"><a href="#③v-if-v-else-if-v-else-v-show" class="headerlink" title="③v-if   v-else-if   v-else    v-show"></a>③v-if   v-else-if   v-else    v-show</h3><p><img src="/2024/05/13/JavaWeb/image-20240418163033720-1714791835746-56.png" alt="image-20240418163033720"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        年龄<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;age&quot;</span>&gt;</span>经判定，为:</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;age&lt;=35&quot;</span>&gt;</span>年轻人(35及以下)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;age&gt;35 &amp;&amp; age &lt; 60&quot;</span>&gt;</span>中年人(35-60)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>老年人(60以上)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        年龄<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;age&quot;</span>&gt;</span>经判定，为:</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;age&lt;=35&quot;</span>&gt;</span>年轻人(35及以下)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;age&gt;35 &amp;&amp; age &lt; 60&quot;</span>&gt;</span>中年人(35-60)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;age&gt;=60&quot;</span>&gt;</span>老年人(60以上)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">age</span>:<span class="number">20</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="④v-for指令"><a href="#④v-for指令" class="headerlink" title="④v-for指令"></a>④v-for指令</h3><p><img src="/2024/05/13/JavaWeb/image-20240418163859137-1714791835746-59.png" alt="image-20240418163859137"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;addr in addrs&quot;</span>&gt;</span>&#123;&#123;addr&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(addr,index) in addrs&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125; : &#123;&#123;addr&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">addrs</span>:[<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;广州&quot;</span>,<span class="string">&quot;武汉&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="34-VUE的综合简单案例"><a href="#34-VUE的综合简单案例" class="headerlink" title="34.VUE的综合简单案例"></a>34.VUE的综合简单案例</h2><p><img src="/2024/05/13/JavaWeb/image-20240418165653598-1714791835746-57.png" alt="image-20240418165653598"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60%&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>等级<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(user,index) in users&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;index+1&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;user.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;user.age&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;user.gender==1&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;user.gender==2&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;user.score&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;user.score&gt;=85&quot;</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;user.score&gt;=60&quot;</span>&gt;</span>及格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:red&quot;</span> <span class="attr">v-else</span>&gt;</span>不及格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">users</span>:[&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&quot;TOM&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">age</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">gender</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>:<span class="number">78</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&quot;ROSE&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">age</span>:<span class="number">19</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">gender</span>:<span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>:<span class="number">88</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&quot;JERRY&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">age</span>:<span class="number">26</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">gender</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>:<span class="number">90</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&quot;JACK&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">age</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">gender</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>:<span class="number">30</span></span></span><br><span class="line"><span class="language-javascript">            &#125;]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="35-VUE的生命周期"><a href="#35-VUE的生命周期" class="headerlink" title="35.VUE的生命周期"></a>35.VUE的生命周期</h2><p><img src="/2024/05/13/JavaWeb/image-20240418165847591-1714791835746-58.png" alt="image-20240418165847591"></p><p><img src="/2024/05/13/JavaWeb/image-20240418165758711-1714791835746-63.png" alt="image-20240418165758711"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//自动调用 无需程序员来调用</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&quot;挂载完成 发送请求到服务端&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="36-Ajax"><a href="#36-Ajax" class="headerlink" title="36.Ajax"></a>36.Ajax</h2><p><img src="/2024/05/13/JavaWeb/image-20240420134614819-1714791835746-60.png" alt="image-20240420134614819"></p><p><img src="/2024/05/13/JavaWeb/image-20240420134826096-1714791835746-62.png" alt="image-20240420134826096"></p><h2 id="37-Axios"><a href="#37-Axios" class="headerlink" title="37.Axios"></a>37.Axios</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入js文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于原生的Ajax访问请求数据极为繁琐 于是就出现了封装的Axios</p><p>Axios 是一个基于 <em><a href="https://javascript.info/promise-basics">promise</a></em> 网络请求库，作用于<a href="https://nodejs.org/"><code>node.js</code></a> 和浏览器中。 它是 <em><a href="https://www.lullabot.com/articles/what-is-an-isomorphic-application">isomorphic</a></em> 的(即同一套代码可以运行在浏览器和node.js中)。在服务端它使用原生 node.js <code>http</code> 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p><img src="/2024/05/13/JavaWeb/image-20240420141738887-1714791835746-66.png" alt="image-20240420141738887"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入js文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;读取数据&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;getData()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;删除数据&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;postData()&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">getData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//通过axios发送异步请求get</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">method</span>:<span class="string">&quot;get&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>:<span class="string">&quot;https://mock.apifox.cn/m1/3128855-0-default/emp/list&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">postData</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//通过axios发送异步请求post</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">method</span>:<span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>:<span class="string">&quot;https://mock.apifox.cn/m1/3128855-0-default/emp/deleteById&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:<span class="string">&quot;id=1&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>封装成函数的简化后：</p><p><img src="/2024/05/13/JavaWeb/image-20240420143057890-1714791835746-61.png" alt="image-20240420143057890"></p><h3 id="Axios的案例"><a href="#Axios的案例" class="headerlink" title="Axios的案例"></a>Axios的案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入js文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60%&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>图像<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>职位<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>入职日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>最后操作时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(emp,index) in emps&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;index+1&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;emp.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;emp.image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;70px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;50px&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;emp.gender==1&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;emp.gender==2&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;emp.job&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;emp.entrydate&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;emp.updatetime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">emps</span>:[]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//发送异步请求 加载数据</span></span></span><br><span class="line"><span class="language-javascript">            axios.<span class="title function_">get</span>(<span class="string">&quot;https://mock.apifox.cn/m1/3128855-0-default/emp/list&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">emps</span>=result.<span class="property">data</span>.<span class="property">data</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//将数据返回到emps上</span></span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240420150514345-1714791835746-64.png" alt="image-20240420150514345"></p><h2 id="38-Vue-cil"><a href="#38-Vue-cil" class="headerlink" title="38.Vue-cil"></a>38.Vue-cil</h2><p>vue的npm镜像</p><p>npm config set registry <a href="https://mirrors.huaweicloud.com/repository/npm/">https://mirrors.huaweicloud.com/repository/npm/</a>  （华为）</p><p>npm config set registry <a href="http://mirrors.cloud.tencent.com/npm/">http://mirrors.cloud.tencent.com/npm/</a>   （腾讯）</p><p><img src="/2024/05/13/JavaWeb/image-20240420153052819-1714791835746-65.png" alt="image-20240420153052819"></p><p>进入vue的方式</p><p><img src="/2024/05/13/JavaWeb/image-20240421102241265-1714791835746-67.png" alt="image-20240421102241265"></p><p>vue项目的目录结构</p><p><img src="/2024/05/13/JavaWeb/image-20240421102504749-1714791835746-68.png" alt="image-20240421102504749"></p><p>运行npm的方法</p><p>ctrl+shift+p 搜索npm 然后选择serve运行即可</p><h2 id="39-修改vue项目的端口号"><a href="#39-修改vue项目的端口号" class="headerlink" title="39.修改vue项目的端口号"></a>39.修改vue项目的端口号</h2><p><img src="/2024/05/13/JavaWeb/image-20240421104150950-1714791835746-69.png" alt="image-20240421104150950"></p><h2 id="40-Vue项目的开发"><a href="#40-Vue项目的开发" class="headerlink" title="40.Vue项目的开发"></a>40.Vue项目的开发</h2><p><img src="/2024/05/13/JavaWeb/image-20240421105004460-1714791835746-71.png" alt="image-20240421105004460"></p><h2 id="41-Vue的Element组件库"><a href="#41-Vue的Element组件库" class="headerlink" title="41.Vue的Element组件库"></a>41.Vue的Element组件库</h2><p>参考文档：<a href="https://element.eleme.cn/#/zh-CNListener">https://element.eleme.cn/#/zh-CNListener</a></p><p><img src="/2024/05/13/JavaWeb/image-20240421114702395-1714791835746-70.png" alt="image-20240421114702395"></p><p>主要就是为了美化各种组件，图形等</p><p><img src="/2024/05/13/JavaWeb/image-20240421105421524-1714791835746-72.png" alt="image-20240421105421524"></p><p>①安装组件</p><p>②在main.js中引入ElementUi组件库</p><p>③创建一个ElementView.vue的文件 里面存放的是官网中的组件代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 按钮 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>④在App.vue中导入我的ElementView.vue文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">element-view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">element-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ElementView</span> <span class="keyword">from</span> <span class="string">&#x27;./views/element/ElementView.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>:&#123;<span class="title class_">ElementView</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">message</span>:<span class="string">&quot;Hello World&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="42-Vue项目的部署"><a href="#42-Vue项目的部署" class="headerlink" title="42.Vue项目的部署"></a>42.Vue项目的部署</h2><p><img src="/2024/05/13/JavaWeb/image-20240421143702603-1714791835746-73.png" alt="image-20240421143702603"></p><h2 id="43-Maven学习（Maven就是管理和构建java项目的工具）"><a href="#43-Maven学习（Maven就是管理和构建java项目的工具）" class="headerlink" title="43.Maven学习（Maven就是管理和构建java项目的工具）"></a>43.Maven学习（Maven就是管理和构建java项目的工具）</h2><p><img src="/2024/05/13/JavaWeb/image-20240421145323514-1714791835746-74.png" alt="image-20240421145323514"></p><p><img src="/2024/05/13/JavaWeb/image-20240421145334959-1714791835746-75.png" alt="image-20240421145334959"></p><p><img src="/2024/05/13/JavaWeb/image-20240421145504410-1714791835746-76.png" alt="image-20240421145504410"></p><h2 id="44-创建Maven项目的时候出现问题解决办法"><a href="#44-创建Maven项目的时候出现问题解决办法" class="headerlink" title="44.创建Maven项目的时候出现问题解决办法"></a>44.创建Maven项目的时候出现问题解决办法</h2><p><img src="/2024/05/13/JavaWeb/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALiBudWxs,size_20,color_FFFFFF,t_70,g_se,x_16.png" alt="img"></p><p>只需要再pom.xml文件加入下面的代码即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">maven.compiler.encoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>11<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="45-导入Maven文件"><a href="#45-导入Maven文件" class="headerlink" title="45.导入Maven文件"></a>45.导入Maven文件</h2><p>只需要导入pox.xml文件即可</p><p><img src="/2024/05/13/JavaWeb/image-20240421162121039-1714791835746-77.png" alt="image-20240421162121039"></p><h2 id="46-依赖配置"><a href="#46-依赖配置" class="headerlink" title="46.依赖配置"></a>46.依赖配置</h2><p>依赖的参考链接为：mvnrepository.com</p><p><img src="/2024/05/13/JavaWeb/image-20240421163350608-1714791835746-78.png" alt="image-20240421163350608"></p><p>依赖具有传递性 配置一个依赖的时候 会顺便导入父项的依赖</p><p>排除依赖的语法</p><p><img src="/2024/05/13/JavaWeb/image-20240421163900237-1714791835746-79.png" alt="image-20240421163900237"></p><h2 id="47-依赖范围"><a href="#47-依赖范围" class="headerlink" title="47.依赖范围"></a>47.依赖范围</h2><p><img src="/2024/05/13/JavaWeb/image-20240421164028172-1714791835746-81.png" alt="image-20240421164028172"></p><h2 id="48-Maven生命周期"><a href="#48-Maven生命周期" class="headerlink" title="48.Maven生命周期"></a>48.Maven生命周期</h2><p><img src="/2024/05/13/JavaWeb/image-20240421164531839-1714791835746-80.png" alt="image-20240421164531839"></p><p><img src="/2024/05/13/JavaWeb/image-20240421164600894-1714791835746-82.png" alt="image-20240421164600894"></p><h2 id="49-Spring-官网：Spring-Home"><a href="#49-Spring-官网：Spring-Home" class="headerlink" title="49.Spring(官网：Spring | Home)"></a>49.Spring(官网：<a href="https://spring.io/">Spring | Home</a>)</h2><p>Spring是一个强大的Java开发框架，而Spring Boot是在Spring框架基础上构建的简化开发的工具</p><p>Spring提供了很多模块，用于处理不同的方面，如数据访问、Web开发、安全性等。开发者可以根据自己的需求选择合适的模块来构建应用程序。Spring框架也很受欢迎，因为它具有广泛的社区支持和丰富的文档资源。</p><p>Spring Boot则是在Spring框架基础上构建的一种简化开发的框架。它旨在减少开发者在构建应用程序时需要进行的繁琐配置和集成工作。Spring Boot通过自动配置和约定大于配置的原则，让开发者能够快速启动和运行应用程序，而无需太多的手动配置。</p><h2 id="50-SpringBootWeb入门"><a href="#50-SpringBootWeb入门" class="headerlink" title="50.SpringBootWeb入门"></a>50.SpringBootWeb入门</h2><p>Springboot的url选择阿里云的镜像网站可选java11（<a href="https://start.aliyun.com)/">https://start.aliyun.com）</a></p><p>注意：</p><p>在idea2023中 创建springboot后 编译器自动创建了BasicController 如果再重复创建会报错</p><p>通过(localhost:8080&#x2F;hello)来调用 同时可以(<a href="http://127.0.0.1:8080/hello?name=lisi)%E9%97%AE%E5%8F%B7%E5%90%8E%E9%9D%A2%E6%98%AF%E5%8F%82%E6%95%B0">http://127.0.0.1:8080/hello?name=lisi)问号后面是参数</a></p><p><img src="/2024/05/13/JavaWeb/image-20240425123005182-1714791835746-84.png" alt="image-20240425123005182"></p><p><img src="/2024/05/13/JavaWeb/image-20240425123033278-1714791835746-83.png" alt="image-20240425123033278"></p><p><img src="/2024/05/13/JavaWeb/image-20240425131842816-1714791835746-87.png" alt="image-20240425131842816"></p><h2 id="51-HTTP协议"><a href="#51-HTTP协议" class="headerlink" title="51.HTTP协议"></a>51.HTTP协议</h2><p><img src="/2024/05/13/JavaWeb/image-20240425123700067-1714791835746-86.png" alt="image-20240425123700067"></p><h3 id="①HTTP请求协议"><a href="#①HTTP请求协议" class="headerlink" title="①HTTP请求协议"></a>①HTTP请求协议</h3><p><img src="/2024/05/13/JavaWeb/image-20240425124234588-1714791835746-85.png" alt="image-20240425124234588"></p><p><img src="/2024/05/13/JavaWeb/image-20240425124150492-1714791835746-89.png" alt="image-20240425124150492"></p><h3 id="②HTTP响应协议"><a href="#②HTTP响应协议" class="headerlink" title="②HTTP响应协议"></a>②HTTP响应协议</h3><p><img src="/2024/05/13/JavaWeb/image-20240425125326011-1714791835746-88.png" alt="image-20240425125326011"></p><p>响应头</p><p><img src="/2024/05/13/JavaWeb/image-20240425125348424-1714791835746-90.png" alt="image-20240425125348424"></p><p>响应行的状态码</p><p>状态码大全：<a href="https://cloud.tencent.com/developer/chapter/13553">https://cloud.tencent.com/developer/chapter/13553</a> </p><p><img src="/2024/05/13/JavaWeb/image-20240425125032738-1714791835746-94.png" alt="image-20240425125032738"></p><h2 id="52-Web服务器（Tomcat）"><a href="#52-Web服务器（Tomcat）" class="headerlink" title="52.Web服务器（Tomcat）"></a>52.Web服务器（Tomcat）</h2><p><img src="/2024/05/13/JavaWeb/image-20240425130603945-1714791835746-91.png" alt="image-20240425130603945"></p><p><img src="/2024/05/13/JavaWeb/image-20240425130000882-1714791835746-93.png" alt="image-20240425130000882"></p><p>由于程序员自己书写服务端和客户端的代码量极大 所以出现了已经封装好的web服务器</p><p>只需要将程序的代码部署到web服务器上即可 程序员就只需要关注当前的业务逻辑</p><p><img src="/2024/05/13/JavaWeb/image-20240425130455150-1714791835746-92.png" alt="image-20240425130455150"></p><h2 id="53-Tomcat基本使用"><a href="#53-Tomcat基本使用" class="headerlink" title="53.Tomcat基本使用"></a>53.Tomcat基本使用</h2><p><img src="/2024/05/13/JavaWeb/image-20240425130747386-1714791835746-96.png" alt="image-20240425130747386"></p><p>如果端口号冲突</p><p><img src="/2024/05/13/JavaWeb/image-20240425131055552-1714791835746-95.png" alt="image-20240425131055552"></p><h2 id="54-请求响应"><a href="#54-请求响应" class="headerlink" title="54.请求响应"></a>54.请求响应</h2><p><img src="/2024/05/13/JavaWeb/image-20240425132532548-1714791835746-97.png" alt="image-20240425132532548"></p><p>postman的使用</p><p><img src="/2024/05/13/JavaWeb/image-20240425133725280-1714791835746-101.png" alt="image-20240425133725280"></p><h2 id="55-简单参数（原始方式和SpringBoot方式）"><a href="#55-简单参数（原始方式和SpringBoot方式）" class="headerlink" title="55.简单参数（原始方式和SpringBoot方式）"></a>55.简单参数（原始方式和SpringBoot方式）</h2><p><img src="/2024/05/13/JavaWeb/image-20240425140801332-1714791835746-99.png" alt="image-20240425140801332"></p><p><img src="/2024/05/13/JavaWeb/image-20240425141122209-1714791835746-98.png" alt="image-20240425141122209"></p><p><img src="/2024/05/13/JavaWeb/image-20240425141419021-1714791835746-100.png" alt="image-20240425141419021"></p><p><img src="/2024/05/13/JavaWeb/image-20240425150352210-1714791835746-102.png" alt="image-20240425150352210"></p><h2 id="56-实体参数"><a href="#56-实体参数" class="headerlink" title="56.实体参数"></a>56.实体参数</h2><p>只需要名称对应即可</p><p><img src="/2024/05/13/JavaWeb/image-20240425142200646-1714791835746-103.png" alt="image-20240425142200646"></p><h2 id="57-数组集合参数"><a href="#57-数组集合参数" class="headerlink" title="57.数组集合参数"></a>57.数组集合参数</h2><h3 id="数组参数"><a href="#数组参数" class="headerlink" title="数组参数"></a>数组参数</h3><p><img src="/2024/05/13/JavaWeb/image-20240425143102659-1714791835747-104.png" alt="image-20240425143102659"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/arrayparam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">arrayparam</span><span class="params">(String []hobby)</span>&#123;</span><br><span class="line">        System.out.println(Arrays.toString(hobby));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240425143004551-1714791835747-107.png" alt="image-20240425143004551"></p><h3 id="集合参数"><a href="#集合参数" class="headerlink" title="集合参数"></a>集合参数</h3><p><img src="/2024/05/13/JavaWeb/image-20240425143127787-1714791835747-105.png" alt="image-20240425143127787"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/listparam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">listparam</span><span class="params">(<span class="meta">@RequestParam</span> List&lt;String&gt; hobby)</span>&#123;</span><br><span class="line">        System.out.println(hobby);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240425143430179-1714791835747-106.png" alt="image-20240425143430179"></p><h2 id="58-日期参数"><a href="#58-日期参数" class="headerlink" title="58.日期参数"></a>58.日期参数</h2><p><img src="/2024/05/13/JavaWeb/image-20240425144053417-1714791835747-108.png" alt="image-20240425144053417"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/dateparam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">dateparam</span><span class="params">(<span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span>LocalDateTime updatetime)</span>&#123;</span><br><span class="line">        System.out.println(updatetime);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240425144102187-1714791835747-109.png" alt="image-20240425144102187"></p><h2 id="59-Json格式参数"><a href="#59-Json格式参数" class="headerlink" title="59.Json格式参数"></a>59.Json格式参数</h2><p><img src="/2024/05/13/JavaWeb/image-20240425145640505-1714791835747-110.png" alt="image-20240425145640505"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/jsonparam&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">jsonparam</span><span class="params">(<span class="meta">@RequestBody</span> user u)</span>&#123;</span><br><span class="line">        System.out.println(u);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240425145705322-1714791835747-111.png" alt="image-20240425145705322"></p><h2 id="60-路径参数"><a href="#60-路径参数" class="headerlink" title="60.路径参数"></a>60.路径参数</h2><p><img src="/2024/05/13/JavaWeb/image-20240425150123757-1714791835747-113.png" alt="image-20240425150123757"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/path/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">pathparam</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span>&#123;</span><br><span class="line">        System.out.println(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240425150131464-1714791835747-114.png" alt="image-20240425150131464"></p><h2 id="61-响应数据"><a href="#61-响应数据" class="headerlink" title="61.响应数据"></a>61.响应数据</h2><p>代码中一般使用@RestController</p><p>@RestController&#x3D;@Contorller+@RespondBody</p><p><img src="/2024/05/13/JavaWeb/image-20240425151133755-1714791835747-112.png" alt="image-20240425151133755"></p><p><img src="/2024/05/13/JavaWeb/image-20240425151608154-1714791835747-117.png" alt="image-20240425151608154"></p><p>统一响应结果</p><p><img src="/2024/05/13/JavaWeb/image-20240425151657773-1714791835747-115.png" alt="image-20240425151657773"></p><p>由于数据的响应不唯一 所以定义一个统一的Result类 来统一返回的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootwebstudy01.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统一响应结果封装类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer code;<span class="comment">//1 成功 , 0 失败</span></span><br><span class="line">    <span class="keyword">private</span> String msg; <span class="comment">//提示信息</span></span><br><span class="line">    <span class="keyword">private</span> Object data; <span class="comment">//数据 data</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">(Integer code, String msg, Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">1</span>, <span class="string">&quot;success&quot;</span>, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">1</span>, <span class="string">&quot;success&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">error</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(<span class="number">0</span>, msg, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Result&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;code=&quot;</span> + code +</span><br><span class="line">                <span class="string">&quot;, msg=&#x27;&quot;</span> + msg + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, data=&quot;</span> + data +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240425153502435-1714791835747-116.png" alt="image-20240425153502435"></p><p><img src="/2024/05/13/JavaWeb/image-20240425153521085-1714791835747-118.png" alt="image-20240425153521085"></p><h2 id="62-请求响应实例"><a href="#62-请求响应实例" class="headerlink" title="62.请求响应实例"></a>62.请求响应实例</h2><p><img src="/2024/05/13/JavaWeb/image-20240425154259704-1714791835747-119.png" alt="image-20240425154259704"></p><p><img src="/2024/05/13/JavaWeb/image-20240425160059151-1714791835747-120.png" alt="image-20240425160059151"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Controller程序</span></span><br><span class="line"><span class="keyword">package</span> com.example.springbootwebstudy01.demos.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.pojo.Emp;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.pojo.Result;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.utils.XmlParserUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Empcontroller</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/listEmp&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">list</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.加载并解析emp.xml文件</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">file</span> <span class="operator">=</span><span class="built_in">this</span>.getClass().getClassLoader().getResource(<span class="string">&quot;emp.xml&quot;</span>).getFile();</span><br><span class="line">        <span class="comment">//将emp.xml文件转换成emp对象 并存入List&lt;Emp&gt;中</span></span><br><span class="line">        List&lt;Emp&gt; empList = XmlParserUtils.parse(file, Emp.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.对数据进行转换处理(gender,job)</span></span><br><span class="line">        empList.stream().forEach(emp -&gt; &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">gender</span> <span class="operator">=</span> emp.getGender();</span><br><span class="line">            <span class="keyword">if</span>(gender.equals(<span class="string">&quot;1&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setGender(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(gender.equals(<span class="string">&quot;2&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setGender(<span class="string">&quot;女&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> emp.getGender();</span><br><span class="line">            <span class="keyword">if</span>(job.equals(<span class="string">&quot;1&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;讲师&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(job.equals(<span class="string">&quot;2&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;班主任&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(job.equals(<span class="string">&quot;3&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;就业指导&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.响应数据</span></span><br><span class="line">        <span class="keyword">return</span> Result.success(empList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240425160604961-1714791835747-122.png" alt="image-20240425160604961"></p><h2 id="63-分层解耦-三层架构"><a href="#63-分层解耦-三层架构" class="headerlink" title="63.分层解耦-三层架构"></a>63.分层解耦-三层架构</h2><p><img src="/2024/05/13/JavaWeb/image-20240425161236381-1714791835747-121.png" alt="image-20240425161236381"></p><p><img src="/2024/05/13/JavaWeb/image-20240425161415088-1714791835747-123.png" alt="image-20240425161415088"></p><p><img src="/2024/05/13/JavaWeb/image-20240425162731282-1714791835747-124.png" alt="image-20240425162731282"></p><h3 id="DAO数据访问层（实现了接口）"><a href="#DAO数据访问层（实现了接口）" class="headerlink" title="DAO数据访问层（实现了接口）"></a>DAO数据访问层（实现了接口）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootwebstudy01.dao.imple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.dao.Empdao;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.pojo.Emp;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.utils.XmlParserUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpdaoA</span> <span class="keyword">implements</span> <span class="title class_">Empdao</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">listEmp</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.加载并解析emp.xml文件</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">file</span> <span class="operator">=</span><span class="built_in">this</span>.getClass().getClassLoader().getResource(<span class="string">&quot;emp.xml&quot;</span>).getFile();</span><br><span class="line">        <span class="comment">//将emp.xml文件转换成emp对象 并存入List&lt;Emp&gt;中</span></span><br><span class="line">        List&lt;Emp&gt; empList = XmlParserUtils.parse(file, Emp.class);</span><br><span class="line">        <span class="keyword">return</span> empList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Service逻辑处理层"><a href="#Service逻辑处理层" class="headerlink" title="Service逻辑处理层"></a>Service逻辑处理层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootwebstudy01.service.imple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.dao.Empdao;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.dao.imple.EmpdaoA;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.pojo.Emp;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.service.empservice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">empserviceA</span> <span class="keyword">implements</span> <span class="title class_">empservice</span> &#123;</span><br><span class="line">    <span class="comment">//面向接口的编程</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Empdao</span> <span class="variable">empdao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EmpdaoA</span>();</span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">listEmp</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用empdao获取emplist数据</span></span><br><span class="line">        List&lt;Emp&gt; empList = empdao.listEmp();</span><br><span class="line">        <span class="comment">//2.对数据进行转换处理(gender,job)</span></span><br><span class="line">        empList.stream().forEach(emp -&gt; &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">gender</span> <span class="operator">=</span> emp.getGender();</span><br><span class="line">            <span class="keyword">if</span>(gender.equals(<span class="string">&quot;1&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setGender(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(gender.equals(<span class="string">&quot;2&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setGender(<span class="string">&quot;女&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> emp.getGender();</span><br><span class="line">            <span class="keyword">if</span>(job.equals(<span class="string">&quot;1&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;讲师&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(job.equals(<span class="string">&quot;2&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;班主任&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(job.equals(<span class="string">&quot;3&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;就业指导&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> empList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Controller层-接收数据返回请求"><a href="#Controller层-接收数据返回请求" class="headerlink" title="Controller层 接收数据返回请求"></a>Controller层 接收数据返回请求</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.springbootwebstudy01.demos.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.pojo.Emp;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.pojo.Result;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.service.empservice;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.service.imple.empserviceA;</span><br><span class="line"><span class="keyword">import</span> com.example.springbootwebstudy01.utils.XmlParserUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Empcontroller</span> &#123;</span><br><span class="line">    <span class="comment">//面向接口的编程</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">empservice</span> <span class="variable">empser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">empserviceA</span>();</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/listEmp&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">list</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//调用empser获取数据</span></span><br><span class="line">        List&lt;Emp&gt; empList = empser.listEmp();</span><br><span class="line">        <span class="comment">//3.响应数据</span></span><br><span class="line">        <span class="keyword">return</span> Result.success(empList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="64-分层解耦-IDC和DI简单示例"><a href="#64-分层解耦-IDC和DI简单示例" class="headerlink" title="64.分层解耦-IDC和DI简单示例"></a>64.分层解耦-IDC和DI简单示例</h2><p><img src="/2024/05/13/JavaWeb/image-20240425163839421-1714791835747-125.png" alt="image-20240425163839421"></p><p><img src="/2024/05/13/JavaWeb/image-20240425164441558-1714791835747-129.png" alt="image-20240425164441558"></p><p><img src="/2024/05/13/JavaWeb/image-20240425164905894-1714791835747-127.png" alt="image-20240425164905894"></p><p><img src="/2024/05/13/JavaWeb/image-20240425164921560-1714791835747-126.png" alt="image-20240425164921560"></p><p><img src="/2024/05/13/JavaWeb/image-20240425164932379-1714791835747-128.png" alt="image-20240425164932379"></p><p><img src="/2024/05/13/JavaWeb/image-20240425164945239-1714791835747-130.png" alt="image-20240425164945239"></p><p>这样修改之后 当修改某个类的代码的时候 其它层就不需要动了</p><p>只需要将修改前的类不交给容器管理 把修改后的类交给容器管理（也就是加上@Component）</p><h2 id="65-分层解耦-IDC和DI详细介绍"><a href="#65-分层解耦-IDC和DI详细介绍" class="headerlink" title="65.分层解耦-IDC和DI详细介绍"></a>65.分层解耦-IDC和DI详细介绍</h2><p><img src="/2024/05/13/JavaWeb/image-20240425165624287-1714791835747-131.png" alt="image-20240425165624287"></p><p>bean的名称默认是—类名首字母小写—-</p><p><img src="/2024/05/13/JavaWeb/image-20240425165920153-1714791835747-132.png" alt="image-20240425165920153"></p><p><img src="/2024/05/13/JavaWeb/image-20240425170251182-1714791835747-133.png" alt="image-20240425170251182"></p><p><img src="/2024/05/13/JavaWeb/image-20240425170447142-1714791835747-134.png" alt="image-20240425170447142"></p><h2 id="66-Mybatis是什么？"><a href="#66-Mybatis是什么？" class="headerlink" title="66.Mybatis是什么？"></a>66.Mybatis是什么？</h2><p>我们做为后端程序开发人员，通常会使用Java程序来完成对数据库的操作。</p><p>Java程序操作数据库，现在主流的方式是：Mybatis。</p><p><img src="/2024/05/13/JavaWeb/image-20240426103015563-1714791835747-135.png" alt="image-20240426103015563"></p><h2 id="67-Mybatis快速入门（代码实例）"><a href="#67-Mybatis快速入门（代码实例）" class="headerlink" title="67.Mybatis快速入门（代码实例）"></a>67.Mybatis快速入门（代码实例）</h2><p><img src="/2024/05/13/JavaWeb/image-20240426103641390-1714791835747-136.png" alt="image-20240426103641390"></p><p><img src="/2024/05/13/JavaWeb/image-20240426112229769-1714791835747-137.png" alt="image-20240426112229769"></p><h4 id="测试类的代码"><a href="#测试类的代码" class="headerlink" title="测试类的代码"></a>测试类的代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Maven工程的测试类</span></span><br><span class="line"><span class="meta">@SpringBootTest</span> <span class="comment">//SpringBoot 整合单元测试的注解</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpringbootMybatisQuickstartApplicationTests</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testlistUser</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.list();</span><br><span class="line">        userList.stream().forEach(user-&gt;&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="UserMapper对象"><a href="#UserMapper对象" class="headerlink" title="UserMapper对象"></a>UserMapper对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//声明为Mapper类后 在运行的时候会自动生成该接口的实现类</span></span><br><span class="line"><span class="comment">//并且会将该对象交给IOC容器管理</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="comment">//查询全部用户信息</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from User&quot;)</span>   <span class="comment">//注解代表查询操作</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">list</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Recourser类中连接数据库"><a href="#Recourser类中连接数据库" class="headerlink" title="Recourser类中连接数据库"></a>Recourser类中连接数据库</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#驱动类名称</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">#数据库连接的url</span><br><span class="line">spring.datasource.url=jdbc:mysql:<span class="comment">//localhost:3306/mybatis</span></span><br><span class="line">#连接数据库的用户名</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">#连接数据库的密码</span><br><span class="line">spring.datasource.password=<span class="number">123456</span></span><br></pre></td></tr></table></figure><h4 id="User类"><a href="#User类" class="headerlink" title="User类"></a>User类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.Port;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Short age;</span><br><span class="line">    <span class="keyword">private</span> Short gender;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(Integer id, String name, Short age, Short gender, String phone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> age</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Short <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> age</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Short age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> gender</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Short <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gender</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(Short gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> phone</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;id = &quot;</span> + id + <span class="string">&quot;, name = &quot;</span> + name + <span class="string">&quot;, age = &quot;</span> + age + <span class="string">&quot;, gender = &quot;</span> + gender + <span class="string">&quot;, phone = &quot;</span> + phone + <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="配置SQL的提示"><a href="#配置SQL的提示" class="headerlink" title="配置SQL的提示"></a>配置SQL的提示</h4><p><img src="/2024/05/13/JavaWeb/image-20240427113725219-1714791835747-139.png" alt="image-20240427113725219"></p><h2 id="68-数据库连接池"><a href="#68-数据库连接池" class="headerlink" title="68.数据库连接池"></a>68.数据库连接池</h2><p><img src="/2024/05/13/JavaWeb/image-20240427124849001-1714791835747-140.png" alt="image-20240427124849001"></p><p><img src="/2024/05/13/JavaWeb/image-20240427125019128-1714791835747-138.png" alt="image-20240427125019128"></p><h3 id="切换连接池的操作"><a href="#切换连接池的操作" class="headerlink" title="切换连接池的操作"></a>切换连接池的操作</h3><p><img src="/2024/05/13/JavaWeb/image-20240427125106489-1714791835747-145.png" alt="image-20240427125106489"></p><h4 id="Druid数据库连接池的依赖"><a href="#Druid数据库连接池的依赖" class="headerlink" title="Druid数据库连接池的依赖"></a>Druid数据库连接池的依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="69-lombok"><a href="#69-lombok" class="headerlink" title="69.lombok"></a>69.lombok</h2><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>只需要加上注解 那么就拥有了他的方法</p><p><img src="/2024/05/13/JavaWeb/image-20240427130731917-1714791835747-141.png" alt="image-20240427130731917"></p><h4 id="引入lombok的依赖"><a href="#引入lombok的依赖" class="headerlink" title="引入lombok的依赖"></a>引入lombok的依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="70-Mybatis基础操作"><a href="#70-Mybatis基础操作" class="headerlink" title="70.Mybatis基础操作"></a>70.Mybatis基础操作</h2><h4 id="在-application-properties-中配置日志信息-可以在控制台得到操作记录"><a href="#在-application-properties-中配置日志信息-可以在控制台得到操作记录" class="headerlink" title="在 [application.properties] 中配置日志信息 可以在控制台得到操作记录"></a>在 [application.properties] 中配置日志信息 可以在控制台得到操作记录</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置mybatis的日志信息</span></span><br><span class="line"><span class="attr">mybatis.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240427140034497-1714791835747-143.png" alt="image-20240427140034497"></p><h4 id="如果一条语句执行两遍的解决方案"><a href="#如果一条语句执行两遍的解决方案" class="headerlink" title="如果一条语句执行两遍的解决方案"></a>如果一条语句执行两遍的解决方案</h4><p><img src="/2024/05/13/JavaWeb/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAeGhfRG9wYW1pbmU=,size_20,color_FFFFFF,t_70,g_se,x_16.png" alt="img"></p><h4 id="主键返回"><a href="#主键返回" class="headerlink" title="主键返回"></a>主键返回</h4><p><img src="/2024/05/13/JavaWeb/image-20240427144048142-1714791835747-142.png" alt="image-20240427144048142"></p><h4 id="查询操作返回的值因为名字不同而无法数据封装"><a href="#查询操作返回的值因为名字不同而无法数据封装" class="headerlink" title="查询操作返回的值因为名字不同而无法数据封装"></a>查询操作返回的值因为名字不同而无法数据封装</h4><p><img src="/2024/05/13/JavaWeb/image-20240427145819545-1714791835747-144.png" alt="image-20240427145819545"></p><h5 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h5><p>①查询的时候取别名</p><p><img src="/2024/05/13/JavaWeb/image-20240427150154787-1714791835747-147.png" alt="image-20240427150154787"></p><p>②通过 @Result 注解手动映射封装</p><p><img src="/2024/05/13/JavaWeb/image-20240427150132791-1714791835747-148.png" alt="image-20240427150132791"></p><p>③字段自动映射到驼峰命名的设置</p><p><img src="/2024/05/13/JavaWeb/image-20240427150319076-1714791835747-146.png" alt="image-20240427150319076"></p><h3 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h3><h4 id="EmpMapper-代码"><a href="#EmpMapper-代码" class="headerlink" title="[EmpMapper]代码"></a>[EmpMapper]代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.pojo.Emp;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmpMapper</span> &#123;</span><br><span class="line">    <span class="comment">//动态根据id删除员工操作</span></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from emp where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="comment">//返回值为此次操作影响了几条记录</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据主键id 更新 用户 操作</span></span><br><span class="line">    <span class="meta">@Update(&quot;update emp set &quot; +</span></span><br><span class="line"><span class="meta">            &quot;username=#&#123;username&#125;,name=#&#123;name&#125;,gender=#&#123;gender&#125;,image=#&#123;image&#125;,entrydate=#&#123;entrydate&#125;,dept_id=#&#123;deptId&#125;,update_time=#&#123;updateTime&#125; &quot; +</span></span><br><span class="line"><span class="meta">            &quot;where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Emp e)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插入数据</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into emp(username,name, gender, image, job, entrydate, dept_id, create_time, update_time) &quot; +</span></span><br><span class="line"><span class="meta">            &quot;value(#&#123;username&#125;,#&#123;name&#125;,#&#123;gender&#125;,#&#123;image&#125;,#&#123;job&#125;,#&#123;entrydate&#125;,#&#123;deptId&#125;,#&#123;createTime&#125;,#&#123;updateTime&#125;);&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(Emp e)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据用户id查询数据</span></span><br><span class="line">    <span class="meta">@Select(&quot;select id, username, password, name, gender, image, job, entrydate, dept_id deptId, create_time createTime, update_time updateTime from emp where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Emp <span class="title function_">select</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//条件查询</span></span><br><span class="line">    <span class="comment">//使用$是为了直接拼接 可以使用模糊匹配</span></span><br><span class="line">    <span class="comment">//如果是使用#则是预编译的方法</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from emp where name like &#x27;%$&#123;name&#125;%&#x27;and gender = #&#123;gender&#125; and entrydate between #&#123;begin&#125; and #&#123;end&#125; order by update_time desc&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">select_list</span><span class="params">(String name, Short gender, LocalDate begin, LocalDate end)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="SpringbootMybatisCrudApplicationTests-代码"><a href="#SpringbootMybatisCrudApplicationTests-代码" class="headerlink" title="[SpringbootMybatisCrudApplicationTests]代码"></a>[SpringbootMybatisCrudApplicationTests]代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.mapper.EmpMapper;</span><br><span class="line"><span class="keyword">import</span> com.itheima.pojo.Emp;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.ParameterResolutionDelegate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpringbootMybatisCrudApplicationTests</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EmpMapper empMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">TestDelete</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">17</span>;</span><br><span class="line">        empMapper.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>();</span><br><span class="line">        e.setUsername(<span class="string">&quot;zw&quot;</span>);</span><br><span class="line">        e.setName(<span class="string">&quot;占稳&quot;</span>);</span><br><span class="line">        e.setImage(<span class="string">&quot;TEST.jpg&quot;</span>);</span><br><span class="line">        e.setGender((<span class="type">short</span>)<span class="number">1</span>);</span><br><span class="line">        e.setJob((<span class="type">short</span>)<span class="number">1</span>);</span><br><span class="line">        e.setEntrydate(LocalDate.of(<span class="number">2000</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        e.setCreateTime(LocalDateTime.now());</span><br><span class="line">        e.setUpdateTime(LocalDateTime.now());</span><br><span class="line">        e.setDeptId(<span class="number">1</span>);</span><br><span class="line">        empMapper.insert(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testupdate</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>();</span><br><span class="line">        e.setId(<span class="number">24</span>);<span class="comment">//代表要更新的用户的id</span></span><br><span class="line">        <span class="comment">//下面设置的数据 都是要更新的数据</span></span><br><span class="line">        e.setUsername(<span class="string">&quot;new_zw&quot;</span>);</span><br><span class="line">        e.setName(<span class="string">&quot;new_占稳&quot;</span>);</span><br><span class="line">        e.setImage(<span class="string">&quot;TEST.jpg&quot;</span>);</span><br><span class="line">        e.setGender((<span class="type">short</span>)<span class="number">1</span>);</span><br><span class="line">        e.setJob((<span class="type">short</span>)<span class="number">1</span>);</span><br><span class="line">        e.setEntrydate(LocalDate.of(<span class="number">2000</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        e.setUpdateTime(LocalDateTime.now());</span><br><span class="line">        e.setDeptId(<span class="number">1</span>);</span><br><span class="line">        empMapper.update(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testselect</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">e</span> <span class="operator">=</span> empMapper.select(id);</span><br><span class="line">        System.out.println(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test_select_list</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;Emp&gt; emp_list = empMapper.select_list(<span class="string">&quot;张&quot;</span>,(<span class="type">short</span>)(<span class="number">1</span>),LocalDate.of(<span class="number">2010</span>,<span class="number">1</span>,<span class="number">1</span>),LocalDate.of(<span class="number">2020</span>,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">        System.out.println(emp_list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="71-通过XML映射配置文件来配置sql语句"><a href="#71-通过XML映射配置文件来配置sql语句" class="headerlink" title="71.通过XML映射配置文件来配置sql语句"></a>71.通过XML映射配置文件来配置sql语句</h2><p>使用注解来映射简单语句会使代码显得更加简洁</p><p>但对于稍微复杂一点的语句，lava注解不仅力不队心 还会让你本就复杂的SQL语句更加银乱不堪 </p><p>因此，如果你需要做一些很复杂的操作，最好用XML来映射语句</p><p><img src="/2024/05/13/JavaWeb/image-20240427152325736-1714791835747-150.png" alt="image-20240427152325736"></p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>①</p><p><img src="/2024/05/13/JavaWeb/image-20240427153644061-1714791835747-149.png" alt="image-20240427153644061"></p><p>②</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.mybatis.example.BlogMapper&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectBlog&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">    select * from Blog where id = #&#123;id&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240427153842872-1714791835747-151.png" alt="image-20240427153842872"></p><p>③</p><p><img src="/2024/05/13/JavaWeb/image-20240427154143582-1714791835747-152.png" alt="image-20240427154143582"></p><h2 id="72-动态SQL语句"><a href="#72-动态SQL语句" class="headerlink" title="72.动态SQL语句"></a>72.动态SQL语句</h2><p><img src="/2024/05/13/JavaWeb/image-20240427155150030-1714791835747-153.png" alt="image-20240427155150030"></p><h3 id="①if-标签"><a href="#①if-标签" class="headerlink" title="①if 标签"></a>①if 标签</h3><p><img src="/2024/05/13/JavaWeb/image-20240427160050265-1714791835747-158.png" alt="image-20240427160050265"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.EmpMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;select_list&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.pojo.Emp&quot;</span>&gt;</span></span><br><span class="line">        -- resultType 配置的是单条记录的返回值类型的全命名</span><br><span class="line">        select *</span><br><span class="line">        from emp</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;name!=null&quot;</span>&gt;</span></span><br><span class="line">                name like &#x27;%$&#123;name&#125;%&#x27;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gender!=null&quot;</span>&gt;</span></span><br><span class="line">                and gender = #&#123;gender&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gender!=null and end!=null&quot;</span>&gt;</span></span><br><span class="line">                and entrydate between #&#123;begin&#125; and #&#123;end&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">        order by update_time desc</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="②where标签"><a href="#②where标签" class="headerlink" title="②where标签"></a>②where标签</h3><p><img src="/2024/05/13/JavaWeb/image-20240427160641601-1714791835747-155.png" alt="image-20240427160641601"></p><h3 id="③set标签"><a href="#③set标签" class="headerlink" title="③set标签"></a>③set标签</h3><p><img src="/2024/05/13/JavaWeb/image-20240427160651489-1714791835747-156.png" alt="image-20240427160651489"></p><h3 id="④foreach标签"><a href="#④foreach标签" class="headerlink" title="④foreach标签"></a>④foreach标签</h3><p><img src="/2024/05/13/JavaWeb/image-20240427161445434-1714791835747-154.png" alt="image-20240427161445434"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByid&quot;</span>&gt;</span></span><br><span class="line">    delete</span><br><span class="line">    from emp</span><br><span class="line">    where id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="⑤sql-include标签"><a href="#⑤sql-include标签" class="headerlink" title="⑤sql include标签"></a>⑤sql include标签</h3><p><img src="/2024/05/13/JavaWeb/image-20240427161646791-1714791835747-157.png" alt="image-20240427161646791"></p><h2 id="73-开发规范（rest风格）"><a href="#73-开发规范（rest风格）" class="headerlink" title="73.开发规范（rest风格）"></a>73.开发规范（rest风格）</h2><p>请求格式-post put get delete</p><p><img src="/2024/05/13/JavaWeb/image-20240428110030113-1714791835747-160.png" alt="image-20240428110030113"></p><h2 id="74-三层架构-各自的作用"><a href="#74-三层架构-各自的作用" class="headerlink" title="74.三层架构 各自的作用"></a>74.三层架构 各自的作用</h2><p><img src="/2024/05/13/JavaWeb/image-20240428120205197-1714791835747-159.png" alt="image-20240428120205197"></p><p><img src="/2024/05/13/JavaWeb/R%5DBKQHADGC48H1%5BUNJ7B2%7B5.png"></p><h2 id="75-分页查询的改进（PageHelper）"><a href="#75-分页查询的改进（PageHelper）" class="headerlink" title="75.分页查询的改进（PageHelper）"></a>75.分页查询的改进（PageHelper）</h2><p>由于分页查询的代码固定并且繁琐 使用PageHelper插件进行快速编写</p><p><img src="/2024/05/13/JavaWeb/image-20240428133829375-1714791835747-161.png" alt="image-20240428133829375"></p><p><img src="/2024/05/13/JavaWeb/image-20240428133651150-1714791835747-162.png" alt="image-20240428133651150"></p><h2 id="76-Web开发中一些的注释含义"><a href="#76-Web开发中一些的注释含义" class="headerlink" title="76.Web开发中一些的注释含义"></a>76.Web开发中一些的注释含义</h2><h3 id="①-Mapper"><a href="#①-Mapper" class="headerlink" title="① @Mapper"></a>① @Mapper</h3><p>代表了是Mapper类</p><h3 id="②-RestController"><a href="#②-RestController" class="headerlink" title="② @RestController"></a>② @RestController</h3><p> Controller类</p><h3 id="③-Service"><a href="#③-Service" class="headerlink" title="③ @Service"></a>③ @Service</h3><p> Service类（放在实现类上 而不是接口上）</p><h3 id="④-Autowired和-Component"><a href="#④-Autowired和-Component" class="headerlink" title="④ @Autowired和@Component"></a>④ @Autowired和@Component</h3><p>他们搭配使用 目的是为了交给容器管理 依赖注入</p><h3 id="⑤-Data-NoArgsConstructor-AllArgsConstructor"><a href="#⑤-Data-NoArgsConstructor-AllArgsConstructor" class="headerlink" title="⑤ @Data @NoArgsConstructor  @AllArgsConstructor"></a>⑤ @Data @NoArgsConstructor  @AllArgsConstructor</h3><p>他们简化了操作 Data代表了各个参数的get和set方法</p><p>NoArgsConstructor是无参构造 AllArgsConstructor是全参构造</p><h3 id="⑥-Select-Delete-Insert等"><a href="#⑥-Select-Delete-Insert等" class="headerlink" title="⑥ @Select @Delete @Insert等"></a>⑥ @Select @Delete @Insert等</h3><p>都是表示为数据库的操作 他们会执行sql语句并返回给函数的返回值</p><h3 id="⑦-PostMapping-PostMapping-GetMapping等"><a href="#⑦-PostMapping-PostMapping-GetMapping等" class="headerlink" title="⑦@PostMapping @PostMapping @GetMapping等"></a>⑦@PostMapping @PostMapping @GetMapping等</h3><p>都是代表为各种类型的前端请求</p><h3 id="⑧-Slf4j-代表了生成了一个可生成日志的类"><a href="#⑧-Slf4j-代表了生成了一个可生成日志的类" class="headerlink" title="⑧ @Slf4j 代表了生成了一个可生成日志的类"></a>⑧ @Slf4j 代表了生成了一个可生成日志的类</h3><p>通过</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log.info(<span class="string">&quot;执行删除操作：ids:&#123;&#125;&quot;</span>,ids);</span><br></pre></td></tr></table></figure><p>来得到日志信息</p><h3 id="⑨-RequestBody"><a href="#⑨-RequestBody" class="headerlink" title="⑨ @RequestBody"></a>⑨ @RequestBody</h3><p>表示该参数应该从请求的 body（请求体）中获取数据 将请求体中的数据绑定到方法参数上 以便在后续的处理逻辑中使用</p><h3 id="⑩-PathVariable"><a href="#⑩-PathVariable" class="headerlink" title="⑩ @PathVariable"></a>⑩ @PathVariable</h3><p>PathVariable 注解允许url中的占位符中的值提取出来 并将其作为方法的参数进行处理</p><h3 id="⑪-RequestParam-defaultValue-“1”"><a href="#⑪-RequestParam-defaultValue-“1”" class="headerlink" title="⑪@RequestParam(defaultValue &#x3D; “1”)"></a>⑪@RequestParam(defaultValue &#x3D; “1”)</h3><p>可以设置参数的默认值</p><h3 id="⑫-DateTimeFormat-pattern-“yyyy-MM-dd”"><a href="#⑫-DateTimeFormat-pattern-“yyyy-MM-dd”" class="headerlink" title="⑫ @DateTimeFormat(pattern &#x3D; “yyyy-MM-dd”)"></a>⑫ @DateTimeFormat(pattern &#x3D; “yyyy-MM-dd”)</h3><p>设置日期格式</p><p>⑬⑭⑮⑯⑰⑱⑲⑳</p><h2 id="77-文件上传"><a href="#77-文件上传" class="headerlink" title="77.文件上传"></a>77.文件上传</h2><p><img src="/2024/05/13/JavaWeb/image-20240504110810296.png" alt="image-20240504110810296"></p><p><img src="/2024/05/13/JavaWeb/image-20240504111701202.png" alt="image-20240504111701202"></p><h4 id="文件上传端代码"><a href="#文件上传端代码" class="headerlink" title="文件上传端代码"></a>文件上传端代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>上传文件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--加上&quot;multipart/form-data&quot;才能正常提交文件的内容 否则只提交文件的名称--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/upload&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">        姓名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        年龄: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        头像: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;image&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="服务端接受文件并将文件存储到本地代码"><a href="#服务端接受文件并将文件存储到本地代码" class="headerlink" title="服务端接受文件并将文件存储到本地代码"></a>服务端接受文件并将文件存储到本地代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.pojo.Result;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UploadController</span> &#123;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">upload</span><span class="params">(String username, Integer age, MultipartFile image)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;文件上传: &#123;&#125;, &#123;&#125;, &#123;&#125;&quot;</span>,username,age,image);</span><br><span class="line">        <span class="comment">// 1.将文件存储到服务器的磁盘目录中 D:\study_images</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 需要构建唯一的文件名（不能重复） 构建uuid（通用唯一识别码）</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">OriginalFilename</span> <span class="operator">=</span> image.getOriginalFilename();</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> OriginalFilename.indexOf(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="comment">//获取文件后缀名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">extname</span> <span class="operator">=</span> OriginalFilename.substring(index);</span><br><span class="line">        <span class="comment">//uuid+后缀名(.txt等)构建新文件名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">newFileName</span> <span class="operator">=</span> UUID.randomUUID().toString()+extname;</span><br><span class="line">        log.info(newFileName);</span><br><span class="line">        image.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\study_images\\&quot;</span>+newFileName));</span><br><span class="line">        <span class="keyword">return</span> Result.success();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240504115423342.png" alt="image-20240504115423342"></p><p><img src="/2024/05/13/JavaWeb/image-20240504120214861.png" alt="image-20240504120214861"></p><h4 id="文件上传大小的配置-在-application-properties-中配置"><a href="#文件上传大小的配置-在-application-properties-中配置" class="headerlink" title="文件上传大小的配置(在 application.properties 中配置)"></a>文件上传大小的配置(在 <a href="Study_Code%5Cweb_study%5Ctlias-web-managment%5Ctlias-web-managment%5Csrc%5Cmain%5Cresources%5Capplication.properties">application.properties</a> 中配置)</h4><p><img src="/2024/05/13/JavaWeb/image-20240504115613705.png" alt="image-20240504115613705"></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置单个文件上传大小配置</span></span><br><span class="line"><span class="attr">spring.servlet.multipart.max-file-size</span>=<span class="string">10MB</span></span><br><span class="line"><span class="comment">#配置单个请求最大大小限制(一次请求可以上传多个文件)</span></span><br><span class="line"><span class="attr">spring.servlet.multipart.max-request-size</span>=<span class="string">100MB</span></span><br></pre></td></tr></table></figure><h2 id="78-文件存储到阿里云OSS"><a href="#78-文件存储到阿里云OSS" class="headerlink" title="78.文件存储到阿里云OSS"></a>78.文件存储到阿里云OSS</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.ClientException;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSS;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.common.auth.*;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSClientBuilder;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSException;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.PutObjectRequest;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.PutObjectResult;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// Endpoint以华东1（杭州）为例，其它Region请按实际情况填写。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">endpoint</span> <span class="operator">=</span> <span class="string">&quot;https://oss-cn-hangzhou.aliyuncs.com&quot;</span>;</span><br><span class="line">        <span class="comment">// 从环境变量中获取访问凭证。运行本代码示例之前，请确保已设置环境变量OSS_ACCESS_KEY_ID和OSS_ACCESS_KEY_SECRET。</span></span><br><span class="line">        <span class="type">EnvironmentVariableCredentialsProvider</span> <span class="variable">credentialsProvider</span> <span class="operator">=</span> CredentialsProviderFactory.newEnvironmentVariableCredentialsProvider();</span><br><span class="line">        <span class="comment">// 填写Bucket名称，例如examplebucket。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">bucketName</span> <span class="operator">=</span> <span class="string">&quot;web-tlias-zw-study&quot;</span>;</span><br><span class="line">        <span class="comment">// 填写Object完整路径，完整路径中不能包含Bucket名称，例如exampledir/exampleobject.txt。</span></span><br><span class="line">        <span class="comment">//  意思是 存储到OSS中的地址和名字</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">objectName</span> <span class="operator">=</span> <span class="string">&quot;test01.pdf&quot;</span>;</span><br><span class="line">        <span class="comment">// 填写本地文件的完整路径，例如D:\\localpath\\examplefile.txt。</span></span><br><span class="line">        <span class="comment">// 意思是上传哪个文件？文件的地址是什么？</span></span><br><span class="line">        String filePath= <span class="string">&quot;C:\\Users\\ZW\\Desktop\\Temporary\\准考证.pdf&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建OSSClient实例。</span></span><br><span class="line">        <span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(endpoint, credentialsProvider);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath);</span><br><span class="line">            <span class="comment">// 创建PutObjectRequest对象。</span></span><br><span class="line">            <span class="type">PutObjectRequest</span> <span class="variable">putObjectRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PutObjectRequest</span>(bucketName, objectName, inputStream);</span><br><span class="line">            <span class="comment">// 创建PutObject请求。</span></span><br><span class="line">            <span class="type">PutObjectResult</span> <span class="variable">result</span> <span class="operator">=</span> ossClient.putObject(putObjectRequest);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OSSException oe) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Caught an OSSException, which means your request made it to OSS, &quot;</span></span><br><span class="line">                    + <span class="string">&quot;but was rejected with an error response for some reason.&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;Error Message:&quot;</span> + oe.getErrorMessage());</span><br><span class="line">            System.out.println(<span class="string">&quot;Error Code:&quot;</span> + oe.getErrorCode());</span><br><span class="line">            System.out.println(<span class="string">&quot;Request ID:&quot;</span> + oe.getRequestId());</span><br><span class="line">            System.out.println(<span class="string">&quot;Host ID:&quot;</span> + oe.getHostId());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException ce) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Caught an ClientException, which means the client encountered &quot;</span></span><br><span class="line">                    + <span class="string">&quot;a serious internal problem while trying to communicate with OSS, &quot;</span></span><br><span class="line">                    + <span class="string">&quot;such as not being able to access the network.&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;Error Message:&quot;</span> + ce.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (ossClient != <span class="literal">null</span>) &#123;</span><br><span class="line">                ossClient.shutdown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果发生了报错信息（[ERROR] Command execution failed.）</p><p>那么需要再xml中加入下面的插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>exec-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">classpathScope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">classpathScope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240504130537469.png" alt="image-20240504130537469"></p><h2 id="79-阿里云集成"><a href="#79-阿里云集成" class="headerlink" title="79.阿里云集成"></a>79.阿里云集成</h2><p><img src="/2024/05/13/JavaWeb/image-20240504130856731.png" alt="image-20240504130856731"></p><h4 id="AliOSSUtils-java-工具类"><a href="#AliOSSUtils-java-工具类" class="headerlink" title="AliOSSUtils.java 工具类"></a><a href="Study_Code%5Cweb_study%5Ctlias-web-managment%5Ctlias-web-managment%5Csrc%5Cmain%5Cjava%5Ccom%5Citheima%5Cutils%5CAliOSSUtils.java">AliOSSUtils.java</a> 工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSS;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSClientBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 阿里云 OSS 工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliOSSUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">endpoint</span> <span class="operator">=</span> <span class="string">&quot;https://oss-cn-hangzhou.aliyuncs.com&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">accessKeyId</span> <span class="operator">=</span> <span class="string">&quot;LTAI5tBuBtACUg1QvnfjMzFj&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">accessKeySecret</span> <span class="operator">=</span> <span class="string">&quot;bDD2xF2Km7zC9F2rrKP3aBkZSLovu3&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">bucketName</span> <span class="operator">=</span> <span class="string">&quot;web-tlias-zw-study&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实现上传图片到OSS</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">upload</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 获取上传的文件的输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> file.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 避免文件覆盖</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> UUID.randomUUID().toString() + originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//上传文件到 OSS</span></span><br><span class="line">        <span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line">        ossClient.putObject(bucketName, fileName, inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文件访问路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> endpoint.split(<span class="string">&quot;//&quot;</span>)[<span class="number">0</span>] + <span class="string">&quot;//&quot;</span> + bucketName + <span class="string">&quot;.&quot;</span> + endpoint.split(<span class="string">&quot;//&quot;</span>)[<span class="number">1</span>] + <span class="string">&quot;/&quot;</span> + fileName;</span><br><span class="line">        <span class="comment">// 关闭ossClient</span></span><br><span class="line">        ossClient.shutdown();</span><br><span class="line">        <span class="keyword">return</span> url;<span class="comment">// 把上传到oss的路径返回</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="UploadController-java-控制类"><a href="#UploadController-java-控制类" class="headerlink" title="UploadController.java 控制类"></a><a href="Study_Code%5Cweb_study%5Ctlias-web-managment%5Ctlias-web-managment%5Csrc%5Cmain%5Cjava%5Ccom%5Citheima%5Ccontroller%5CUploadController.java">UploadController.java</a> 控制类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.pojo.Result;</span><br><span class="line"><span class="keyword">import</span> com.itheima.utils.AliOSSUtils;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UploadController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AliOSSUtils aliOSSUtils;</span><br><span class="line">    <span class="comment">//本地存储文件</span></span><br><span class="line">    <span class="comment">/*@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line"><span class="comment">    public Result upload(String username, Integer age, MultipartFile image) throws IOException &#123;</span></span><br><span class="line"><span class="comment">        log.info(&quot;文件上传: &#123;&#125;, &#123;&#125;, &#123;&#125;&quot;,username,age,image);</span></span><br><span class="line"><span class="comment">        // 1.将文件存储到服务器的磁盘目录中 D:\study_images</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        // 需要构建唯一的文件名（不能重复） 构建uuid（通用唯一识别码）</span></span><br><span class="line"><span class="comment">        String OriginalFilename = image.getOriginalFilename();</span></span><br><span class="line"><span class="comment">        int index = OriginalFilename.indexOf(&quot;.&quot;);</span></span><br><span class="line"><span class="comment">        //获取文件后缀名</span></span><br><span class="line"><span class="comment">        String extname = OriginalFilename.substring(index);</span></span><br><span class="line"><span class="comment">        //uuid+后缀名(.txt等)构建新文件名</span></span><br><span class="line"><span class="comment">        String newFileName = UUID.randomUUID().toString()+extname;</span></span><br><span class="line"><span class="comment">        log.info(newFileName);</span></span><br><span class="line"><span class="comment">        image.transferTo(new File(&quot;D:\\study_images\\&quot;+newFileName));</span></span><br><span class="line"><span class="comment">        return Result.success();</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//阿里云OSS存储文件</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">upload</span><span class="params">(MultipartFile image)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;文件上传:文件名为&#123;&#125;&quot;</span>,image.getOriginalFilename());</span><br><span class="line">        <span class="comment">//调用阿里云OSS工具类进行文件上传</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> aliOSSUtils.upload(image);</span><br><span class="line">        log.info(<span class="string">&quot;文件上传完成，文件访问的url为&#123;&#125;&quot;</span>,url);</span><br><span class="line">        <span class="keyword">return</span> Result.success(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="80-参数配置化"><a href="#80-参数配置化" class="headerlink" title="80.参数配置化"></a>80.参数配置化</h2><p>多个项目均依赖 不便维护 但是 <a href="Study_Code%5Cweb_study%5Ctlias-web-managment%5Ctlias-web-managment%5Csrc%5Cmain%5Cresources%5Capplication.properties">application.properties</a> 只有一个 将参数配置到里面去后更加方便整洁</p><p><img src="/2024/05/13/JavaWeb/image-20240504145401016.png" alt="image-20240504145401016"></p><p><img src="/2024/05/13/JavaWeb/image-20240504145315504.png" alt="image-20240504145315504"></p><h2 id="81-Yml配置文件"><a href="#81-Yml配置文件" class="headerlink" title="81.Yml配置文件"></a>81.Yml配置文件</h2><p> <img src="/2024/05/13/JavaWeb/image-20240504150021073.png" alt="image-20240504150021073"><img src="/2024/05/13/JavaWeb/image-20240504150002761.png" alt="image-20240504150002761"></p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p><img src="/2024/05/13/JavaWeb/image-20240504150118185.png" alt="image-20240504150118185"></p><p><img src="/2024/05/13/JavaWeb/image-20240504150325918.png" alt="image-20240504150325918"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#数据库的连接信息</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/tlias</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment">#文件上传的配置</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">10MB</span></span><br><span class="line">      <span class="attr">max-request-size:</span> <span class="string">100MB</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="comment">#日志信息的配置</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment">#输出到控制台</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">    <span class="comment">#驼峰命名的自动映射</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#阿里云OSS</span></span><br><span class="line"><span class="attr">aliyun:</span></span><br><span class="line">  <span class="attr">oss:</span></span><br><span class="line">    <span class="attr">endpoint:</span> <span class="string">https://oss-cn-hangzhou.aliyuncs.com</span></span><br><span class="line">    <span class="attr">accessKeyId:</span> <span class="string">LTAI5tBuBtACUg1QvnfjMzFj</span></span><br><span class="line">    <span class="attr">accessKeySecret:</span> <span class="string">bDD2xF2Km7zC9F2rrKP3aBkZSLovu3</span></span><br><span class="line">    <span class="attr">bucketName:</span> <span class="string">web-tlias-zw-study</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="82-简化注入方式的配置"><a href="#82-简化注入方式的配置" class="headerlink" title="82.简化注入方式的配置"></a>82.简化注入方式的配置</h2><p><img src="/2024/05/13/JavaWeb/image-20240504154019529.png" alt="image-20240504154019529"></p><p><img src="/2024/05/13/JavaWeb/image-20240504154109235.png" alt="image-20240504154109235"></p><p>创建一个 <a href="Study_Code%5Cweb_study%5Ctlias-web-managment%5Ctlias-web-managment%5Csrc%5Cmain%5Cjava%5Ccom%5Citheima%5Cutils%5CAliOSSProperties.java">AliOSSProperties.java</a>  在其中声明各个参数 要求与配置 <a href="Study_Code%5Cweb_study%5Ctlias-web-managment%5Ctlias-web-managment%5Csrc%5Cmain%5Cresources%5Capplication.yml">application.yml</a> 的参数一致</p><p><img src="/2024/05/13/JavaWeb/image-20240504161606083.png" alt="image-20240504161606083"></p><p>在 <a href="Study_Code%5Cweb_study%5Ctlias-web-managment%5Ctlias-web-managment%5Csrc%5Cmain%5Cjava%5Ccom%5Citheima%5Cutils%5CAliOSSUtils.java">AliOSSUtils.java</a> 中获取各个参数</p><p><img src="/2024/05/13/JavaWeb/image-20240504160539290.png" alt="image-20240504160539290"></p><h2 id="83-登录校验"><a href="#83-登录校验" class="headerlink" title="83.登录校验"></a>83.登录校验</h2><p><img src="/2024/05/13/JavaWeb/image-20240505110441250.png" alt="image-20240505110441250"></p><h3 id="会话技术"><a href="#会话技术" class="headerlink" title="会话技术"></a>会话技术</h3><p><img src="/2024/05/13/JavaWeb/image-20240505110859282.png" alt="image-20240505110859282"></p><h4 id="cookie技术"><a href="#cookie技术" class="headerlink" title="cookie技术"></a>cookie技术</h4><p><img src="/2024/05/13/JavaWeb/image-20240505112022204.png" alt="image-20240505112022204"></p><h4 id="session技术"><a href="#session技术" class="headerlink" title="session技术"></a>session技术</h4><p><img src="/2024/05/13/JavaWeb/image-20240505112623225.png" alt="image-20240505112623225"></p><h4 id="令牌技术（主流技术）"><a href="#令牌技术（主流技术）" class="headerlink" title="令牌技术（主流技术）"></a>令牌技术（主流技术）</h4><p><img src="/2024/05/13/JavaWeb/image-20240505112750643.png" alt="image-20240505112750643"></p><h2 id="84-JWT令牌技术"><a href="#84-JWT令牌技术" class="headerlink" title="84.JWT令牌技术"></a>84.JWT令牌技术</h2><h4 id="JWT是什么？"><a href="#JWT是什么？" class="headerlink" title="JWT是什么？"></a>JWT是什么？</h4><p><img src="/2024/05/13/JavaWeb/image-20240505113136097.png" alt="image-20240505113136097"></p><p><img src="/2024/05/13/JavaWeb/image-20240505113239998.png" alt="image-20240505113239998"></p><h4 id="JWT令牌的生成"><a href="#JWT令牌的生成" class="headerlink" title="JWT令牌的生成"></a>JWT令牌的生成</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    生成JWT令牌</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGenJwt</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Map&lt;String, Object&gt; claims = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        claims.put(<span class="string">&quot;id&quot;</span>,<span class="number">1</span>);</span><br><span class="line">        claims.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">jwt</span> <span class="operator">=</span> Jwts.builder()</span><br><span class="line">                .signWith(SignatureAlgorithm.HS256, <span class="string">&quot;zw666&quot;</span>)<span class="comment">//设置 签名算法(密钥必须大于三位）)</span></span><br><span class="line">                .setClaims(claims)<span class="comment">//设置 自定义的内容（载荷部分）</span></span><br><span class="line">                .setExpiration(<span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis() + <span class="number">3600</span> * <span class="number">1000</span>))<span class="comment">//设置 有效期（一个小时）</span></span><br><span class="line">                .compact();</span><br><span class="line">        System.out.println(jwt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240505115246055.png" alt="image-20240505115246055"></p><p>Jwt令牌的解析校验</p><p><img src="/2024/05/13/JavaWeb/image-20240505115458544.png" alt="image-20240505115458544"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  解析jwt</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testParseJwt</span><span class="params">()</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> Jwts.parser()</span><br><span class="line">              .setSigningKey(<span class="string">&quot;zw666&quot;</span>) <span class="comment">// 指定秘钥</span></span><br><span class="line">              .parseClaimsJws(<span class="string">&quot;eyJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoidG9tIiwiaWQiOjEsImV4cCI6MTcxNDg4NDMyOH0.UABZdznAir57L0_XZEVz7K6k2tNlvqD3vq4iJaKbCrg&quot;</span>)</span><br><span class="line">              .getBody();</span><br><span class="line">      System.out.println(claims);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/05/13/JavaWeb/image-20240505115211158.png" alt="image-20240505115211158"></p><p><img src="/2024/05/13/JavaWeb/image-20240505114710065.png" alt="image-20240505114710065"></p><h2 id="85-统一拦截校验令牌技术-选择其一即可"><a href="#85-统一拦截校验令牌技术-选择其一即可" class="headerlink" title="85.统一拦截校验令牌技术(选择其一即可)"></a>85.统一拦截校验令牌技术(选择其一即可)</h2><h3 id="①过滤器Filter"><a href="#①过滤器Filter" class="headerlink" title="①过滤器Filter"></a>①过滤器Filter</h3><p><img src="/2024/05/13/JavaWeb/image-20240505121138338.png" alt="image-20240505121138338"></p><p><img src="/2024/05/13/JavaWeb/image-20240505124416898.png" alt="image-20240505124416898"></p><p><img src="/2024/05/13/JavaWeb/image-20240505130501422.png" alt="image-20240505130501422"></p><h4 id="Filter演示代码实现"><a href="#Filter演示代码实现" class="headerlink" title="Filter演示代码实现"></a>Filter演示代码实现</h4><p>注意在启动类中必须加上注释</p><p><img src="/2024/05/13/JavaWeb/image-20240505122453732.png" alt="image-20240505122453732"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebFilter(urlPatterns = &quot;/*&quot;)</span><span class="comment">// &quot;/*&quot; 代表拦截所有路径</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//初始化方法 调用一次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;init方法执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// 拦截到请求后都会调用 调用多次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;拦截到请求&quot;</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        执行令牌检验逻辑....</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">//拦截到请求后 需要进行放行操作</span></span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span><span class="comment">//销毁方法 调用一次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;destroy方法执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Filter完整代码实现"><a href="#Filter完整代码实现" class="headerlink" title="Filter完整代码实现"></a>Filter完整代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonObject;</span><br><span class="line"><span class="keyword">import</span> com.itheima.pojo.Result;</span><br><span class="line"><span class="keyword">import</span> com.itheima.utils.JwtUtils;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@WebFilter(urlPatterns = &quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginCheckFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">resp</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">//1.获取请求url</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> req.getRequestURL().toString();</span><br><span class="line">        log.info(<span class="string">&quot;请求的url为&#123;&#125;&quot;</span>,url);</span><br><span class="line">        <span class="comment">//2.判断请求url中是否包含login 如果包含说明是登录操作放行</span></span><br><span class="line">        <span class="keyword">if</span>(url.contains(<span class="string">&quot;login&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//放行</span></span><br><span class="line">            filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.获取请求头的令牌（token）</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">jwt</span> <span class="operator">=</span> req.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">        <span class="comment">//4.判断令牌是否存在 如果不存在 （未登录）</span></span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.hasLength(jwt))</span><br><span class="line">        &#123;</span><br><span class="line">            log.info(<span class="string">&quot;请求头token为空 返回未登录信息&quot;</span>);</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span>  Result.error(<span class="string">&quot;NOT_LOGIN&quot;</span>);</span><br><span class="line">            <span class="comment">//手动将对象转为json格式对象</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">notLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            resp.getWriter().write(notLogin);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.解析token 如果解析失败 返回错误（未登录）</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            JwtUtils.parseJWT(jwt);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            log.info(<span class="string">&quot;解析令牌失败 返回未登录的错误信息&quot;</span>);</span><br><span class="line">            <span class="type">Result</span> <span class="variable">error</span> <span class="operator">=</span>  Result.error(<span class="string">&quot;NOT_LOGIN&quot;</span>);</span><br><span class="line">            <span class="comment">//手动将对象转为json格式对象</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">notLogin</span> <span class="operator">=</span> JSONObject.toJSONString(error);</span><br><span class="line">            resp.getWriter().write(notLogin);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.放行</span></span><br><span class="line">        log.info(<span class="string">&quot;令牌合法&quot;</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="②拦截器Interceptor"><a href="#②拦截器Interceptor" class="headerlink" title="②拦截器Interceptor"></a>②拦截器Interceptor</h3><p><img src="/2024/05/13/JavaWeb/image-20240505135011923.png" alt="image-20240505135011923"></p><p><img src="/2024/05/13/JavaWeb/image-20240505140532219.png" alt="image-20240505140532219"></p><p><img src="/2024/05/13/JavaWeb/image-20240505140633119.png" alt="image-20240505140633119"></p><p><img src="/2024/05/13/JavaWeb/image-20240505141420483.png" alt="image-20240505141420483"></p><h4 id="拦截器的实现代码"><a href="#拦截器的实现代码" class="headerlink" title="拦截器的实现代码"></a>拦截器的实现代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.interceptor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginCheckInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//目标资源方法运行前运行 返回true：放行 返回false：不放行</span></span><br><span class="line">      <span class="comment">//在这个方法里面实现校验的逻辑</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;preHandle运行&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// 目标资源方法运行后运行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;postHandle运行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//试图渲染完毕后运行 最后运行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;afterCompletion运行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="拦截器的注册代码"><a href="#拦截器的注册代码" class="headerlink" title="拦截器的注册代码"></a>拦截器的注册代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.interceptor.LoginCheckInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span><span class="comment">//配置类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginCheckInterceptor loginCheckInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册拦截器</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//addPathPatterns(&quot;/**&quot;)代表拦截所有资源</span></span><br><span class="line">        registry.addInterceptor(loginCheckInterceptor).addPathPatterns(<span class="string">&quot;/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="86-异常处理"><a href="#86-异常处理" class="headerlink" title="86.异常处理"></a>86.异常处理</h2><p><img src="/2024/05/13/JavaWeb/image-20240505142327440.png" alt="image-20240505142327440"></p><p><img src="/2024/05/13/JavaWeb/image-20240505142730381.png" alt="image-20240505142730381"></p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.pojo.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局异常处理器</span></span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span> <span class="comment">// Exception.class代表捕获所有异常</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">ex</span><span class="params">(Exception exception)</span></span><br><span class="line">    &#123;</span><br><span class="line">        exception.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;对不起 操作失败 请联系管理员&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>First Blog</title>
      <link href="/2024/05/12/First-Blog/"/>
      <url>/2024/05/12/First-Blog/</url>
      
        <content type="html"><![CDATA[<h2 id="You-Only-Live-Once-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-—-Yolo"><a href="#You-Only-Live-Once-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-—-Yolo" class="headerlink" title="You Only Live Once.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—-Yolo"></a>You Only Live Once.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—-Yolo</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
